library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;

package nxPackage is

-- IOM

constant IOM_LINK_SPW_TX_DO             : integer := 0;
constant IOM_LINK_SPW_RX_DATA           : integer := 1;
constant IOM_LINK_DES_CHAIN_OUT         : integer := 2;
constant IOM_LINK_DELAY_VALUE_OUT_LAST  : integer := 3;
constant IOM_LINK_DELAY_VALUE_OUT_FIRST : integer := 8;
constant IOM_LINK_FLD                   : integer := 9;
constant IOM_LINK_SER_CHAIN_OUT         : integer := 10;
constant IOM_LINK_FLG                   : integer := 11;
constant IOM_LINK_DES_CHAIN_IN          : integer := 12;
constant IOM_LINK_SER_FCK_FABRIC        : integer := 13;
constant IOM_LINK_CTCK_FABRIC           : integer := 14;
constant IOM_LINK_SPW_TX_SO             : integer := 15;
constant IOM_LINK_DES_FCK_FABRIC        : integer := 16;
constant IOM_LINK_SPW_TX_OUT_CONFIG     : integer := 17;
constant IOM_LINK_SER_WPTR              : integer := 18;
constant IOM_LINK_SER_SCK_IOM           : integer := 19;
constant IOM_LINK_FZ                    : integer := 20;
constant IOM_LINK_SPW_RX_RCK            : integer := 21;
constant IOM_LINK_SER_CHAIN_IN          : integer := 22;
constant IOM_LINK_SER_RPTR              : integer := 23;
constant IOM_LINK_DES_SCK_IOM           : integer := 24;
constant IOM_LINK_DELAY_VALUE_IN_LAST   : integer := 25;
constant IOM_LINK_DELAY_VALUE_IN_FIRST  : integer := 30;
constant IOM_LINK_SPW_RX_DI             : integer := 31;
constant IOM_LINK_DCK                   : integer := 32;
constant IOM_LINK_DWR                   : integer := 33;
constant IOM_LINK_DES_RPTR              : integer := 34;
constant IOM_LINK_SER_SCK_FABRIC        : integer := 35;
constant IOM_LINK_DELAY_SELECT_LAST     : integer := 36;
constant IOM_LINK_DELAY_SELECT_FIRST    : integer := 37;
constant IOM_LINK_SPW_RX_IN_CONFIG      : integer := 38;
constant IOM_LINK_DES_WPTR              : integer := 39;
constant IOM_LINK_DES_SCK_FABRIC        : integer := 40;
constant IOM_LINK_SIZE                  : integer := 41;
constant IOM_LINK_OUTPUT_MAX            : integer := 29;

-- HSSL

constant CRX_LINK_SIZE                  : integer := 10;

constant CTX_LINK_SIZE                  : integer := 20;

component NX_LUT is
generic (
    lut_table : bit_vector(15 downto 0) := B"0000000000000000" -- truthTable t15 ... t0
);
port (
    I1	: in std_logic := '0';
    I2	: in std_logic := '0';
    I3	: in std_logic := '0';
    I4	: in std_logic := '0';
    O	: out std_logic := '0'
);
end component NX_LUT;

component NX_DFF is
generic (
    dff_edge   : bit := '0';
    dff_init   : bit := '0';
    dff_load   : bit := '0';
    dff_sync   : bit := '0';
    dff_ctxt   : std_logic := 'U'
);
port (
    I	: in std_logic := '0';
    CK	: in std_logic := '0';
    L	: in std_logic := '0';
    R	: in std_logic := '0';
    O	: out std_logic := '0'
);
end component NX_DFF;

component NX_BFF is
port (
    I	: in std_logic := '0';
    O	: out std_logic := '0'
);
end component NX_BFF;

component NX_DFR is
generic (
    location   : string := "";
    path       : integer := 0;
    mode       : integer := 0;
    dff_edge   : bit := '0';
    dff_init   : bit := '0';
    dff_load   : bit := '0';
    dff_sync   : bit := '0'
);
port (
    I	: in std_logic := '0';
    CK	: in std_logic := '0';
    L	: in std_logic := '0';
    R	: in std_logic := '0';
    O	: out std_logic := '0'
);
end component NX_DFR;

component NX_BFR is
generic (
    location   : string := "";
    path       : integer := 0;
    mode       : integer := 0
);
port (
    I	: in std_logic := '0';
    O	: out std_logic := '0'
);
end component NX_BFR;

component NX_CY is
generic (
    add_carry  : integer := 0      -- 0: low - 1: high - 2: propagate
);
port (
    A1	: in std_logic := '0';
    A2	: in std_logic := '0';
    A3	: in std_logic := '0';
    A4	: in std_logic := '0';
    B1	: in std_logic := '0';
    B2	: in std_logic := '0';
    B3	: in std_logic := '0';
    B4	: in std_logic := '0';
    CI	: in std_logic := '0';
    CO	: out std_logic := '0';
    S1	: out std_logic := '0';
    S2	: out std_logic := '0';
    S3	: out std_logic := '0';
    S4	: out std_logic := '0'
);
end component NX_CY;

component NX_RFB_U is
generic (
    rck_edge  : bit := '0';   -- 0: read clock rising edge - 1: read clock falling edge
    wck_edge  : bit := '0';   -- 0: write clock rising edge - 1: write clock falling edge
    mem_ctxt  : string := "" -- memory initial context
);
port (
    RCK	: in std_logic := '0';
    WCK	: in std_logic := '0';
    I1	: in std_logic := '0';
    I2	: in std_logic := '0';
    I3	: in std_logic := '0';
    I4	: in std_logic := '0';
    I5	: in std_logic := '0';
    I6	: in std_logic := '0';
    I7	: in std_logic := '0';
    I8	: in std_logic := '0';
    I9	: in std_logic := '0';
    I10	: in std_logic := '0';
    I11	: in std_logic := '0';
    I12	: in std_logic := '0';
    I13	: in std_logic := '0';
    I14	: in std_logic := '0';
    I15	: in std_logic := '0';
    I16	: in std_logic := '0';
    I17	: in std_logic := '0';
    I18	: in std_logic := '0';
    COR	: out std_logic := '0';
    ERR	: out std_logic := '0';
    O1	: out std_logic := '0';
    O2	: out std_logic := '0';
    O3	: out std_logic := '0';
    O4	: out std_logic := '0';
    O5	: out std_logic := '0';
    O6	: out std_logic := '0';
    O7	: out std_logic := '0';
    O8	: out std_logic := '0';
    O9	: out std_logic := '0';
    O10	: out std_logic := '0';
    O11	: out std_logic := '0';
    O12	: out std_logic := '0';
    O13	: out std_logic := '0';
    O14	: out std_logic := '0';
    O15	: out std_logic := '0';
    O16	: out std_logic := '0';
    O17	: out std_logic := '0';
    O18	: out std_logic := '0';
    RA1	: in std_logic := '0';
    RA2	: in std_logic := '0';
    RA3	: in std_logic := '0';
    RA4	: in std_logic := '0';
    RA5	: in std_logic := '0';
    RE	: in std_logic := '0';
    WA1	: in std_logic := '0';
    WA2	: in std_logic := '0';
    WA3	: in std_logic := '0';
    WA4	: in std_logic := '0';
    WA5	: in std_logic := '0';
    WE	: in std_logic := '0';
    XRCK	: out std_logic := '0';
    XRO1	: out std_logic := '0';
    XRO2	: out std_logic := '0';
    XRO3	: out std_logic := '0';
    XRO4	: out std_logic := '0';
    XRO5	: out std_logic := '0';
    XWCK	: out std_logic := '0';
    XWO1	: out std_logic := '0';
    XWO2	: out std_logic := '0';
    XWO3	: out std_logic := '0';
    XWO4	: out std_logic := '0';
    XWO5	: out std_logic := '0'
);
end component NX_RFB_U;

component NX_RFB_U_WRAP is
generic (
    rck_edge  : bit := '0';   -- 0: read clock rising edge - 1: read clock falling edge
    wck_edge  : bit := '0';   -- 0: write clock rising edge - 1: write clock falling edge
    mem_ctxt  : string := "" -- memory initial context
);
port (
    RCK	: in std_logic := '0';
    WCK	: in std_logic := '0';
    I	: in std_logic_vector(17 downto 0) := (others => '0');
    COR	: out std_logic := '0';
    ERR	: out std_logic := '0';
    O	: out std_logic_vector(17 downto 0) := (others => '0');
    RA	: in std_logic_vector(4 downto 0) := (others => '0');
    WA	: in std_logic_vector(4 downto 0) := (others => '0');
    WE	: in std_logic := '0';
    WEA	: in std_logic := '0';
    XRCK	: out std_logic := '0';
    XRO	: out std_logic_vector(4 downto 0) := (others => '0');
    XWCK	: out std_logic := '0';
    XWO	: out std_logic_vector(4 downto 0) := (others => '0')
);
end component NX_RFB_U_WRAP;

component NX_CKS is
port (
    CKI	: in std_logic := '0';
    CMD	: in std_logic := '0';
    CKO	: out std_logic := '0'
);
end component NX_CKS;

component NX_DSP_U is
generic (
    std_mode    : string := ""; -- standard mode [ADD36, SUB36, SMUL18, UMUL18, ...] empty for raw
    raw_config0 : bit_vector(19 downto 0) := B"00000000000000000000";   -- MUX
    raw_config1 : bit_vector(18 downto 0) := B"0000000000000000000";    -- PRC
    raw_config2 : bit_vector(12 downto 0) := B"0000000000000";          -- PRR
    raw_config3 : bit_vector( 6 downto 0) := B"0000000"                 -- ALU
);
port (
    A1	: in std_logic := '0';
    A2	: in std_logic := '0';
    A3	: in std_logic := '0';
    A4	: in std_logic := '0';
    A5	: in std_logic := '0';
    A6	: in std_logic := '0';
    A7	: in std_logic := '0';
    A8	: in std_logic := '0';
    A9	: in std_logic := '0';
    A10	: in std_logic := '0';
    A11	: in std_logic := '0';
    A12	: in std_logic := '0';
    A13	: in std_logic := '0';
    A14	: in std_logic := '0';
    A15	: in std_logic := '0';
    A16	: in std_logic := '0';
    A17	: in std_logic := '0';
    A18	: in std_logic := '0';
    A19	: in std_logic := '0';
    A20	: in std_logic := '0';
    A21	: in std_logic := '0';
    A22	: in std_logic := '0';
    A23	: in std_logic := '0';
    A24	: in std_logic := '0';

    B1	: in std_logic := '0';
    B2	: in std_logic := '0';
    B3	: in std_logic := '0';
    B4	: in std_logic := '0';
    B5	: in std_logic := '0';
    B6	: in std_logic := '0';
    B7	: in std_logic := '0';
    B8	: in std_logic := '0';
    B9	: in std_logic := '0';
    B10	: in std_logic := '0';
    B11	: in std_logic := '0';
    B12	: in std_logic := '0';
    B13	: in std_logic := '0';
    B14	: in std_logic := '0';
    B15	: in std_logic := '0';
    B16	: in std_logic := '0';
    B17	: in std_logic := '0';
    B18	: in std_logic := '0';

    C1	: in std_logic := '0';
    C2	: in std_logic := '0';
    C3	: in std_logic := '0';
    C4	: in std_logic := '0';
    C5	: in std_logic := '0';
    C6	: in std_logic := '0';
    C7	: in std_logic := '0';
    C8	: in std_logic := '0';
    C9	: in std_logic := '0';
    C10	: in std_logic := '0';
    C11	: in std_logic := '0';
    C12	: in std_logic := '0';
    C13	: in std_logic := '0';
    C14	: in std_logic := '0';
    C15	: in std_logic := '0';
    C16	: in std_logic := '0';
    C17	: in std_logic := '0';
    C18	: in std_logic := '0';
    C19	: in std_logic := '0';
    C20	: in std_logic := '0';
    C21	: in std_logic := '0';
    C22	: in std_logic := '0';
    C23	: in std_logic := '0';
    C24	: in std_logic := '0';
    C25	: in std_logic := '0';
    C26	: in std_logic := '0';
    C27	: in std_logic := '0';
    C28	: in std_logic := '0';
    C29	: in std_logic := '0';
    C30	: in std_logic := '0';
    C31	: in std_logic := '0';
    C32	: in std_logic := '0';
    C33	: in std_logic := '0';
    C34	: in std_logic := '0';
    C35	: in std_logic := '0';
    C36	: in std_logic := '0';

    CAI1	: in std_logic := '0';
    CAI2	: in std_logic := '0';
    CAI3	: in std_logic := '0';
    CAI4	: in std_logic := '0';
    CAI5	: in std_logic := '0';
    CAI6	: in std_logic := '0';
    CAI7	: in std_logic := '0';
    CAI8	: in std_logic := '0';
    CAI9	: in std_logic := '0';
    CAI10	: in std_logic := '0';
    CAI11	: in std_logic := '0';
    CAI12	: in std_logic := '0';
    CAI13	: in std_logic := '0';
    CAI14	: in std_logic := '0';
    CAI15	: in std_logic := '0';
    CAI16	: in std_logic := '0';
    CAI17	: in std_logic := '0';
    CAI18	: in std_logic := '0';
    CAI19	: in std_logic := '0';
    CAI20	: in std_logic := '0';
    CAI21	: in std_logic := '0';
    CAI22	: in std_logic := '0';
    CAI23	: in std_logic := '0';
    CAI24	: in std_logic := '0';

    CAO1	: out std_logic := '0';
    CAO2	: out std_logic := '0';
    CAO3	: out std_logic := '0';
    CAO4	: out std_logic := '0';
    CAO5	: out std_logic := '0';
    CAO6	: out std_logic := '0';
    CAO7	: out std_logic := '0';
    CAO8	: out std_logic := '0';
    CAO9	: out std_logic := '0';
    CAO10	: out std_logic := '0';
    CAO11	: out std_logic := '0';
    CAO12	: out std_logic := '0';
    CAO13	: out std_logic := '0';
    CAO14	: out std_logic := '0';
    CAO15	: out std_logic := '0';
    CAO16	: out std_logic := '0';
    CAO17	: out std_logic := '0';
    CAO18	: out std_logic := '0';
    CAO19	: out std_logic := '0';
    CAO20	: out std_logic := '0';
    CAO21	: out std_logic := '0';
    CAO22	: out std_logic := '0';
    CAO23	: out std_logic := '0';
    CAO24	: out std_logic := '0';

    CBI1	: in std_logic := '0';
    CBI2	: in std_logic := '0';
    CBI3	: in std_logic := '0';
    CBI4	: in std_logic := '0';
    CBI5	: in std_logic := '0';
    CBI6	: in std_logic := '0';
    CBI7	: in std_logic := '0';
    CBI8	: in std_logic := '0';
    CBI9	: in std_logic := '0';
    CBI10	: in std_logic := '0';
    CBI11	: in std_logic := '0';
    CBI12	: in std_logic := '0';
    CBI13	: in std_logic := '0';
    CBI14	: in std_logic := '0';
    CBI15	: in std_logic := '0';
    CBI16	: in std_logic := '0';
    CBI17	: in std_logic := '0';
    CBI18	: in std_logic := '0';

    CBO1	: out std_logic := '0';
    CBO2	: out std_logic := '0';
    CBO3	: out std_logic := '0';
    CBO4	: out std_logic := '0';
    CBO5	: out std_logic := '0';
    CBO6	: out std_logic := '0';
    CBO7	: out std_logic := '0';
    CBO8	: out std_logic := '0';
    CBO9	: out std_logic := '0';
    CBO10	: out std_logic := '0';
    CBO11	: out std_logic := '0';
    CBO12	: out std_logic := '0';
    CBO13	: out std_logic := '0';
    CBO14	: out std_logic := '0';
    CBO15	: out std_logic := '0';
    CBO16	: out std_logic := '0';
    CBO17	: out std_logic := '0';
    CBO18	: out std_logic := '0';

    CCI	: in std_logic := '0';
    CCO	: out std_logic := '0';
    CI	: in std_logic := '0';
    CK	: in std_logic := '0';
    CO	: out std_logic := '0';
    CO43	: out std_logic := '0';
    CO57	: out std_logic := '0';

    CZI1	: in std_logic := '0';
    CZI2	: in std_logic := '0';
    CZI3	: in std_logic := '0';
    CZI4	: in std_logic := '0';
    CZI5	: in std_logic := '0';
    CZI6	: in std_logic := '0';
    CZI7	: in std_logic := '0';
    CZI8	: in std_logic := '0';
    CZI9	: in std_logic := '0';
    CZI10	: in std_logic := '0';
    CZI11	: in std_logic := '0';
    CZI12	: in std_logic := '0';
    CZI13	: in std_logic := '0';
    CZI14	: in std_logic := '0';
    CZI15	: in std_logic := '0';
    CZI16	: in std_logic := '0';
    CZI17	: in std_logic := '0';
    CZI18	: in std_logic := '0';
    CZI19	: in std_logic := '0';
    CZI20	: in std_logic := '0';
    CZI21	: in std_logic := '0';
    CZI22	: in std_logic := '0';
    CZI23	: in std_logic := '0';
    CZI24	: in std_logic := '0';
    CZI25	: in std_logic := '0';
    CZI26	: in std_logic := '0';
    CZI27	: in std_logic := '0';
    CZI28	: in std_logic := '0';
    CZI29	: in std_logic := '0';
    CZI30	: in std_logic := '0';
    CZI31	: in std_logic := '0';
    CZI32	: in std_logic := '0';
    CZI33	: in std_logic := '0';
    CZI34	: in std_logic := '0';
    CZI35	: in std_logic := '0';
    CZI36	: in std_logic := '0';
    CZI37	: in std_logic := '0';
    CZI38	: in std_logic := '0';
    CZI39	: in std_logic := '0';
    CZI40	: in std_logic := '0';
    CZI41	: in std_logic := '0';
    CZI42	: in std_logic := '0';
    CZI43	: in std_logic := '0';
    CZI44	: in std_logic := '0';
    CZI45	: in std_logic := '0';
    CZI46	: in std_logic := '0';
    CZI47	: in std_logic := '0';
    CZI48	: in std_logic := '0';
    CZI49	: in std_logic := '0';
    CZI50	: in std_logic := '0';
    CZI51	: in std_logic := '0';
    CZI52	: in std_logic := '0';
    CZI53	: in std_logic := '0';
    CZI54	: in std_logic := '0';
    CZI55	: in std_logic := '0';
    CZI56	: in std_logic := '0';

    CZO1	: out std_logic := '0';
    CZO2	: out std_logic := '0';
    CZO3	: out std_logic := '0';
    CZO4	: out std_logic := '0';
    CZO5	: out std_logic := '0';
    CZO6	: out std_logic := '0';
    CZO7	: out std_logic := '0';
    CZO8	: out std_logic := '0';
    CZO9	: out std_logic := '0';
    CZO10	: out std_logic := '0';
    CZO11	: out std_logic := '0';
    CZO12	: out std_logic := '0';
    CZO13	: out std_logic := '0';
    CZO14	: out std_logic := '0';
    CZO15	: out std_logic := '0';
    CZO16	: out std_logic := '0';
    CZO17	: out std_logic := '0';
    CZO18	: out std_logic := '0';
    CZO19	: out std_logic := '0';
    CZO20	: out std_logic := '0';
    CZO21	: out std_logic := '0';
    CZO22	: out std_logic := '0';
    CZO23	: out std_logic := '0';
    CZO24	: out std_logic := '0';
    CZO25	: out std_logic := '0';
    CZO26	: out std_logic := '0';
    CZO27	: out std_logic := '0';
    CZO28	: out std_logic := '0';
    CZO29	: out std_logic := '0';
    CZO30	: out std_logic := '0';
    CZO31	: out std_logic := '0';
    CZO32	: out std_logic := '0';
    CZO33	: out std_logic := '0';
    CZO34	: out std_logic := '0';
    CZO35	: out std_logic := '0';
    CZO36	: out std_logic := '0';
    CZO37	: out std_logic := '0';
    CZO38	: out std_logic := '0';
    CZO39	: out std_logic := '0';
    CZO40	: out std_logic := '0';
    CZO41	: out std_logic := '0';
    CZO42	: out std_logic := '0';
    CZO43	: out std_logic := '0';
    CZO44	: out std_logic := '0';
    CZO45	: out std_logic := '0';
    CZO46	: out std_logic := '0';
    CZO47	: out std_logic := '0';
    CZO48	: out std_logic := '0';
    CZO49	: out std_logic := '0';
    CZO50	: out std_logic := '0';
    CZO51	: out std_logic := '0';
    CZO52	: out std_logic := '0';
    CZO53	: out std_logic := '0';
    CZO54	: out std_logic := '0';
    CZO55	: out std_logic := '0';
    CZO56	: out std_logic := '0';

    D1	: in std_logic := '0';
    D2	: in std_logic := '0';
    D3	: in std_logic := '0';
    D4	: in std_logic := '0';
    D5	: in std_logic := '0';
    D6	: in std_logic := '0';
    D7	: in std_logic := '0';
    D8	: in std_logic := '0';
    D9	: in std_logic := '0';
    D10	: in std_logic := '0';
    D11	: in std_logic := '0';
    D12	: in std_logic := '0';
    D13	: in std_logic := '0';
    D14	: in std_logic := '0';
    D15	: in std_logic := '0';
    D16	: in std_logic := '0';
    D17	: in std_logic := '0';
    D18	: in std_logic := '0';

    OVF	: out std_logic := '0';
    R	: in std_logic := '0';
    RZ	: in std_logic := '0';
    WE	: in std_logic := '0';
    WEZ	: in std_logic := '0';

    Z1	: out std_logic := '0';
    Z2	: out std_logic := '0';
    Z3	: out std_logic := '0';
    Z4	: out std_logic := '0';
    Z5	: out std_logic := '0';
    Z6	: out std_logic := '0';
    Z7	: out std_logic := '0';
    Z8	: out std_logic := '0';
    Z9	: out std_logic := '0';
    Z10	: out std_logic := '0';
    Z11	: out std_logic := '0';
    Z12	: out std_logic := '0';
    Z13	: out std_logic := '0';
    Z14	: out std_logic := '0';
    Z15	: out std_logic := '0';
    Z16	: out std_logic := '0';
    Z17	: out std_logic := '0';
    Z18	: out std_logic := '0';
    Z19	: out std_logic := '0';
    Z20	: out std_logic := '0';
    Z21	: out std_logic := '0';
    Z22	: out std_logic := '0';
    Z23	: out std_logic := '0';
    Z24	: out std_logic := '0';
    Z25	: out std_logic := '0';
    Z26	: out std_logic := '0';
    Z27	: out std_logic := '0';
    Z28	: out std_logic := '0';
    Z29	: out std_logic := '0';
    Z30	: out std_logic := '0';
    Z31	: out std_logic := '0';
    Z32	: out std_logic := '0';
    Z33	: out std_logic := '0';
    Z34	: out std_logic := '0';
    Z35	: out std_logic := '0';
    Z36	: out std_logic := '0';
    Z37	: out std_logic := '0';
    Z38	: out std_logic := '0';
    Z39	: out std_logic := '0';
    Z40	: out std_logic := '0';
    Z41	: out std_logic := '0';
    Z42	: out std_logic := '0';
    Z43	: out std_logic := '0';
    Z44	: out std_logic := '0';
    Z45	: out std_logic := '0';
    Z46	: out std_logic := '0';
    Z47	: out std_logic := '0';
    Z48	: out std_logic := '0';
    Z49	: out std_logic := '0';
    Z50	: out std_logic := '0';
    Z51	: out std_logic := '0';
    Z52	: out std_logic := '0';
    Z53	: out std_logic := '0';
    Z54	: out std_logic := '0';
    Z55	: out std_logic := '0';
    Z56	: out std_logic := '0'
);
end component NX_DSP_U;

component NX_DSP_U_WRAP is
generic (
    std_mode    : string := "";
    raw_config0 : bit_vector(19 downto 0) := B"00000000000000000000";        -- MUX
    raw_config1 : bit_vector(18 downto 0) := B"0000000000000000000";         -- PRC
    raw_config2 : bit_vector(12 downto 0) := B"0000000000000";               -- PRR
    raw_config3 : bit_vector( 6 downto 0) := B"0000000"                      -- ALU
);
port (
    A	: in std_logic_vector(23 downto 0) := (others => '0');
    B	: in std_logic_vector(17 downto 0) := (others => '0');
    C	: in std_logic_vector(35 downto 0) := (others => '0');

    CAI	: in std_logic_vector(23 downto 0) := (others => '0');
    CAO	: out std_logic_vector(23 downto 0) := (others => '0');
    CBI	: in std_logic_vector(17 downto 0) := (others => '0');
    CBO	: out std_logic_vector(17 downto 0) := (others => '0');

    CCI	: in std_logic := '0';
    CCO	: out std_logic := '0';
    CI	: in std_logic := '0';
    CK	: in std_logic := '0';
    CO	: out std_logic := '0';
    CO43	: out std_logic := '0';
    CO57	: out std_logic := '0';

    CZI	: in std_logic_vector(55 downto 0) := (others => '0');
    CZO	: out std_logic_vector(55 downto 0) := (others => '0');

    D	: in std_logic_vector(17 downto 0) := (others => '0');

    OVF	: out std_logic := '0';
    R	: in std_logic := '0';
    RZ	: in std_logic := '0';
    WE	: in std_logic := '0';
    WEZ	: in std_logic := '0';

    Z	: out std_logic_vector(55 downto 0) := (others => '0')
);
end component NX_DSP_U_WRAP;

component NX_DSP_U_SPLIT is
generic (
-------------------------------------------------------------------------
-- Generic declaration to define the "raw_config0" (cfg_mode). Defines :
------------------------------------------------------------------------- 
   SIGNED_MODE          : bit                    := '0';
   PRE_ADDER_OP         : bit                    := '0';       -- '0' = Additon, '1' = Subraction
   MUX_A                : bit                    := '0';       -- '0' = A input, '1' = CAI input
   MUX_B                : bit                    := '0';       -- '0' = B input, '1' = CBI input
   MUX_P                : bit                    := '0';       -- '0' for PRE_ADDER, '0' for B input
   MUX_X                : bit_vector(1 downto 0) := B"00";     -- Select X operand   "00" = C,
                                                               --                    "01" = CZI,
                                                               --                    "11" = SHFT(CZI) & C(11:0),
                                                               --                    "10" Select Z feedback
   MUX_Y                : bit                    := '0';       -- '0' Select MULT output, '1' for (B & A)
   MUX_CI               : bit                    := '0';       -- Select fabric input (not cascade)
   MUX_Z                : bit                    := '0';       -- Select ALU output
                                                               -- (not ALU input operand coming from PR_Y)

   Z_FEEDBACK_SHL12     : bit                    := '0';       -- '0' for No shift, '1' for 12-bit left shift
   ENABLE_SATURATION    : bit                    := '0';       -- '0' for Disable,  '1' for Enable
   SATURATION_RANK      : bit_vector(5 downto 0) := B"000000"; -- Weight of useful MSB
                                                               --        on Z and CZO result
                                                               --(to define saturation and overflow)

   ALU_DYNAMIC_OP       : bit                    := '0';       -- '0' for Static,
                                                               -- '1' for Dynamic
                                                               -- (D6 ... D1 is not used for dynamic operation)
   CO_SEL               : bit                    := '0';       -- '0' for C0 = ALU(36), '1' for CO = ALU(48)

-------------------------------------------------------------------------
-- Generic declaration to define the "raw_config1" (cfg_pipe_mux)
-------------------------------------------------------------------------
   PR_A_MUX                : bit_vector(1 downto 0) := B"00"; -- Number of pipe reg levels
                                                              --        on A input
   PR_A_CASCADE_MUX        : bit_vector(1 downto 0) := B"00"; -- Number of pipe reg levels
                                                              --        for CAO output
   PR_B_MUX                : bit_vector(1 downto 0) := B"00"; -- Number of pipe reg levels
                                                              --        on B input
   PR_B_CASCADE_MUX        : bit_vector(1 downto 0) := B"00"; -- Number of pipe reg levels
                                                              --        for CAO output

   PR_C_MUX                : bit                    := '0';   -- '0' for No pipe reg, '1' for 1 pipe reg
   PR_D_MUX                : bit                    := '0';   -- '0' for No pipe reg, '1' for 1 pipe reg
   PR_CI_MUX               : bit                    := '0';   -- '0' for No pipe reg, '1' for 1 pipe reg
   PR_P_MUX                : bit                    := '0';   -- '0' for No pipe reg, '1' for 1 pipe reg (Pre-adder)
   PR_X_MUX                : bit                    := '0';   -- '0' for No pipe reg, '1' for 1 pipe reg
   PR_Y_MUX                : bit                    := '0';   -- '0' for No pipe reg, '1' for 1 pipe reg

   PR_MULT_MUX             : bit                    := '0';   -- No pipe reg  -- Register inside MULT
   PR_ALU_MUX              : bit                    := '0';   -- No pipe reg  -- Register inside ALU
   PR_Z_MUX                : bit                    := '0';   -- Registered output

   PR_CO_MUX               : bit                    := '0';   -- '0' for No pipe reg, '1' for 1 pipe reg
   PR_OV_MUX               : bit                    := '0';   -- '0' for No pipe reg, '1' for 1 pipe reg

-------------------------------------------------------------------------
-- Generic declaration to define the "raw_config2" (cfg_pipe_rst)
-------------------------------------------------------------------------
   ENABLE_PR_A_RST         : bit                    := '0';   -- '0' for Disable, '1' for Enable 
   ENABLE_PR_B_RST         : bit                    := '0';   -- '0' for Disable, '1' for Enable 
   ENABLE_PR_C_RST         : bit                    := '0';   -- '0' for Disable, '1' for Enable 
   ENABLE_PR_D_RST         : bit                    := '0';   -- '0' for Disable, '1' for Enable 
   ENABLE_PR_CI_RST        : bit                    := '0';   -- '0' for Disable, '1' for Enable 
   ENABLE_PR_P_RST         : bit                    := '0';   -- '0' for Disable, '1' for Enable 
   ENABLE_PR_X_RST         : bit                    := '0';   -- '0' for Disable, '1' for Enable 
   ENABLE_PR_Y_RST         : bit                    := '0';   -- '0' for Disable, '1' for Enable 
   ENABLE_PR_MULT_RST      : bit                    := '0';   -- '0' for Disable, '1' for Enable 
   ENABLE_PR_ALU_RST       : bit                    := '0';   -- '0' for Disable, '1' for Enable 
   ENABLE_PR_Z_RST         : bit                    := '0';   -- '0' for Disable, '1' for Enable 
   ENABLE_PR_CO_RST        : bit                    := '0';   -- '0' for Disable, '1' for Enable 
   ENABLE_PR_OV_RST        : bit                    := '0';   -- '0' for Disable, '1' for Enable 

-------------------------------------------------------------------------
-- Constants declaration to define the "cfg_pipe_rst" -- raw_config3(6 downto 0)
-------------------------------------------------------------------------
   ALU_OP                  : bit_vector(5 downto 0) := B"000000"; -- Addition = "000000", Subtract = "001010"
   ALU_MUX                 : bit                    := '0'        -- '0' for Don't swap ALU operands,
                                                                  -- '1' for ALU Swap operands
    );
port (
    CK	: IN std_logic := '0';
    R	: IN std_logic := '0';
    RZ	: IN std_logic := '0';
    WE	: IN std_logic := '0';
    WEZ	: IN std_logic := '0';

    CI	: IN std_logic := '0';
    A	: IN std_logic_vector(23 downto 0) := (others => '0');
    B	: IN std_logic_vector(17 downto 0) := (others => '0');
    C	: IN std_logic_vector(35 downto 0) := (others => '0');
    D	: IN std_logic_vector(17 downto 0) := (others => '0');
    CAI	: IN std_logic_vector(23 downto 0) := (others => '0');
    CBI	: IN std_logic_vector(17 downto 0) := (others => '0');
    CZI	: IN std_logic_vector(55 downto 0) := (others => '0');
    CCI	: IN std_logic := '0';

    Z	: out std_logic_vector(55 downto 0) := (others => '0');
    CO	: OUT std_logic := '0';
    CO42	: OUT std_logic := '0';
    CO56	: OUT std_logic := '0';
    OVF	: OUT std_logic := '0';
    CAO	: OUT std_logic_vector(23 downto 0) := (others => '0');
    CBO	: OUT std_logic_vector(17 downto 0) := (others => '0');
    CZO	: OUT std_logic_vector(55 downto 0) := (others => '0');
    CCO	: OUT std_logic := '0'
  );
end component NX_DSP_U_SPLIT;

component NX_RAM_U is
generic (
    std_mode    : string := ""; -- standard mode [FAST_2kx18, SLOW_2kx18, NOECNOECC24, ...] empty for raw
    mcka_edge   : bit := '0';   -- 0: rising edge for port A clock - 1: falling edge
    mckb_edge   : bit := '0';   -- 0: rising edge for port B clock - 1: falling edge
    pcka_edge   : bit := '0';   -- 0: rising edge for pipe A clock - 1: falling edge
    pckb_edge   : bit := '0';   -- 0: rising edge for pipe B clock - 1: falling edge
    mem_ctxt    : string := ""; -- context initialization
    pipe_ia     : bit := '0';   -- 0: no pipe on port A input  - 1: pipe on port A input
    pipe_ib     : bit := '0';   -- 0: no pipe on port B input  - 1: pipe on port A input
    pipe_oa     : bit := '0';   -- 0: no pipe on port A output - 1: pipe on port B output
    pipe_ob     : bit := '0';   -- 0: no pipe on port B output - 1: pipe on port B output
    raw_config0 : bit_vector( 3 downto 0) := B"0000";			-- PRC
    raw_config1 : bit_vector(15 downto 0) := B"0000000000000000"	-- MOD
);
port (
    ACK	: in std_logic := '0';
    ACKC	: in std_logic := '0';
    BCK	: in std_logic := '0';
    BCKC	: in std_logic := '0';

    AI1	: in std_logic := '0';
    AI2	: in std_logic := '0';
    AI3	: in std_logic := '0';
    AI4	: in std_logic := '0';
    AI5	: in std_logic := '0';
    AI6	: in std_logic := '0';
    AI7	: in std_logic := '0';
    AI8	: in std_logic := '0';
    AI9	: in std_logic := '0';
    AI10	: in std_logic := '0';
    AI11	: in std_logic := '0';
    AI12	: in std_logic := '0';
    AI13	: in std_logic := '0';
    AI14	: in std_logic := '0';
    AI15	: in std_logic := '0';
    AI16	: in std_logic := '0';

    AI17	: in std_logic := '0';
    AI18	: in std_logic := '0';
    AI19	: in std_logic := '0';
    AI20	: in std_logic := '0';
    AI21	: in std_logic := '0';
    AI22	: in std_logic := '0';
    AI23	: in std_logic := '0';
    AI24	: in std_logic := '0';

    BI1	: in std_logic := '0';
    BI2	: in std_logic := '0';
    BI3	: in std_logic := '0';
    BI4	: in std_logic := '0';
    BI5	: in std_logic := '0';
    BI6	: in std_logic := '0';
    BI7	: in std_logic := '0';
    BI8	: in std_logic := '0';
    BI9	: in std_logic := '0';
    BI10	: in std_logic := '0';
    BI11	: in std_logic := '0';
    BI12	: in std_logic := '0';
    BI13	: in std_logic := '0';
    BI14	: in std_logic := '0';
    BI15	: in std_logic := '0';
    BI16	: in std_logic := '0';

    BI17	: in std_logic := '0';
    BI18	: in std_logic := '0';
    BI19	: in std_logic := '0';
    BI20	: in std_logic := '0';
    BI21	: in std_logic := '0';
    BI22	: in std_logic := '0';
    BI23	: in std_logic := '0';
    BI24	: in std_logic := '0';

    ACOR	: out std_logic := '0';
    AERR	: out std_logic := '0';
    BCOR	: out std_logic := '0';
    BERR	: out std_logic := '0';

    AO1	: out std_logic := '0';
    AO2	: out std_logic := '0';
    AO3	: out std_logic := '0';
    AO4	: out std_logic := '0';
    AO5	: out std_logic := '0';
    AO6	: out std_logic := '0';
    AO7	: out std_logic := '0';
    AO8	: out std_logic := '0';
    AO9	: out std_logic := '0';
    AO10	: out std_logic := '0';
    AO11	: out std_logic := '0';
    AO12	: out std_logic := '0';
    AO13	: out std_logic := '0';
    AO14	: out std_logic := '0';
    AO15	: out std_logic := '0';
    AO16	: out std_logic := '0';

    AO17	: out std_logic := '0';
    AO18	: out std_logic := '0';
    AO19	: out std_logic := '0';
    AO20	: out std_logic := '0';
    AO21	: out std_logic := '0';
    AO22	: out std_logic := '0';
    AO23	: out std_logic := '0';
    AO24	: out std_logic := '0';

    BO1	: out std_logic := '0';
    BO2	: out std_logic := '0';
    BO3	: out std_logic := '0';
    BO4	: out std_logic := '0';
    BO5	: out std_logic := '0';
    BO6	: out std_logic := '0';
    BO7	: out std_logic := '0';
    BO8	: out std_logic := '0';
    BO9	: out std_logic := '0';
    BO10	: out std_logic := '0';
    BO11	: out std_logic := '0';
    BO12	: out std_logic := '0';
    BO13	: out std_logic := '0';
    BO14	: out std_logic := '0';
    BO15	: out std_logic := '0';
    BO16	: out std_logic := '0';

    BO17	: out std_logic := '0';
    BO18	: out std_logic := '0';
    BO19	: out std_logic := '0';
    BO20	: out std_logic := '0';
    BO21	: out std_logic := '0';
    BO22	: out std_logic := '0';
    BO23	: out std_logic := '0';
    BO24	: out std_logic := '0';

    AA1	: in std_logic := '0';
    AA2	: in std_logic := '0';
    AA3	: in std_logic := '0';
    AA4	: in std_logic := '0';
    AA5	: in std_logic := '0';
    AA6	: in std_logic := '0';

    AA7	: in std_logic := '0';
    AA8	: in std_logic := '0';
    AA9	: in std_logic := '0';
    AA10	: in std_logic := '0';
    AA11	: in std_logic := '0';
    AA12	: in std_logic := '0';
    AA13	: in std_logic := '0';
    AA14	: in std_logic := '0';
    AA15	: in std_logic := '0';
    AA16	: in std_logic := '0';

    ACS	: in std_logic := '0';
    AWE	: in std_logic := '0';
    AR	: in std_logic := '0';

    BA1	: in std_logic := '0';
    BA2	: in std_logic := '0';
    BA3	: in std_logic := '0';
    BA4	: in std_logic := '0';
    BA5	: in std_logic := '0';
    BA6	: in std_logic := '0';

    BA7	: in std_logic := '0';
    BA8	: in std_logic := '0';
    BA9	: in std_logic := '0';
    BA10	: in std_logic := '0';
    BA11	: in std_logic := '0';
    BA12	: in std_logic := '0';
    BA13	: in std_logic := '0';
    BA14	: in std_logic := '0';
    BA15	: in std_logic := '0';
    BA16	: in std_logic := '0';

    BCS	: in std_logic := '0';
    BWE	: in std_logic := '0';
    BR	: in std_logic := '0'
);
end component NX_RAM_U;

component NX_RAM_U_WRAP is
generic (
    std_mode    : string := ""; -- standard mode [FAST_2kx18, SLOW_2kx18, NOECNOECC24, ...] empty for raw
    mcka_edge   : bit := '0';   -- 0: rising edge for port A clock - 1: falling edge
    mckb_edge   : bit := '0';   -- 0: rising edge for port B clock - 1: falling edge
    pcka_edge   : bit := '0';   -- 0: rising edge for pipe A clock - 1: falling edge
    pckb_edge   : bit := '0';   -- 0: rising edge for pipe B clock - 1: falling edge
    mem_ctxt    : string := ""; -- context initialization
    pipe_ia     : bit := '0';   -- 0: no pipe on port A input  - 1: pipe on port A input
    pipe_ib     : bit := '0';   -- 0: no pipe on port B input  - 1: pipe on port A input
    pipe_oa     : bit := '0';   -- 0: no pipe on port A output - 1: pipe on port B output
    pipe_ob     : bit := '0';   -- 0: no pipe on port B output - 1: pipe on port B output
    raw_config0 : bit_vector( 3 downto 0) := B"0000";			-- PRC
    raw_config1 : bit_vector(15 downto 0) := B"0000000000000000"	-- MOD
);
port (
    ACK	: in std_logic := '0';
    BCK	: in std_logic := '0';

    AI	: in std_logic_vector(23 downto 0) := (others => '0');
    BI	: in std_logic_vector(23 downto 0) := (others => '0');

    ACOR	: out std_logic := '0';
    AERR	: out std_logic := '0';
    BCOR	: out std_logic := '0';
    BERR	: out std_logic := '0';

    AO	: out std_logic_vector(23 downto 0) := (others => '0');
    BO	: out std_logic_vector(23 downto 0) := (others => '0');
    AA	: in std_logic_vector(15 downto 0) := (others => '0');

    ACS	: in std_logic := '0';
    AWE	: in std_logic := '0';
    AR	: in std_logic := '0';

    BA	: in std_logic_vector(15 downto 0) := (others => '0');

    BCS	: in std_logic := '0';
    BWE	: in std_logic := '0';
    BR	: in std_logic := '0'
);
end component NX_RAM_U_WRAP;

component NX_ECC is
port (
    CKD	: in std_logic := '0';
    CHK	: in std_logic := '0';
    COR	: out std_logic := '0';
    ERR	: out std_logic := '0'
    );
end component NX_ECC;

-- beware following components are only intended for internal use. Do not try to instantiate them.
component NX_BUFFER is
port (
    I	: in std_logic := '0';
    O	: out std_logic := '0'
);
end component NX_BUFFER;

component NX_CSC is
port (
    I	: in std_logic := '0';
    O	: out std_logic := '0'
);
end component NX_CSC;

component NX_SCC is
port (
    I	: in std_logic := '0';
    O	: out std_logic := '0'
);
end component NX_SCC;

component NX_syn_tp is
port (
    I	: in std_logic := '0'
);
end component NX_syn_tp;

component NX_RB is
generic (
    -- input : EI to FO
    inputClk    : bit_vector( 1 downto 0) := B"00"; -- 00 = CK1, 01 = CK2, 10 = CK3 and 11 = CK4
    inputBypass : bit_vector(23 downto 0) := B"000000000000000000000000"; -- 1 bypass active, LSB is bypass registers 1 to 8 ... MSB is bypass registers 184 to 192
    -- output : FI to EO
    outputClk   : bit_vector( 1 downto 0) := B"00"; -- 00 = CK1, 01 = CK2, 10 = CK3 and 11 = CK4
    outputBypass: bit_vector(23 downto 0) := B"000000000000000000000000"  -- 1 bypass active, LSB is bypass registers 1 to 8 ... MSB is bypass registers 184 to 192
);
port (
    CK1	: in std_logic := '0';
    CK2	: in std_logic := '0';
    CK3	: in std_logic := '0';
    CK4	: in std_logic := '0';
    EI1	: in std_logic := '0';
    EI2	: in std_logic := '0';
    EI3	: in std_logic := '0';
    EI4	: in std_logic := '0';
    EI5	: in std_logic := '0';
    EI6	: in std_logic := '0';
    EI7	: in std_logic := '0';
    EI8	: in std_logic := '0';
    EI9	: in std_logic := '0';
    EI10	: in std_logic := '0';
    EI11	: in std_logic := '0';
    EI12	: in std_logic := '0';
    EI13	: in std_logic := '0';
    EI14	: in std_logic := '0';
    EI15	: in std_logic := '0';
    EI16	: in std_logic := '0';
    EI17	: in std_logic := '0';
    EI18	: in std_logic := '0';
    EI19	: in std_logic := '0';
    EI20	: in std_logic := '0';
    EI21	: in std_logic := '0';
    EI22	: in std_logic := '0';
    EI23	: in std_logic := '0';
    EI24	: in std_logic := '0';
    EI25	: in std_logic := '0';
    EI26	: in std_logic := '0';
    EI27	: in std_logic := '0';
    EI28	: in std_logic := '0';
    EI29	: in std_logic := '0';
    EI30	: in std_logic := '0';
    EI31	: in std_logic := '0';
    EI32	: in std_logic := '0';
    EI33	: in std_logic := '0';
    EI34	: in std_logic := '0';
    EI35	: in std_logic := '0';
    EI36	: in std_logic := '0';
    EI37	: in std_logic := '0';
    EI38	: in std_logic := '0';
    EI39	: in std_logic := '0';
    EI40	: in std_logic := '0';
    EI41	: in std_logic := '0';
    EI42	: in std_logic := '0';
    EI43	: in std_logic := '0';
    EI44	: in std_logic := '0';
    EI45	: in std_logic := '0';
    EI46	: in std_logic := '0';
    EI47	: in std_logic := '0';
    EI48	: in std_logic := '0';
    EI49	: in std_logic := '0';
    EI50	: in std_logic := '0';
    EI51	: in std_logic := '0';
    EI52	: in std_logic := '0';
    EI53	: in std_logic := '0';
    EI54	: in std_logic := '0';
    EI55	: in std_logic := '0';
    EI56	: in std_logic := '0';
    EI57	: in std_logic := '0';
    EI58	: in std_logic := '0';
    EI59	: in std_logic := '0';
    EI60	: in std_logic := '0';
    EI61	: in std_logic := '0';
    EI62	: in std_logic := '0';
    EI63	: in std_logic := '0';
    EI64	: in std_logic := '0';
    EI65	: in std_logic := '0';
    EI66	: in std_logic := '0';
    EI67	: in std_logic := '0';
    EI68	: in std_logic := '0';
    EI69	: in std_logic := '0';
    EI70	: in std_logic := '0';
    EI71	: in std_logic := '0';
    EI72	: in std_logic := '0';
    EI73	: in std_logic := '0';
    EI74	: in std_logic := '0';
    EI75	: in std_logic := '0';
    EI76	: in std_logic := '0';
    EI77	: in std_logic := '0';
    EI78	: in std_logic := '0';
    EI79	: in std_logic := '0';
    EI80	: in std_logic := '0';
    EI81	: in std_logic := '0';
    EI82	: in std_logic := '0';
    EI83	: in std_logic := '0';
    EI84	: in std_logic := '0';
    EI85	: in std_logic := '0';
    EI86	: in std_logic := '0';
    EI87	: in std_logic := '0';
    EI88	: in std_logic := '0';
    EI89	: in std_logic := '0';
    EI90	: in std_logic := '0';
    EI91	: in std_logic := '0';
    EI92	: in std_logic := '0';
    EI93	: in std_logic := '0';
    EI94	: in std_logic := '0';
    EI95	: in std_logic := '0';
    EI96	: in std_logic := '0';
    EI97	: in std_logic := '0';
    EI98	: in std_logic := '0';
    EI99	: in std_logic := '0';
    EI100	: in std_logic := '0';
    EI101	: in std_logic := '0';
    EI102	: in std_logic := '0';
    EI103	: in std_logic := '0';
    EI104	: in std_logic := '0';
    EI105	: in std_logic := '0';
    EI106	: in std_logic := '0';
    EI107	: in std_logic := '0';
    EI108	: in std_logic := '0';
    EI109	: in std_logic := '0';
    EI110	: in std_logic := '0';
    EI111	: in std_logic := '0';
    EI112	: in std_logic := '0';
    EI113	: in std_logic := '0';
    EI114	: in std_logic := '0';
    EI115	: in std_logic := '0';
    EI116	: in std_logic := '0';
    EI117	: in std_logic := '0';
    EI118	: in std_logic := '0';
    EI119	: in std_logic := '0';
    EI120	: in std_logic := '0';
    EI121	: in std_logic := '0';
    EI122	: in std_logic := '0';
    EI123	: in std_logic := '0';
    EI124	: in std_logic := '0';
    EI125	: in std_logic := '0';
    EI126	: in std_logic := '0';
    EI127	: in std_logic := '0';
    EI128	: in std_logic := '0';
    EI129	: in std_logic := '0';
    EI130	: in std_logic := '0';
    EI131	: in std_logic := '0';
    EI132	: in std_logic := '0';
    EI133	: in std_logic := '0';
    EI134	: in std_logic := '0';
    EI135	: in std_logic := '0';
    EI136	: in std_logic := '0';
    EI137	: in std_logic := '0';
    EI138	: in std_logic := '0';
    EI139	: in std_logic := '0';
    EI140	: in std_logic := '0';
    EI141	: in std_logic := '0';
    EI142	: in std_logic := '0';
    EI143	: in std_logic := '0';
    EI144	: in std_logic := '0';
    EI145	: in std_logic := '0';
    EI146	: in std_logic := '0';
    EI147	: in std_logic := '0';
    EI148	: in std_logic := '0';
    EI149	: in std_logic := '0';
    EI150	: in std_logic := '0';
    EI151	: in std_logic := '0';
    EI152	: in std_logic := '0';
    EI153	: in std_logic := '0';
    EI154	: in std_logic := '0';
    EI155	: in std_logic := '0';
    EI156	: in std_logic := '0';
    EI157	: in std_logic := '0';
    EI158	: in std_logic := '0';
    EI159	: in std_logic := '0';
    EI160	: in std_logic := '0';
    EI161	: in std_logic := '0';
    EI162	: in std_logic := '0';
    EI163	: in std_logic := '0';
    EI164	: in std_logic := '0';
    EI165	: in std_logic := '0';
    EI166	: in std_logic := '0';
    EI167	: in std_logic := '0';
    EI168	: in std_logic := '0';
    EI169	: in std_logic := '0';
    EI170	: in std_logic := '0';
    EI171	: in std_logic := '0';
    EI172	: in std_logic := '0';
    EI173	: in std_logic := '0';
    EI174	: in std_logic := '0';
    EI175	: in std_logic := '0';
    EI176	: in std_logic := '0';
    EI177	: in std_logic := '0';
    EI178	: in std_logic := '0';
    EI179	: in std_logic := '0';
    EI180	: in std_logic := '0';
    EI181	: in std_logic := '0';
    EI182	: in std_logic := '0';
    EI183	: in std_logic := '0';
    EI184	: in std_logic := '0';
    EI185	: in std_logic := '0';
    EI186	: in std_logic := '0';
    EI187	: in std_logic := '0';
    EI188	: in std_logic := '0';
    EI189	: in std_logic := '0';
    EI190	: in std_logic := '0';
    EI191	: in std_logic := '0';
    EI192	: in std_logic := '0';
    EO1	: out std_logic := '0';
    EO2	: out std_logic := '0';
    EO3	: out std_logic := '0';
    EO4	: out std_logic := '0';
    EO5	: out std_logic := '0';
    EO6	: out std_logic := '0';
    EO7	: out std_logic := '0';
    EO8	: out std_logic := '0';
    EO9	: out std_logic := '0';
    EO10	: out std_logic := '0';
    EO11	: out std_logic := '0';
    EO12	: out std_logic := '0';
    EO13	: out std_logic := '0';
    EO14	: out std_logic := '0';
    EO15	: out std_logic := '0';
    EO16	: out std_logic := '0';
    EO17	: out std_logic := '0';
    EO18	: out std_logic := '0';
    EO19	: out std_logic := '0';
    EO20	: out std_logic := '0';
    EO21	: out std_logic := '0';
    EO22	: out std_logic := '0';
    EO23	: out std_logic := '0';
    EO24	: out std_logic := '0';
    EO25	: out std_logic := '0';
    EO26	: out std_logic := '0';
    EO27	: out std_logic := '0';
    EO28	: out std_logic := '0';
    EO29	: out std_logic := '0';
    EO30	: out std_logic := '0';
    EO31	: out std_logic := '0';
    EO32	: out std_logic := '0';
    EO33	: out std_logic := '0';
    EO34	: out std_logic := '0';
    EO35	: out std_logic := '0';
    EO36	: out std_logic := '0';
    EO37	: out std_logic := '0';
    EO38	: out std_logic := '0';
    EO39	: out std_logic := '0';
    EO40	: out std_logic := '0';
    EO41	: out std_logic := '0';
    EO42	: out std_logic := '0';
    EO43	: out std_logic := '0';
    EO44	: out std_logic := '0';
    EO45	: out std_logic := '0';
    EO46	: out std_logic := '0';
    EO47	: out std_logic := '0';
    EO48	: out std_logic := '0';
    EO49	: out std_logic := '0';
    EO50	: out std_logic := '0';
    EO51	: out std_logic := '0';
    EO52	: out std_logic := '0';
    EO53	: out std_logic := '0';
    EO54	: out std_logic := '0';
    EO55	: out std_logic := '0';
    EO56	: out std_logic := '0';
    EO57	: out std_logic := '0';
    EO58	: out std_logic := '0';
    EO59	: out std_logic := '0';
    EO60	: out std_logic := '0';
    EO61	: out std_logic := '0';
    EO62	: out std_logic := '0';
    EO63	: out std_logic := '0';
    EO64	: out std_logic := '0';
    EO65	: out std_logic := '0';
    EO66	: out std_logic := '0';
    EO67	: out std_logic := '0';
    EO68	: out std_logic := '0';
    EO69	: out std_logic := '0';
    EO70	: out std_logic := '0';
    EO71	: out std_logic := '0';
    EO72	: out std_logic := '0';
    EO73	: out std_logic := '0';
    EO74	: out std_logic := '0';
    EO75	: out std_logic := '0';
    EO76	: out std_logic := '0';
    EO77	: out std_logic := '0';
    EO78	: out std_logic := '0';
    EO79	: out std_logic := '0';
    EO80	: out std_logic := '0';
    EO81	: out std_logic := '0';
    EO82	: out std_logic := '0';
    EO83	: out std_logic := '0';
    EO84	: out std_logic := '0';
    EO85	: out std_logic := '0';
    EO86	: out std_logic := '0';
    EO87	: out std_logic := '0';
    EO88	: out std_logic := '0';
    EO89	: out std_logic := '0';
    EO90	: out std_logic := '0';
    EO91	: out std_logic := '0';
    EO92	: out std_logic := '0';
    EO93	: out std_logic := '0';
    EO94	: out std_logic := '0';
    EO95	: out std_logic := '0';
    EO96	: out std_logic := '0';
    EO97	: out std_logic := '0';
    EO98	: out std_logic := '0';
    EO99	: out std_logic := '0';
    EO100	: out std_logic := '0';
    EO101	: out std_logic := '0';
    EO102	: out std_logic := '0';
    EO103	: out std_logic := '0';
    EO104	: out std_logic := '0';
    EO105	: out std_logic := '0';
    EO106	: out std_logic := '0';
    EO107	: out std_logic := '0';
    EO108	: out std_logic := '0';
    EO109	: out std_logic := '0';
    EO110	: out std_logic := '0';
    EO111	: out std_logic := '0';
    EO112	: out std_logic := '0';
    EO113	: out std_logic := '0';
    EO114	: out std_logic := '0';
    EO115	: out std_logic := '0';
    EO116	: out std_logic := '0';
    EO117	: out std_logic := '0';
    EO118	: out std_logic := '0';
    EO119	: out std_logic := '0';
    EO120	: out std_logic := '0';
    EO121	: out std_logic := '0';
    EO122	: out std_logic := '0';
    EO123	: out std_logic := '0';
    EO124	: out std_logic := '0';
    EO125	: out std_logic := '0';
    EO126	: out std_logic := '0';
    EO127	: out std_logic := '0';
    EO128	: out std_logic := '0';
    EO129	: out std_logic := '0';
    EO130	: out std_logic := '0';
    EO131	: out std_logic := '0';
    EO132	: out std_logic := '0';
    EO133	: out std_logic := '0';
    EO134	: out std_logic := '0';
    EO135	: out std_logic := '0';
    EO136	: out std_logic := '0';
    EO137	: out std_logic := '0';
    EO138	: out std_logic := '0';
    EO139	: out std_logic := '0';
    EO140	: out std_logic := '0';
    EO141	: out std_logic := '0';
    EO142	: out std_logic := '0';
    EO143	: out std_logic := '0';
    EO144	: out std_logic := '0';
    EO145	: out std_logic := '0';
    EO146	: out std_logic := '0';
    EO147	: out std_logic := '0';
    EO148	: out std_logic := '0';
    EO149	: out std_logic := '0';
    EO150	: out std_logic := '0';
    EO151	: out std_logic := '0';
    EO152	: out std_logic := '0';
    EO153	: out std_logic := '0';
    EO154	: out std_logic := '0';
    EO155	: out std_logic := '0';
    EO156	: out std_logic := '0';
    EO157	: out std_logic := '0';
    EO158	: out std_logic := '0';
    EO159	: out std_logic := '0';
    EO160	: out std_logic := '0';
    EO161	: out std_logic := '0';
    EO162	: out std_logic := '0';
    EO163	: out std_logic := '0';
    EO164	: out std_logic := '0';
    EO165	: out std_logic := '0';
    EO166	: out std_logic := '0';
    EO167	: out std_logic := '0';
    EO168	: out std_logic := '0';
    EO169	: out std_logic := '0';
    EO170	: out std_logic := '0';
    EO171	: out std_logic := '0';
    EO172	: out std_logic := '0';
    EO173	: out std_logic := '0';
    EO174	: out std_logic := '0';
    EO175	: out std_logic := '0';
    EO176	: out std_logic := '0';
    EO177	: out std_logic := '0';
    EO178	: out std_logic := '0';
    EO179	: out std_logic := '0';
    EO180	: out std_logic := '0';
    EO181	: out std_logic := '0';
    EO182	: out std_logic := '0';
    EO183	: out std_logic := '0';
    EO184	: out std_logic := '0';
    EO185	: out std_logic := '0';
    EO186	: out std_logic := '0';
    EO187	: out std_logic := '0';
    EO188	: out std_logic := '0';
    EO189	: out std_logic := '0';
    EO190	: out std_logic := '0';
    EO191	: out std_logic := '0';
    EO192	: out std_logic := '0';
    FI1	: in std_logic := '0';
    FI2	: in std_logic := '0';
    FI3	: in std_logic := '0';
    FI4	: in std_logic := '0';
    FI5	: in std_logic := '0';
    FI6	: in std_logic := '0';
    FI7	: in std_logic := '0';
    FI8	: in std_logic := '0';
    FI9	: in std_logic := '0';
    FI10	: in std_logic := '0';
    FI11	: in std_logic := '0';
    FI12	: in std_logic := '0';
    FI13	: in std_logic := '0';
    FI14	: in std_logic := '0';
    FI15	: in std_logic := '0';
    FI16	: in std_logic := '0';
    FI17	: in std_logic := '0';
    FI18	: in std_logic := '0';
    FI19	: in std_logic := '0';
    FI20	: in std_logic := '0';
    FI21	: in std_logic := '0';
    FI22	: in std_logic := '0';
    FI23	: in std_logic := '0';
    FI24	: in std_logic := '0';
    FI25	: in std_logic := '0';
    FI26	: in std_logic := '0';
    FI27	: in std_logic := '0';
    FI28	: in std_logic := '0';
    FI29	: in std_logic := '0';
    FI30	: in std_logic := '0';
    FI31	: in std_logic := '0';
    FI32	: in std_logic := '0';
    FI33	: in std_logic := '0';
    FI34	: in std_logic := '0';
    FI35	: in std_logic := '0';
    FI36	: in std_logic := '0';
    FI37	: in std_logic := '0';
    FI38	: in std_logic := '0';
    FI39	: in std_logic := '0';
    FI40	: in std_logic := '0';
    FI41	: in std_logic := '0';
    FI42	: in std_logic := '0';
    FI43	: in std_logic := '0';
    FI44	: in std_logic := '0';
    FI45	: in std_logic := '0';
    FI46	: in std_logic := '0';
    FI47	: in std_logic := '0';
    FI48	: in std_logic := '0';
    FI49	: in std_logic := '0';
    FI50	: in std_logic := '0';
    FI51	: in std_logic := '0';
    FI52	: in std_logic := '0';
    FI53	: in std_logic := '0';
    FI54	: in std_logic := '0';
    FI55	: in std_logic := '0';
    FI56	: in std_logic := '0';
    FI57	: in std_logic := '0';
    FI58	: in std_logic := '0';
    FI59	: in std_logic := '0';
    FI60	: in std_logic := '0';
    FI61	: in std_logic := '0';
    FI62	: in std_logic := '0';
    FI63	: in std_logic := '0';
    FI64	: in std_logic := '0';
    FI65	: in std_logic := '0';
    FI66	: in std_logic := '0';
    FI67	: in std_logic := '0';
    FI68	: in std_logic := '0';
    FI69	: in std_logic := '0';
    FI70	: in std_logic := '0';
    FI71	: in std_logic := '0';
    FI72	: in std_logic := '0';
    FI73	: in std_logic := '0';
    FI74	: in std_logic := '0';
    FI75	: in std_logic := '0';
    FI76	: in std_logic := '0';
    FI77	: in std_logic := '0';
    FI78	: in std_logic := '0';
    FI79	: in std_logic := '0';
    FI80	: in std_logic := '0';
    FI81	: in std_logic := '0';
    FI82	: in std_logic := '0';
    FI83	: in std_logic := '0';
    FI84	: in std_logic := '0';
    FI85	: in std_logic := '0';
    FI86	: in std_logic := '0';
    FI87	: in std_logic := '0';
    FI88	: in std_logic := '0';
    FI89	: in std_logic := '0';
    FI90	: in std_logic := '0';
    FI91	: in std_logic := '0';
    FI92	: in std_logic := '0';
    FI93	: in std_logic := '0';
    FI94	: in std_logic := '0';
    FI95	: in std_logic := '0';
    FI96	: in std_logic := '0';
    FI97	: in std_logic := '0';
    FI98	: in std_logic := '0';
    FI99	: in std_logic := '0';
    FI100	: in std_logic := '0';
    FI101	: in std_logic := '0';
    FI102	: in std_logic := '0';
    FI103	: in std_logic := '0';
    FI104	: in std_logic := '0';
    FI105	: in std_logic := '0';
    FI106	: in std_logic := '0';
    FI107	: in std_logic := '0';
    FI108	: in std_logic := '0';
    FI109	: in std_logic := '0';
    FI110	: in std_logic := '0';
    FI111	: in std_logic := '0';
    FI112	: in std_logic := '0';
    FI113	: in std_logic := '0';
    FI114	: in std_logic := '0';
    FI115	: in std_logic := '0';
    FI116	: in std_logic := '0';
    FI117	: in std_logic := '0';
    FI118	: in std_logic := '0';
    FI119	: in std_logic := '0';
    FI120	: in std_logic := '0';
    FI121	: in std_logic := '0';
    FI122	: in std_logic := '0';
    FI123	: in std_logic := '0';
    FI124	: in std_logic := '0';
    FI125	: in std_logic := '0';
    FI126	: in std_logic := '0';
    FI127	: in std_logic := '0';
    FI128	: in std_logic := '0';
    FI129	: in std_logic := '0';
    FI130	: in std_logic := '0';
    FI131	: in std_logic := '0';
    FI132	: in std_logic := '0';
    FI133	: in std_logic := '0';
    FI134	: in std_logic := '0';
    FI135	: in std_logic := '0';
    FI136	: in std_logic := '0';
    FI137	: in std_logic := '0';
    FI138	: in std_logic := '0';
    FI139	: in std_logic := '0';
    FI140	: in std_logic := '0';
    FI141	: in std_logic := '0';
    FI142	: in std_logic := '0';
    FI143	: in std_logic := '0';
    FI144	: in std_logic := '0';
    FI145	: in std_logic := '0';
    FI146	: in std_logic := '0';
    FI147	: in std_logic := '0';
    FI148	: in std_logic := '0';
    FI149	: in std_logic := '0';
    FI150	: in std_logic := '0';
    FI151	: in std_logic := '0';
    FI152	: in std_logic := '0';
    FI153	: in std_logic := '0';
    FI154	: in std_logic := '0';
    FI155	: in std_logic := '0';
    FI156	: in std_logic := '0';
    FI157	: in std_logic := '0';
    FI158	: in std_logic := '0';
    FI159	: in std_logic := '0';
    FI160	: in std_logic := '0';
    FI161	: in std_logic := '0';
    FI162	: in std_logic := '0';
    FI163	: in std_logic := '0';
    FI164	: in std_logic := '0';
    FI165	: in std_logic := '0';
    FI166	: in std_logic := '0';
    FI167	: in std_logic := '0';
    FI168	: in std_logic := '0';
    FI169	: in std_logic := '0';
    FI170	: in std_logic := '0';
    FI171	: in std_logic := '0';
    FI172	: in std_logic := '0';
    FI173	: in std_logic := '0';
    FI174	: in std_logic := '0';
    FI175	: in std_logic := '0';
    FI176	: in std_logic := '0';
    FI177	: in std_logic := '0';
    FI178	: in std_logic := '0';
    FI179	: in std_logic := '0';
    FI180	: in std_logic := '0';
    FI181	: in std_logic := '0';
    FI182	: in std_logic := '0';
    FI183	: in std_logic := '0';
    FI184	: in std_logic := '0';
    FI185	: in std_logic := '0';
    FI186	: in std_logic := '0';
    FI187	: in std_logic := '0';
    FI188	: in std_logic := '0';
    FI189	: in std_logic := '0';
    FI190	: in std_logic := '0';
    FI191	: in std_logic := '0';
    FI192	: in std_logic := '0';
    FO1	: out std_logic := '0';
    FO2	: out std_logic := '0';
    FO3	: out std_logic := '0';
    FO4	: out std_logic := '0';
    FO5	: out std_logic := '0';
    FO6	: out std_logic := '0';
    FO7	: out std_logic := '0';
    FO8	: out std_logic := '0';
    FO9	: out std_logic := '0';
    FO10	: out std_logic := '0';
    FO11	: out std_logic := '0';
    FO12	: out std_logic := '0';
    FO13	: out std_logic := '0';
    FO14	: out std_logic := '0';
    FO15	: out std_logic := '0';
    FO16	: out std_logic := '0';
    FO17	: out std_logic := '0';
    FO18	: out std_logic := '0';
    FO19	: out std_logic := '0';
    FO20	: out std_logic := '0';
    FO21	: out std_logic := '0';
    FO22	: out std_logic := '0';
    FO23	: out std_logic := '0';
    FO24	: out std_logic := '0';
    FO25	: out std_logic := '0';
    FO26	: out std_logic := '0';
    FO27	: out std_logic := '0';
    FO28	: out std_logic := '0';
    FO29	: out std_logic := '0';
    FO30	: out std_logic := '0';
    FO31	: out std_logic := '0';
    FO32	: out std_logic := '0';
    FO33	: out std_logic := '0';
    FO34	: out std_logic := '0';
    FO35	: out std_logic := '0';
    FO36	: out std_logic := '0';
    FO37	: out std_logic := '0';
    FO38	: out std_logic := '0';
    FO39	: out std_logic := '0';
    FO40	: out std_logic := '0';
    FO41	: out std_logic := '0';
    FO42	: out std_logic := '0';
    FO43	: out std_logic := '0';
    FO44	: out std_logic := '0';
    FO45	: out std_logic := '0';
    FO46	: out std_logic := '0';
    FO47	: out std_logic := '0';
    FO48	: out std_logic := '0';
    FO49	: out std_logic := '0';
    FO50	: out std_logic := '0';
    FO51	: out std_logic := '0';
    FO52	: out std_logic := '0';
    FO53	: out std_logic := '0';
    FO54	: out std_logic := '0';
    FO55	: out std_logic := '0';
    FO56	: out std_logic := '0';
    FO57	: out std_logic := '0';
    FO58	: out std_logic := '0';
    FO59	: out std_logic := '0';
    FO60	: out std_logic := '0';
    FO61	: out std_logic := '0';
    FO62	: out std_logic := '0';
    FO63	: out std_logic := '0';
    FO64	: out std_logic := '0';
    FO65	: out std_logic := '0';
    FO66	: out std_logic := '0';
    FO67	: out std_logic := '0';
    FO68	: out std_logic := '0';
    FO69	: out std_logic := '0';
    FO70	: out std_logic := '0';
    FO71	: out std_logic := '0';
    FO72	: out std_logic := '0';
    FO73	: out std_logic := '0';
    FO74	: out std_logic := '0';
    FO75	: out std_logic := '0';
    FO76	: out std_logic := '0';
    FO77	: out std_logic := '0';
    FO78	: out std_logic := '0';
    FO79	: out std_logic := '0';
    FO80	: out std_logic := '0';
    FO81	: out std_logic := '0';
    FO82	: out std_logic := '0';
    FO83	: out std_logic := '0';
    FO84	: out std_logic := '0';
    FO85	: out std_logic := '0';
    FO86	: out std_logic := '0';
    FO87	: out std_logic := '0';
    FO88	: out std_logic := '0';
    FO89	: out std_logic := '0';
    FO90	: out std_logic := '0';
    FO91	: out std_logic := '0';
    FO92	: out std_logic := '0';
    FO93	: out std_logic := '0';
    FO94	: out std_logic := '0';
    FO95	: out std_logic := '0';
    FO96	: out std_logic := '0';
    FO97	: out std_logic := '0';
    FO98	: out std_logic := '0';
    FO99	: out std_logic := '0';
    FO100	: out std_logic := '0';
    FO101	: out std_logic := '0';
    FO102	: out std_logic := '0';
    FO103	: out std_logic := '0';
    FO104	: out std_logic := '0';
    FO105	: out std_logic := '0';
    FO106	: out std_logic := '0';
    FO107	: out std_logic := '0';
    FO108	: out std_logic := '0';
    FO109	: out std_logic := '0';
    FO110	: out std_logic := '0';
    FO111	: out std_logic := '0';
    FO112	: out std_logic := '0';
    FO113	: out std_logic := '0';
    FO114	: out std_logic := '0';
    FO115	: out std_logic := '0';
    FO116	: out std_logic := '0';
    FO117	: out std_logic := '0';
    FO118	: out std_logic := '0';
    FO119	: out std_logic := '0';
    FO120	: out std_logic := '0';
    FO121	: out std_logic := '0';
    FO122	: out std_logic := '0';
    FO123	: out std_logic := '0';
    FO124	: out std_logic := '0';
    FO125	: out std_logic := '0';
    FO126	: out std_logic := '0';
    FO127	: out std_logic := '0';
    FO128	: out std_logic := '0';
    FO129	: out std_logic := '0';
    FO130	: out std_logic := '0';
    FO131	: out std_logic := '0';
    FO132	: out std_logic := '0';
    FO133	: out std_logic := '0';
    FO134	: out std_logic := '0';
    FO135	: out std_logic := '0';
    FO136	: out std_logic := '0';
    FO137	: out std_logic := '0';
    FO138	: out std_logic := '0';
    FO139	: out std_logic := '0';
    FO140	: out std_logic := '0';
    FO141	: out std_logic := '0';
    FO142	: out std_logic := '0';
    FO143	: out std_logic := '0';
    FO144	: out std_logic := '0';
    FO145	: out std_logic := '0';
    FO146	: out std_logic := '0';
    FO147	: out std_logic := '0';
    FO148	: out std_logic := '0';
    FO149	: out std_logic := '0';
    FO150	: out std_logic := '0';
    FO151	: out std_logic := '0';
    FO152	: out std_logic := '0';
    FO153	: out std_logic := '0';
    FO154	: out std_logic := '0';
    FO155	: out std_logic := '0';
    FO156	: out std_logic := '0';
    FO157	: out std_logic := '0';
    FO158	: out std_logic := '0';
    FO159	: out std_logic := '0';
    FO160	: out std_logic := '0';
    FO161	: out std_logic := '0';
    FO162	: out std_logic := '0';
    FO163	: out std_logic := '0';
    FO164	: out std_logic := '0';
    FO165	: out std_logic := '0';
    FO166	: out std_logic := '0';
    FO167	: out std_logic := '0';
    FO168	: out std_logic := '0';
    FO169	: out std_logic := '0';
    FO170	: out std_logic := '0';
    FO171	: out std_logic := '0';
    FO172	: out std_logic := '0';
    FO173	: out std_logic := '0';
    FO174	: out std_logic := '0';
    FO175	: out std_logic := '0';
    FO176	: out std_logic := '0';
    FO177	: out std_logic := '0';
    FO178	: out std_logic := '0';
    FO179	: out std_logic := '0';
    FO180	: out std_logic := '0';
    FO181	: out std_logic := '0';
    FO182	: out std_logic := '0';
    FO183	: out std_logic := '0';
    FO184	: out std_logic := '0';
    FO185	: out std_logic := '0';
    FO186	: out std_logic := '0';
    FO187	: out std_logic := '0';
    FO188	: out std_logic := '0';
    FO189	: out std_logic := '0';
    FO190	: out std_logic := '0';
    FO191	: out std_logic := '0';
    FO192	: out std_logic := '0'
);
end component NX_RB;

component NX_RB_WRAP is
generic (
    -- input : EI to FO
    inputClk    : bit_vector( 1 downto 0) := B"00"; -- 00 = CK[0], 01 = CK[1], 10 = CK[2] and 11 = CK[3]
    inputBypass : bit_vector(23 downto 0) := B"000000000000000000000000"; -- 1 bypass active, LSB is bypass registers 0 to 7 ... MSB is bypass registers 183 to 191
    -- output : FI to EO
    outputClk   : bit_vector( 1 downto 0) := B"00"; -- 00 = CK[0], 01 = CK[1], 10 = CK[2] and 11 = CK[3]
    outputBypass: bit_vector(23 downto 0) := B"000000000000000000000000"  -- 1 bypass active, LSB is bypass registers 1 to 8 ... MSB is bypass registers 184 to 192
);
port (
    CK	: in std_logic_vector(  3 downto 0) := (others => '0');
    EI	: in std_logic_vector(191 downto 0) := (others => '0');
    EO	: out std_logic_vector(191 downto 0) := (others => '0');
    FI	: in std_logic_vector(191 downto 0) := (others => '0');
    FO	: out std_logic_vector(191 downto 0) := (others => '0')
);
end component NX_RB_WRAP;

component NX_BD is
generic (
    system: bit := '1'
);
port (
    I	: in std_logic := '0';
    O	: out std_logic := '0'
);
end component NX_BD;


end nxPackage;
-- =================================================================================================
--   NX_LUT definition                                                                  2017/09/04
-- =================================================================================================

library ieee;
use ieee.std_logic_1164.all;

entity NX_LUT is
generic (
    lut_table : bit_vector(15 downto 0) := B"0000000000000000" -- truthTable t15 ... t0
);
port (
    I1 : in  std_logic;
    I2 : in  std_logic;
    I3 : in  std_logic;
    I4 : in  std_logic;
    O  : out std_logic
);
end NX_LUT;

architecture NX_RTL of NX_LUT is
    attribute NX_TYPE :string;
    attribute NX_TYPE of NX_RTL: architecture is "PHY";

    attribute NX_USE :string;
    attribute NX_USE of NX_RTL: architecture is "NX_LUT";
begin
end NX_RTL;

----------------------------------------------------------------------------------------------------

library ieee;
use ieee.std_logic_1164.all;

entity NX_DFF is
generic (
    dff_edge   : bit := '0';
    dff_init   : bit := '0';
    dff_load   : bit := '0';
    dff_sync   : bit := '0';
    dff_ctxt   : std_logic := 'U'
);
port (
    I  : in  std_logic;
    CK : in  std_logic;
    L  : in  std_logic;
    R  : in  std_logic;
    O  : out std_logic
);
end NX_DFF;

architecture NX_RTL of NX_DFF is
    attribute NX_TYPE :string;
    attribute NX_TYPE of NX_RTL: architecture is "PHY";

    attribute NX_USE :string;
    attribute NX_USE of NX_RTL: architecture is "NX_DFF";
begin
end NX_RTL;

----------------------------------------------------------------------------------------------------

library ieee;
use ieee.std_logic_1164.all;

entity NX_BFF is
port (
    I : in  std_logic;
    O : out std_logic
);
end NX_BFF;

architecture NX_RTL of NX_BFF is
    attribute NX_TYPE :string;
    attribute NX_TYPE of NX_RTL: architecture is "PHY";

    attribute NX_USE :string;
    attribute NX_USE of NX_RTL: architecture is "NX_BFF";
begin
end NX_RTL;

----------------------------------------------------------------------------------------------------

library ieee;
use ieee.std_logic_1164.all;

entity NX_DFR is
generic (
    location   : string := "";
    path       : integer := 0;
    mode       : integer := 0;
    dff_edge   : bit := '0';
    dff_init   : bit := '0';
    dff_load   : bit := '0';
    dff_sync   : bit := '0'
);
port (
    I  : in  std_logic;
    CK : in  std_logic;
    L  : in  std_logic;
    R  : in  std_logic;
    O  : out std_logic
);
end NX_DFR;

architecture NX_RTL of NX_DFR is
    attribute NX_TYPE :string;
    attribute NX_TYPE of NX_RTL: architecture is "PHY";

    attribute NX_USE :string;
    attribute NX_USE of NX_RTL: architecture is "NX_DFR";
begin
end NX_RTL;

----------------------------------------------------------------------------------------------------

library ieee;
use ieee.std_logic_1164.all;

entity NX_BFR is
generic (
    location   : string := "";
    path       : integer := 0;
    mode       : integer := 0
);
port (
    I : in  std_logic;
    O : out std_logic
);
end NX_BFR;

architecture NX_RTL of NX_BFR is
    attribute NX_TYPE :string;
    attribute NX_TYPE of NX_RTL: architecture is "PHY";

    attribute NX_USE :string;
    attribute NX_USE of NX_RTL: architecture is "NX_BFR";
begin
end NX_RTL;

----------------------------------------------------------------------------------------------------

`protect begin_protected
`protect version = 1
`protect encrypt_agent = "NanoXplore"
`protect key_keyowner = "Mentor Graphics Corporation", key_keyname = "MGC-VERIF-SIM-RSA-2", key_method = "rsa"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 256)
`protect key_block
l9HLWzb0KGeiylQX66UUxd6ILi+19zTk5ywS6WXVhmxstrPK/t6GLD6G38x2dMkJ
8DRQcVPdsDAlVTwAagtM++dahNEIYI4UyEhmhmS5xL5yJo5OFSjYLLIoSyJyTWTm
Y5wD+k4B4BEfNZognSyITMqVMfgZ9nJU71B4RU8jZS2bDaRrgVZnzkBnRVDrOg63
QMaKAlR9odmQ0Eq2X7aGxIL3RGiU4Cu+0jdUMgGXLhMAFhHIF7dFP++2utHojN3h
IFQT4D2mWJYy32+Aia3bDD0VkZU8erY3wD6J5dK4LSplsAoww7oTZKa6gz4ksUc3
lEYE5nVWwWRljHa610PrZw==
`protect data_method = "aes256-cbc"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 7216)
`protect data_block
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
ntMlm0PHqGjvbO9P4EL8ig==
`protect end_protected

-- =================================================================================================
--   NX_CY definition                                                                   2017/09/19
-- =================================================================================================

library ieee;
use ieee.std_logic_1164.all;

entity NX_CY is
generic (
    add_carry  : integer := 0      -- 0: low - 1: high - 2: propagate
);
port (
    A1 : in  std_logic;
    A2 : in  std_logic;
    A3 : in  std_logic;
    A4 : in  std_logic;
    B1 : in  std_logic;
    B2 : in  std_logic;
    B3 : in  std_logic;
    B4 : in  std_logic;
    CI : in  std_logic;
    CO : out std_logic;
    S1 : out std_logic;
    S2 : out std_logic;
    S3 : out std_logic;
    S4 : out std_logic
);
end NX_CY;

architecture NX_RTL of NX_CY is
    attribute NX_TYPE :string;
    attribute NX_TYPE of NX_RTL: architecture is "PHY";

    attribute NX_USE :string;
    attribute NX_USE of NX_RTL: architecture is "NX_CY";
begin
end NX_RTL;

----------------------------------------------------------------------------------------------------

`protect begin_protected
`protect version = 1
`protect encrypt_agent = "NanoXplore"
`protect key_keyowner = "Mentor Graphics Corporation", key_keyname = "MGC-VERIF-SIM-RSA-2", key_method = "rsa"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 256)
`protect key_block
oBRdmSIO2cigqRqxcI4iA7MeAhRQS39UASFw1EDo7MhldVaAawgeKqMgnU2tQvip
Jms56R6742XFwToBZsa18NnrRIVpy8i6PBgoUKG2Zwe0+T9gyh1qQ6btbdfUBiAP
QUoMsrBCrU/RHcvPn8raykHCLdV2vtirAokwD8mNuA8g0MaJL9JkMfZx6XzgZnMK
qx5x6SrNqZ1ldrIGu9Iru7gq/knRrp01fljYinerGerxwZXCP0q2PXvd/fGPzNKO
JAmSwA7TVZzUFah2JkyfRaT+v3AXxBStPoEKu0h9zvlFWOWhgZCDw7kihlhtQ7tj
Pt4BP56WkkTTdXYzfLGHyg==
`protect data_method = "aes256-cbc"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 2576)
`protect data_block
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
`protect end_protected

-- =================================================================================================
--   NX_RFB_U definition                                                                2017/09/19
-- =================================================================================================

library ieee;
use ieee.std_logic_1164.all;

entity NX_RFB_U is
generic (
    rck_edge  : bit := '0';   -- 0: read clock rising edge - 1: read clock falling edge
    wck_edge  : bit := '0';   -- 0: write clock rising edge - 1: write clock falling edge
    mem_ctxt  : string := "" -- memory initial context
);
port (
    RCK : in  std_logic;
    WCK : in  std_logic;
    I1  : in  std_logic;
    I2  : in  std_logic;
    I3  : in  std_logic;
    I4  : in  std_logic;
    I5  : in  std_logic;
    I6  : in  std_logic;
    I7  : in  std_logic;
    I8  : in  std_logic;
    I9  : in  std_logic;
    I10 : in  std_logic;
    I11 : in  std_logic;
    I12 : in  std_logic;
    I13 : in  std_logic;
    I14 : in  std_logic;
    I15 : in  std_logic;
    I16 : in  std_logic;
    I17 : in  std_logic;
    I18 : in  std_logic;
    COR : out std_logic;
    ERR : out std_logic;
    O1  : out std_logic;
    O2  : out std_logic;
    O3  : out std_logic;
    O4  : out std_logic;
    O5  : out std_logic;
    O6  : out std_logic;
    O7  : out std_logic;
    O8  : out std_logic;
    O9  : out std_logic;
    O10 : out std_logic;
    O11 : out std_logic;
    O12 : out std_logic;
    O13 : out std_logic;
    O14 : out std_logic;
    O15 : out std_logic;
    O16 : out std_logic;
    O17 : out std_logic;
    O18 : out std_logic;
    RA1 : in  std_logic;
    RA2 : in  std_logic;
    RA3 : in  std_logic;
    RA4 : in  std_logic;
    RA5 : in  std_logic;
    RE  : in  std_logic;
    WA1 : in  std_logic;
    WA2 : in  std_logic;
    WA3 : in  std_logic;
    WA4 : in  std_logic;
    WA5 : in  std_logic;
    WE  : in  std_logic;
    XRCK : out std_logic;
    XRO1 : out std_logic;
    XRO2 : out std_logic;
    XRO3 : out std_logic;
    XRO4 : out std_logic;
    XRO5 : out std_logic;
    XWCK : out std_logic;
    XWO1 : out std_logic;
    XWO2 : out std_logic;
    XWO3 : out std_logic;
    XWO4 : out std_logic;
    XWO5 : out std_logic
);
end NX_RFB_U;

architecture NX_RTL of NX_RFB_U is
    attribute NX_TYPE :string;
    attribute NX_TYPE of NX_RTL: architecture is "PHY";

    attribute NX_USE :string;
    attribute NX_USE of NX_RTL: architecture is "NX_RFB_U";
begin
end NX_RTL;

----------------------------------------------------------------------------------------------------

-- =================================================================================================
--   NX_RFB_U_WRAP definition                                                           2017/09/19
-- =================================================================================================

library ieee;
use ieee.std_logic_1164.all;

entity NX_RFB_U_WRAP is
generic (
    rck_edge  : bit := '0';   -- 0: read clock rising edge - 1: read clock falling edge
    wck_edge  : bit := '0';   -- 0: write clock rising edge - 1: write clock falling edge
    mem_ctxt  : string := "" -- memory initial context
);
port (
    RCK : in  std_logic;
    WCK : in  std_logic;
    I   : in  std_logic_vector(17 downto 0);
    COR : out std_logic;
    ERR : out std_logic;
    O   : out std_logic_vector(17 downto 0);
    RA  : in  std_logic_vector(4 downto 0);
    WA  : in  std_logic_vector(4 downto 0);
    WE  : in  std_logic;
    WEA : in  std_logic;
    XRCK : out std_logic;
    XRO  : out std_logic_vector(4 downto 0);
    XWCK : out std_logic;
    XWO  : out std_logic_vector(4 downto 0)
);
end NX_RFB_U_WRAP;

architecture NX_RTL of NX_RFB_U_WRAP is
    attribute NX_TYPE :string;
    attribute NX_TYPE of NX_RTL: architecture is "WRAPPER";

component NX_RFB_U
generic (
    rck_edge  : bit := '0';   -- 0: read clock rising edge - 1: read clock falling edge
    wck_edge  : bit := '0';   -- 0: write clock rising edge - 1: write clock falling edge
    mem_ctxt  : string := "" -- memory initial context
);
port (
    RCK : in  std_logic;
    WCK : in  std_logic;
    I1  : in  std_logic;
    I2  : in  std_logic;
    I3  : in  std_logic;
    I4  : in  std_logic;
    I5  : in  std_logic;
    I6  : in  std_logic;
    I7  : in  std_logic;
    I8  : in  std_logic;
    I9  : in  std_logic;
    I10 : in  std_logic;
    I11 : in  std_logic;
    I12 : in  std_logic;
    I13 : in  std_logic;
    I14 : in  std_logic;
    I15 : in  std_logic;
    I16 : in  std_logic;
    I17 : in  std_logic;
    I18 : in  std_logic;
    COR : out std_logic;
    ERR : out std_logic;
    O1  : out std_logic;
    O2  : out std_logic;
    O3  : out std_logic;
    O4  : out std_logic;
    O5  : out std_logic;
    O6  : out std_logic;
    O7  : out std_logic;
    O8  : out std_logic;
    O9  : out std_logic;
    O10 : out std_logic;
    O11 : out std_logic;
    O12 : out std_logic;
    O13 : out std_logic;
    O14 : out std_logic;
    O15 : out std_logic;
    O16 : out std_logic;
    O17 : out std_logic;
    O18 : out std_logic;
    RA1 : in  std_logic;
    RA2 : in  std_logic;
    RA3 : in  std_logic;
    RA4 : in  std_logic;
    RA5 : in  std_logic;
    WA1 : in  std_logic;
    WA2 : in  std_logic;
    WA3 : in  std_logic;
    WA4 : in  std_logic;
    WA5 : in  std_logic;
    WE  : in  std_logic;
    WEA : in  std_logic;
    XRCK : out std_logic;
    XRO1 : out std_logic;
    XRO2 : out std_logic;
    XRO3 : out std_logic;
    XRO4 : out std_logic;
    XRO5 : out std_logic;
    XWCK : out std_logic;
    XWO1 : out std_logic;
    XWO2 : out std_logic;
    XWO3 : out std_logic;
    XWO4 : out std_logic;
    XWO5 : out std_logic
);
end component NX_RFB_U;

begin

rfb: NX_RFB_U generic map (
    rck_edge    => rck_edge,
    wck_edge    => wck_edge,
    mem_ctxt    => mem_ctxt)
port map (
    RCK => RCK,
    WCK => WCK,
    I1  => I(0),
    I2  => I(1),
    I3  => I(2),
    I4  => I(3),
    I5  => I(4),
    I6  => I(5),
    I7  => I(6),
    I8  => I(7),
    I9  => I(8),
    I10 => I(9),
    I11 => I(10),
    I12 => I(11),
    I13 => I(12),
    I14 => I(13),
    I15 => I(14),
    I16 => I(15),
    I17 => I(16),
    I18 => I(17),
    COR => COR,
    ERR => ERR,
    O1  => O(0),
    O2  => O(1),
    O3  => O(2),
    O4  => O(3),
    O5  => O(4),
    O6  => O(5),
    O7  => O(6),
    O8  => O(7),
    O9  => O(8),
    O10 => O(9),
    O11 => O(10),
    O12 => O(11),
    O13 => O(12),
    O14 => O(13),
    O15 => O(14),
    O16 => O(15),
    O17 => O(16),
    O18 => O(17),
    RA1 => RA(0),
    RA2 => RA(1),
    RA3 => RA(2),
    RA4 => RA(3),
    RA5 => RA(4),
    WA1 => WA(0),
    WA2 => WA(1),
    WA3 => WA(2),
    WA4 => WA(3),
    WA5 => WA(4),
    WE  => WE,
    WEA => WEA,
    XRCK => XRCK,
    XRO1 => XRO(0),
    XRO2 => XRO(1),
    XRO3 => XRO(2),
    XRO4 => XRO(3),
    XRO5 => XRO(4),
    XWCK => XWCK,
    XWO1 => XWO(0),
    XWO2 => XWO(1),
    XWO3 => XWO(2),
    XWO4 => XWO(3),
    XWO5 => XWO(4)
);
end NX_RTL;

----------------------------------------------------------------------------------------------------

library ieee;
use ieee.std_logic_1164.all;

entity NX_CKS is
port (
    CKI : in  std_logic;
    CMD : in  std_logic;
    CKO : out std_logic
);
end NX_CKS;

architecture NX_RTL of NX_CKS is
    attribute NX_TYPE :string;
    attribute NX_TYPE of NX_RTL: architecture is "PHY";

    attribute NX_USE :string;
    attribute NX_USE of NX_RTL: architecture is "NX_CKS";
begin
end NX_RTL;
----------------------------------------------------------------------------------------------------

`protect begin_protected
`protect version = 1
`protect encrypt_agent = "NanoXplore"
`protect key_keyowner = "Mentor Graphics Corporation", key_keyname = "MGC-VERIF-SIM-RSA-2", key_method = "rsa"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 256)
`protect key_block
FfA65M9lKdYzP9sP2DE5wWU7bXkNFKgGk6+FOd+ZFxhpZ0xdBQZRTU1mFrP2RMKc
o5SeCDiHeRkmAg46fpl7iiUKwUAoJXF5ppVRWAESwKGB/Y+f80yLDnoSPx7KlyWH
X4L47PKQovbLkVEnibJBdsY5mgKG4kRlVHRf1FbPD5Yhm9Pdj8ef202jmueAE5O0
oRnXEW7IPVatRtbp03NJmm6teQ+EwG8VQvbFc0Yn/NbDvGZxCrAVHBARN8B3Ilx3
sdXrDYuZsXLyEybmnMgn3nwtTRg3ZEbJWGFipfmlfsvp1KhEqwy7XO6EbORoVFhm
T+h7G4myGa3Gi+WfiOO3Bg==
`protect data_method = "aes256-cbc"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 6816)
`protect data_block
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
`protect end_protected

-- =================================================================================================
--   NX_DSP_U definition                                                                2018/11/30
-- =================================================================================================

library ieee;
use ieee.std_logic_1164.all;

entity NX_DSP_U is
generic (
    std_mode    : string := ""; -- standard mode [ADD36, SUB36, SMUL18, UMUL18, ...] empty for raw
    raw_config0 : bit_vector(19 downto 0) := B"00000000000000000000";   -- MUX
    raw_config1 : bit_vector(18 downto 0) := B"0000000000000000000";    -- PRC
    raw_config2 : bit_vector(12 downto 0) := B"0000000000000";          -- PRR
    raw_config3 : bit_vector( 6 downto 0) := B"0000000"                 -- ALU
);
port (
    A1    : in  std_logic;
    A2    : in  std_logic;
    A3    : in  std_logic;
    A4    : in  std_logic;
    A5    : in  std_logic;
    A6    : in  std_logic;
    A7    : in  std_logic;
    A8    : in  std_logic;
    A9    : in  std_logic;
    A10   : in  std_logic;
    A11   : in  std_logic;
    A12   : in  std_logic;
    A13   : in  std_logic;
    A14   : in  std_logic;
    A15   : in  std_logic;
    A16   : in  std_logic;
    A17   : in  std_logic;
    A18   : in  std_logic;
    A19   : in  std_logic;
    A20   : in  std_logic;
    A21   : in  std_logic;
    A22   : in  std_logic;
    A23   : in  std_logic;
    A24   : in  std_logic;

    B1    : in  std_logic;
    B2    : in  std_logic;
    B3    : in  std_logic;
    B4    : in  std_logic;
    B5    : in  std_logic;
    B6    : in  std_logic;
    B7    : in  std_logic;
    B8    : in  std_logic;
    B9    : in  std_logic;
    B10   : in  std_logic;
    B11   : in  std_logic;
    B12   : in  std_logic;
    B13   : in  std_logic;
    B14   : in  std_logic;
    B15   : in  std_logic;
    B16   : in  std_logic;
    B17   : in  std_logic;
    B18   : in  std_logic;

    C1    : in  std_logic;
    C2    : in  std_logic;
    C3    : in  std_logic;
    C4    : in  std_logic;
    C5    : in  std_logic;
    C6    : in  std_logic;
    C7    : in  std_logic;
    C8    : in  std_logic;
    C9    : in  std_logic;
    C10   : in  std_logic;
    C11   : in  std_logic;
    C12   : in  std_logic;
    C13   : in  std_logic;
    C14   : in  std_logic;
    C15   : in  std_logic;
    C16   : in  std_logic;
    C17   : in  std_logic;
    C18   : in  std_logic;
    C19   : in  std_logic;
    C20   : in  std_logic;
    C21   : in  std_logic;
    C22   : in  std_logic;
    C23   : in  std_logic;
    C24   : in  std_logic;
    C25   : in  std_logic;
    C26   : in  std_logic;
    C27   : in  std_logic;
    C28   : in  std_logic;
    C29   : in  std_logic;
    C30   : in  std_logic;
    C31   : in  std_logic;
    C32   : in  std_logic;
    C33   : in  std_logic;
    C34   : in  std_logic;
    C35   : in  std_logic;
    C36   : in  std_logic;

    CAI1  : in  std_logic;
    CAI2  : in  std_logic;
    CAI3  : in  std_logic;
    CAI4  : in  std_logic;
    CAI5  : in  std_logic;
    CAI6  : in  std_logic;
    CAI7  : in  std_logic;
    CAI8  : in  std_logic;
    CAI9  : in  std_logic;
    CAI10 : in  std_logic;
    CAI11 : in  std_logic;
    CAI12 : in  std_logic;
    CAI13 : in  std_logic;
    CAI14 : in  std_logic;
    CAI15 : in  std_logic;
    CAI16 : in  std_logic;
    CAI17 : in  std_logic;
    CAI18 : in  std_logic;
    CAI19 : in  std_logic;
    CAI20 : in  std_logic;
    CAI21 : in  std_logic;
    CAI22 : in  std_logic;
    CAI23 : in  std_logic;
    CAI24 : in  std_logic;

    CAO1  : out std_logic;
    CAO2  : out std_logic;
    CAO3  : out std_logic;
    CAO4  : out std_logic;
    CAO5  : out std_logic;
    CAO6  : out std_logic;
    CAO7  : out std_logic;
    CAO8  : out std_logic;
    CAO9  : out std_logic;
    CAO10 : out std_logic;
    CAO11 : out std_logic;
    CAO12 : out std_logic;
    CAO13 : out std_logic;
    CAO14 : out std_logic;
    CAO15 : out std_logic;
    CAO16 : out std_logic;
    CAO17 : out std_logic;
    CAO18 : out std_logic;
    CAO19 : out std_logic;
    CAO20 : out std_logic;
    CAO21 : out std_logic;
    CAO22 : out std_logic;
    CAO23 : out std_logic;
    CAO24 : out std_logic;

    CBI1  : in  std_logic;
    CBI2  : in  std_logic;
    CBI3  : in  std_logic;
    CBI4  : in  std_logic;
    CBI5  : in  std_logic;
    CBI6  : in  std_logic;
    CBI7  : in  std_logic;
    CBI8  : in  std_logic;
    CBI9  : in  std_logic;
    CBI10 : in  std_logic;
    CBI11 : in  std_logic;
    CBI12 : in  std_logic;
    CBI13 : in  std_logic;
    CBI14 : in  std_logic;
    CBI15 : in  std_logic;
    CBI16 : in  std_logic;
    CBI17 : in  std_logic;
    CBI18 : in  std_logic;

    CBO1  : out std_logic;
    CBO2  : out std_logic;
    CBO3  : out std_logic;
    CBO4  : out std_logic;
    CBO5  : out std_logic;
    CBO6  : out std_logic;
    CBO7  : out std_logic;
    CBO8  : out std_logic;
    CBO9  : out std_logic;
    CBO10 : out std_logic;
    CBO11 : out std_logic;
    CBO12 : out std_logic;
    CBO13 : out std_logic;
    CBO14 : out std_logic;
    CBO15 : out std_logic;
    CBO16 : out std_logic;
    CBO17 : out std_logic;
    CBO18 : out std_logic;

    CCI   : in  std_logic;
    CCO   : out std_logic;
    CI    : in  std_logic;
    CK    : in  std_logic;
    CO    : out std_logic;
    CO43  : out std_logic;
    CO57  : out std_logic;

    CZI1  : in  std_logic;
    CZI2  : in  std_logic;
    CZI3  : in  std_logic;
    CZI4  : in  std_logic;
    CZI5  : in  std_logic;
    CZI6  : in  std_logic;
    CZI7  : in  std_logic;
    CZI8  : in  std_logic;
    CZI9  : in  std_logic;
    CZI10 : in  std_logic;
    CZI11 : in  std_logic;
    CZI12 : in  std_logic;
    CZI13 : in  std_logic;
    CZI14 : in  std_logic;
    CZI15 : in  std_logic;
    CZI16 : in  std_logic;
    CZI17 : in  std_logic;
    CZI18 : in  std_logic;
    CZI19 : in  std_logic;
    CZI20 : in  std_logic;
    CZI21 : in  std_logic;
    CZI22 : in  std_logic;
    CZI23 : in  std_logic;
    CZI24 : in  std_logic;
    CZI25 : in  std_logic;
    CZI26 : in  std_logic;
    CZI27 : in  std_logic;
    CZI28 : in  std_logic;
    CZI29 : in  std_logic;
    CZI30 : in  std_logic;
    CZI31 : in  std_logic;
    CZI32 : in  std_logic;
    CZI33 : in  std_logic;
    CZI34 : in  std_logic;
    CZI35 : in  std_logic;
    CZI36 : in  std_logic;
    CZI37 : in  std_logic;
    CZI38 : in  std_logic;
    CZI39 : in  std_logic;
    CZI40 : in  std_logic;
    CZI41 : in  std_logic;
    CZI42 : in  std_logic;
    CZI43 : in  std_logic;
    CZI44 : in  std_logic;
    CZI45 : in  std_logic;
    CZI46 : in  std_logic;
    CZI47 : in  std_logic;
    CZI48 : in  std_logic;
    CZI49 : in  std_logic;
    CZI50 : in  std_logic;
    CZI51 : in  std_logic;
    CZI52 : in  std_logic;
    CZI53 : in  std_logic;
    CZI54 : in  std_logic;
    CZI55 : in  std_logic;
    CZI56 : in  std_logic;

    CZO1  : out std_logic;
    CZO2  : out std_logic;
    CZO3  : out std_logic;
    CZO4  : out std_logic;
    CZO5  : out std_logic;
    CZO6  : out std_logic;
    CZO7  : out std_logic;
    CZO8  : out std_logic;
    CZO9  : out std_logic;
    CZO10 : out std_logic;
    CZO11 : out std_logic;
    CZO12 : out std_logic;
    CZO13 : out std_logic;
    CZO14 : out std_logic;
    CZO15 : out std_logic;
    CZO16 : out std_logic;
    CZO17 : out std_logic;
    CZO18 : out std_logic;
    CZO19 : out std_logic;
    CZO20 : out std_logic;
    CZO21 : out std_logic;
    CZO22 : out std_logic;
    CZO23 : out std_logic;
    CZO24 : out std_logic;
    CZO25 : out std_logic;
    CZO26 : out std_logic;
    CZO27 : out std_logic;
    CZO28 : out std_logic;
    CZO29 : out std_logic;
    CZO30 : out std_logic;
    CZO31 : out std_logic;
    CZO32 : out std_logic;
    CZO33 : out std_logic;
    CZO34 : out std_logic;
    CZO35 : out std_logic;
    CZO36 : out std_logic;
    CZO37 : out std_logic;
    CZO38 : out std_logic;
    CZO39 : out std_logic;
    CZO40 : out std_logic;
    CZO41 : out std_logic;
    CZO42 : out std_logic;
    CZO43 : out std_logic;
    CZO44 : out std_logic;
    CZO45 : out std_logic;
    CZO46 : out std_logic;
    CZO47 : out std_logic;
    CZO48 : out std_logic;
    CZO49 : out std_logic;
    CZO50 : out std_logic;
    CZO51 : out std_logic;
    CZO52 : out std_logic;
    CZO53 : out std_logic;
    CZO54 : out std_logic;
    CZO55 : out std_logic;
    CZO56 : out std_logic;

    D1    : in  std_logic;
    D2    : in  std_logic;
    D3    : in  std_logic;
    D4    : in  std_logic;
    D5    : in  std_logic;
    D6    : in  std_logic;
    D7    : in  std_logic;
    D8    : in  std_logic;
    D9    : in  std_logic;
    D10   : in  std_logic;
    D11   : in  std_logic;
    D12   : in  std_logic;
    D13   : in  std_logic;
    D14   : in  std_logic;
    D15   : in  std_logic;
    D16   : in  std_logic;
    D17   : in  std_logic;
    D18   : in  std_logic;

    OVF   : out std_logic;
    R     : in  std_logic;
    RZ    : in  std_logic;
    WE    : in  std_logic;
    WEZ   : in  std_logic;

    Z1    : out std_logic;
    Z2    : out std_logic;
    Z3    : out std_logic;
    Z4    : out std_logic;
    Z5    : out std_logic;
    Z6    : out std_logic;
    Z7    : out std_logic;
    Z8    : out std_logic;
    Z9    : out std_logic;
    Z10   : out std_logic;
    Z11   : out std_logic;
    Z12   : out std_logic;
    Z13   : out std_logic;
    Z14   : out std_logic;
    Z15   : out std_logic;
    Z16   : out std_logic;
    Z17   : out std_logic;
    Z18   : out std_logic;
    Z19   : out std_logic;
    Z20   : out std_logic;
    Z21   : out std_logic;
    Z22   : out std_logic;
    Z23   : out std_logic;
    Z24   : out std_logic;
    Z25   : out std_logic;
    Z26   : out std_logic;
    Z27   : out std_logic;
    Z28   : out std_logic;
    Z29   : out std_logic;
    Z30   : out std_logic;
    Z31   : out std_logic;
    Z32   : out std_logic;
    Z33   : out std_logic;
    Z34   : out std_logic;
    Z35   : out std_logic;
    Z36   : out std_logic;
    Z37   : out std_logic;
    Z38   : out std_logic;
    Z39   : out std_logic;
    Z40   : out std_logic;
    Z41   : out std_logic;
    Z42   : out std_logic;
    Z43   : out std_logic;
    Z44   : out std_logic;
    Z45   : out std_logic;
    Z46   : out std_logic;
    Z47   : out std_logic;
    Z48   : out std_logic;
    Z49   : out std_logic;
    Z50   : out std_logic;
    Z51   : out std_logic;
    Z52   : out std_logic;
    Z53   : out std_logic;
    Z54   : out std_logic;
    Z55   : out std_logic;
    Z56   : out std_logic
);
end NX_DSP_U;

architecture NX_RTL of NX_DSP_U is
    attribute NX_TYPE :string;
    attribute NX_TYPE of NX_RTL: architecture is "PHY";

    attribute NX_USE :string;
    attribute NX_USE of NX_RTL: architecture is "NX_DSP_U";
begin
end NX_RTL;

----------------------------------------------------------------------------------------------------

-- =================================================================================================
--   NX_DSP_U_WRAP definition                                                           2018/11/30
-- =================================================================================================

library IEEE;
use IEEE.STD_LOGIC_1164.ALL;

entity NX_DSP_U_WRAP is
generic (
    std_mode    : string := "";
    raw_config0 : bit_vector(19 downto 0) := B"00000000000000000000";        -- MUX
    raw_config1 : bit_vector(18 downto 0) := B"0000000000000000000";         -- PRC
    raw_config2 : bit_vector(12 downto 0) := B"0000000000000";               -- PRR
    raw_config3 : bit_vector( 6 downto 0) := B"0000000"                      -- ALU
);
port (
    A    : in  std_logic_vector(23 downto 0);
    B    : in  std_logic_vector(17 downto 0);
    C    : in  std_logic_vector(35 downto 0);

    CAI  : in  std_logic_vector(23 downto 0);
    CAO  : out std_logic_vector(23 downto 0);
    CBI  : in  std_logic_vector(17 downto 0);
    CBO  : out std_logic_vector(17 downto 0);

    CCI  : in  std_logic;
    CCO  : out std_logic;
    CI   : in  std_logic;
    CK   : in  std_logic;
    CO   : out std_logic;
    CO43 : out std_logic;
    CO57 : out std_logic;

    CZI  : in  std_logic_vector(55 downto 0);
    CZO  : out std_logic_vector(55 downto 0);

    D    : in  std_logic_vector(17 downto 0);

    OVF  : out std_logic;
    R    : in  std_logic;
    RZ   : in  std_logic;
    WE   : in  std_logic;
    WEZ  : in  std_logic;

    Z    : out std_logic_vector(55 downto 0)
);
end NX_DSP_U_WRAP;

-- architecture NXP_ARCH of NX_DSP_U_WRAP#{{{#
architecture NXP_ARCH of NX_DSP_U_WRAP is
    attribute NX_TYPE :string;
    attribute NX_TYPE of NXP_ARCH: architecture is "WRAPPER";

component NX_DSP_U
generic (
    std_mode    : string := "";
    raw_config0 : bit_vector(19 downto 0) := B"00000000000000000000";      -- MUX
    raw_config1 : bit_vector(18 downto 0) := B"0000000000000000000";       -- PRC
    raw_config2 : bit_vector(12 downto 0) := B"0000000000000";             -- PRR
    raw_config3 : bit_vector( 6 downto 0) := B"0000000"                    -- ALU
);
port (
    A1    : in  std_logic;
    A2    : in  std_logic;
    A3    : in  std_logic;
    A4    : in  std_logic;
    A5    : in  std_logic;
    A6    : in  std_logic;
    A7    : in  std_logic;
    A8    : in  std_logic;
    A9    : in  std_logic;
    A10   : in  std_logic;
    A11   : in  std_logic;
    A12   : in  std_logic;
    A13   : in  std_logic;
    A14   : in  std_logic;
    A15   : in  std_logic;
    A16   : in  std_logic;
    A17   : in  std_logic;
    A18   : in  std_logic;
    A19   : in  std_logic;
    A20   : in  std_logic;
    A21   : in  std_logic;
    A22   : in  std_logic;
    A23   : in  std_logic;
    A24   : in  std_logic;

    B1    : in  std_logic;
    B2    : in  std_logic;
    B3    : in  std_logic;
    B4    : in  std_logic;
    B5    : in  std_logic;
    B6    : in  std_logic;
    B7    : in  std_logic;
    B8    : in  std_logic;
    B9    : in  std_logic;
    B10   : in  std_logic;
    B11   : in  std_logic;
    B12   : in  std_logic;
    B13   : in  std_logic;
    B14   : in  std_logic;
    B15   : in  std_logic;
    B16   : in  std_logic;
    B17   : in  std_logic;
    B18   : in  std_logic;

    C1    : in  std_logic;
    C2    : in  std_logic;
    C3    : in  std_logic;
    C4    : in  std_logic;
    C5    : in  std_logic;
    C6    : in  std_logic;
    C7    : in  std_logic;
    C8    : in  std_logic;
    C9    : in  std_logic;
    C10   : in  std_logic;
    C11   : in  std_logic;
    C12   : in  std_logic;
    C13   : in  std_logic;
    C14   : in  std_logic;
    C15   : in  std_logic;
    C16   : in  std_logic;
    C17   : in  std_logic;
    C18   : in  std_logic;
    C19   : in  std_logic;
    C20   : in  std_logic;
    C21   : in  std_logic;
    C22   : in  std_logic;
    C23   : in  std_logic;
    C24   : in  std_logic;
    C25   : in  std_logic;
    C26   : in  std_logic;
    C27   : in  std_logic;
    C28   : in  std_logic;
    C29   : in  std_logic;
    C30   : in  std_logic;
    C31   : in  std_logic;
    C32   : in  std_logic;
    C33   : in  std_logic;
    C34   : in  std_logic;
    C35   : in  std_logic;
    C36   : in  std_logic;

    CAI1  : in  std_logic;
    CAI2  : in  std_logic;
    CAI3  : in  std_logic;
    CAI4  : in  std_logic;
    CAI5  : in  std_logic;
    CAI6  : in  std_logic;
    CAI7  : in  std_logic;
    CAI8  : in  std_logic;
    CAI9  : in  std_logic;
    CAI10 : in  std_logic;
    CAI11 : in  std_logic;
    CAI12 : in  std_logic;
    CAI13 : in  std_logic;
    CAI14 : in  std_logic;
    CAI15 : in  std_logic;
    CAI16 : in  std_logic;
    CAI17 : in  std_logic;
    CAI18 : in  std_logic;
    CAI19 : in  std_logic;
    CAI20 : in  std_logic;
    CAI21 : in  std_logic;
    CAI22 : in  std_logic;
    CAI23 : in  std_logic;
    CAI24 : in  std_logic;

    CAO1  : out std_logic;
    CAO2  : out std_logic;
    CAO3  : out std_logic;
    CAO4  : out std_logic;
    CAO5  : out std_logic;
    CAO6  : out std_logic;
    CAO7  : out std_logic;
    CAO8  : out std_logic;
    CAO9  : out std_logic;
    CAO10 : out std_logic;
    CAO11 : out std_logic;
    CAO12 : out std_logic;
    CAO13 : out std_logic;
    CAO14 : out std_logic;
    CAO15 : out std_logic;
    CAO16 : out std_logic;
    CAO17 : out std_logic;
    CAO18 : out std_logic;
    CAO19 : out std_logic;
    CAO20 : out std_logic;
    CAO21 : out std_logic;
    CAO22 : out std_logic;
    CAO23 : out std_logic;
    CAO24 : out std_logic;

    CBI1  : in  std_logic;
    CBI2  : in  std_logic;
    CBI3  : in  std_logic;
    CBI4  : in  std_logic;
    CBI5  : in  std_logic;
    CBI6  : in  std_logic;
    CBI7  : in  std_logic;
    CBI8  : in  std_logic;
    CBI9  : in  std_logic;
    CBI10 : in  std_logic;
    CBI11 : in  std_logic;
    CBI12 : in  std_logic;
    CBI13 : in  std_logic;
    CBI14 : in  std_logic;
    CBI15 : in  std_logic;
    CBI16 : in  std_logic;
    CBI17 : in  std_logic;
    CBI18 : in  std_logic;

    CBO1  : out std_logic;
    CBO2  : out std_logic;
    CBO3  : out std_logic;
    CBO4  : out std_logic;
    CBO5  : out std_logic;
    CBO6  : out std_logic;
    CBO7  : out std_logic;
    CBO8  : out std_logic;
    CBO9  : out std_logic;
    CBO10 : out std_logic;
    CBO11 : out std_logic;
    CBO12 : out std_logic;
    CBO13 : out std_logic;
    CBO14 : out std_logic;
    CBO15 : out std_logic;
    CBO16 : out std_logic;
    CBO17 : out std_logic;
    CBO18 : out std_logic;

    CCI   : in  std_logic;
    CCO   : out std_logic;
    CI    : in  std_logic;
    CK    : in  std_logic;
    CO    : out std_logic;
    CO43  : out std_logic;
    CO57  : out std_logic;

    CZI1  : in  std_logic;
    CZI2  : in  std_logic;
    CZI3  : in  std_logic;
    CZI4  : in  std_logic;
    CZI5  : in  std_logic;
    CZI6  : in  std_logic;
    CZI7  : in  std_logic;
    CZI8  : in  std_logic;
    CZI9  : in  std_logic;
    CZI10 : in  std_logic;
    CZI11 : in  std_logic;
    CZI12 : in  std_logic;
    CZI13 : in  std_logic;
    CZI14 : in  std_logic;
    CZI15 : in  std_logic;
    CZI16 : in  std_logic;
    CZI17 : in  std_logic;
    CZI18 : in  std_logic;
    CZI19 : in  std_logic;
    CZI20 : in  std_logic;
    CZI21 : in  std_logic;
    CZI22 : in  std_logic;
    CZI23 : in  std_logic;
    CZI24 : in  std_logic;
    CZI25 : in  std_logic;
    CZI26 : in  std_logic;
    CZI27 : in  std_logic;
    CZI28 : in  std_logic;
    CZI29 : in  std_logic;
    CZI30 : in  std_logic;
    CZI31 : in  std_logic;
    CZI32 : in  std_logic;
    CZI33 : in  std_logic;
    CZI34 : in  std_logic;
    CZI35 : in  std_logic;
    CZI36 : in  std_logic;
    CZI37 : in  std_logic;
    CZI38 : in  std_logic;
    CZI39 : in  std_logic;
    CZI40 : in  std_logic;
    CZI41 : in  std_logic;
    CZI42 : in  std_logic;
    CZI43 : in  std_logic;
    CZI44 : in  std_logic;
    CZI45 : in  std_logic;
    CZI46 : in  std_logic;
    CZI47 : in  std_logic;
    CZI48 : in  std_logic;
    CZI49 : in  std_logic;
    CZI50 : in  std_logic;
    CZI51 : in  std_logic;
    CZI52 : in  std_logic;
    CZI53 : in  std_logic;
    CZI54 : in  std_logic;
    CZI55 : in  std_logic;
    CZI56 : in  std_logic;

    CZO1  : out std_logic;
    CZO2  : out std_logic;
    CZO3  : out std_logic;
    CZO4  : out std_logic;
    CZO5  : out std_logic;
    CZO6  : out std_logic;
    CZO7  : out std_logic;
    CZO8  : out std_logic;
    CZO9  : out std_logic;
    CZO10 : out std_logic;
    CZO11 : out std_logic;
    CZO12 : out std_logic;
    CZO13 : out std_logic;
    CZO14 : out std_logic;
    CZO15 : out std_logic;
    CZO16 : out std_logic;
    CZO17 : out std_logic;
    CZO18 : out std_logic;
    CZO19 : out std_logic;
    CZO20 : out std_logic;
    CZO21 : out std_logic;
    CZO22 : out std_logic;
    CZO23 : out std_logic;
    CZO24 : out std_logic;
    CZO25 : out std_logic;
    CZO26 : out std_logic;
    CZO27 : out std_logic;
    CZO28 : out std_logic;
    CZO29 : out std_logic;
    CZO30 : out std_logic;
    CZO31 : out std_logic;
    CZO32 : out std_logic;
    CZO33 : out std_logic;
    CZO34 : out std_logic;
    CZO35 : out std_logic;
    CZO36 : out std_logic;
    CZO37 : out std_logic;
    CZO38 : out std_logic;
    CZO39 : out std_logic;
    CZO40 : out std_logic;
    CZO41 : out std_logic;
    CZO42 : out std_logic;
    CZO43 : out std_logic;
    CZO44 : out std_logic;
    CZO45 : out std_logic;
    CZO46 : out std_logic;
    CZO47 : out std_logic;
    CZO48 : out std_logic;
    CZO49 : out std_logic;
    CZO50 : out std_logic;
    CZO51 : out std_logic;
    CZO52 : out std_logic;
    CZO53 : out std_logic;
    CZO54 : out std_logic;
    CZO55 : out std_logic;
    CZO56 : out std_logic;

    D1    : in  std_logic;
    D2    : in  std_logic;
    D3    : in  std_logic;
    D4    : in  std_logic;
    D5    : in  std_logic;
    D6    : in  std_logic;
    D7    : in  std_logic;
    D8    : in  std_logic;
    D9    : in  std_logic;
    D10   : in  std_logic;
    D11   : in  std_logic;
    D12   : in  std_logic;
    D13   : in  std_logic;
    D14   : in  std_logic;
    D15   : in  std_logic;
    D16   : in  std_logic;
    D17   : in  std_logic;
    D18   : in  std_logic;

    OVF   : out std_logic;
    R     : in  std_logic;
    RZ    : in  std_logic;
    WE    : in  std_logic;
    WEZ   : in  std_logic;

    Z1    : out std_logic;
    Z2    : out std_logic;
    Z3    : out std_logic;
    Z4    : out std_logic;
    Z5    : out std_logic;
    Z6    : out std_logic;
    Z7    : out std_logic;
    Z8    : out std_logic;
    Z9    : out std_logic;
    Z10   : out std_logic;
    Z11   : out std_logic;
    Z12   : out std_logic;
    Z13   : out std_logic;
    Z14   : out std_logic;
    Z15   : out std_logic;
    Z16   : out std_logic;
    Z17   : out std_logic;
    Z18   : out std_logic;
    Z19   : out std_logic;
    Z20   : out std_logic;
    Z21   : out std_logic;
    Z22   : out std_logic;
    Z23   : out std_logic;
    Z24   : out std_logic;
    Z25   : out std_logic;
    Z26   : out std_logic;
    Z27   : out std_logic;
    Z28   : out std_logic;
    Z29   : out std_logic;
    Z30   : out std_logic;
    Z31   : out std_logic;
    Z32   : out std_logic;
    Z33   : out std_logic;
    Z34   : out std_logic;
    Z35   : out std_logic;
    Z36   : out std_logic;
    Z37   : out std_logic;
    Z38   : out std_logic;
    Z39   : out std_logic;
    Z40   : out std_logic;
    Z41   : out std_logic;
    Z42   : out std_logic;
    Z43   : out std_logic;
    Z44   : out std_logic;
    Z45   : out std_logic;
    Z46   : out std_logic;
    Z47   : out std_logic;
    Z48   : out std_logic;
    Z49   : out std_logic;
    Z50   : out std_logic;
    Z51   : out std_logic;
    Z52   : out std_logic;
    Z53   : out std_logic;
    Z54   : out std_logic;
    Z55   : out std_logic;
    Z56   : out std_logic
);
end component;

begin

dsp: NX_DSP_U generic map (
    std_mode    => std_mode,
    raw_config0 => raw_config0,
    raw_config1 => raw_config1,
    raw_config2 => raw_config2,
    raw_config3 => raw_config3)
port map (
    A1    => A(0),
    A2    => A(1),
    A3    => A(2),
    A4    => A(3),
    A5    => A(4),
    A6    => A(5),
    A7    => A(6),
    A8    => A(7),
    A9    => A(8),
    A10   => A(9),
    A11   => A(10),
    A12   => A(11),
    A13   => A(12),
    A14   => A(13),
    A15   => A(14),
    A16   => A(15),
    A17   => A(16),
    A18   => A(17),
    A19   => A(18),
    A20   => A(19),
    A21   => A(20),
    A22   => A(21),
    A23   => A(22),
    A24   => A(23),

    B1    => B(0),
    B2    => B(1),
    B3    => B(2),
    B4    => B(3),
    B5    => B(4),
    B6    => B(5),
    B7    => B(6),
    B8    => B(7),
    B9    => B(8),
    B10   => B(9),
    B11   => B(10),
    B12   => B(11),
    B13   => B(12),
    B14   => B(13),
    B15   => B(14),
    B16   => B(15),
    B17   => B(16),
    B18   => B(17),

    C1    => C(0),
    C2    => C(1),
    C3    => C(2),
    C4    => C(3),
    C5    => C(4),
    C6    => C(5),
    C7    => C(6),
    C8    => C(7),
    C9    => C(8),
    C10   => C(9),
    C11   => C(10),
    C12   => C(11),
    C13   => C(12),
    C14   => C(13),
    C15   => C(14),
    C16   => C(15),
    C17   => C(16),
    C18   => C(17),
    C19   => C(18),
    C20   => C(19),
    C21   => C(20),
    C22   => C(21),
    C23   => C(22),
    C24   => C(23),
    C25   => C(24),
    C26   => C(25),
    C27   => C(26),
    C28   => C(27),
    C29   => C(28),
    C30   => C(29),
    C31   => C(30),
    C32   => C(31),
    C33   => C(32),
    C34   => C(33),
    C35   => C(34),
    C36   => C(35),

    CAI1  => CAI(0),
    CAI2  => CAI(1),
    CAI3  => CAI(2),
    CAI4  => CAI(3),
    CAI5  => CAI(4),
    CAI6  => CAI(5),
    CAI7  => CAI(6),
    CAI8  => CAI(7),
    CAI9  => CAI(8),
    CAI10 => CAI(9),
    CAI11 => CAI(10),
    CAI12 => CAI(11),
    CAI13 => CAI(12),
    CAI14 => CAI(13),
    CAI15 => CAI(14),
    CAI16 => CAI(15),
    CAI17 => CAI(16),
    CAI18 => CAI(17),
    CAI19 => CAI(18),
    CAI20 => CAI(19),
    CAI21 => CAI(20),
    CAI22 => CAI(21),
    CAI23 => CAI(22),
    CAI24 => CAI(23),

    CAO1  => CAO(0),
    CAO2  => CAO(1),
    CAO3  => CAO(2),
    CAO4  => CAO(3),
    CAO5  => CAO(4),
    CAO6  => CAO(5),
    CAO7  => CAO(6),
    CAO8  => CAO(7),
    CAO9  => CAO(8),
    CAO10 => CAO(9),
    CAO11 => CAO(10),
    CAO12 => CAO(11),
    CAO13 => CAO(12),
    CAO14 => CAO(13),
    CAO15 => CAO(14),
    CAO16 => CAO(15),
    CAO17 => CAO(16),
    CAO18 => CAO(17),
    CAO19 => CAO(18),
    CAO20 => CAO(19),
    CAO21 => CAO(20),
    CAO22 => CAO(21),
    CAO23 => CAO(22),
    CAO24 => CAO(23),

    CBI1  => CBI(0),
    CBI2  => CBI(1),
    CBI3  => CBI(2),
    CBI4  => CBI(3),
    CBI5  => CBI(4),
    CBI6  => CBI(5),
    CBI7  => CBI(6),
    CBI8  => CBI(7),
    CBI9  => CBI(8),
    CBI10 => CBI(9),
    CBI11 => CBI(10),
    CBI12 => CBI(11),
    CBI13 => CBI(12),
    CBI14 => CBI(13),
    CBI15 => CBI(14),
    CBI16 => CBI(15),
    CBI17 => CBI(16),
    CBI18 => CBI(17),

    CBO1  => CBO(0),
    CBO2  => CBO(1),
    CBO3  => CBO(2),
    CBO4  => CBO(3),
    CBO5  => CBO(4),
    CBO6  => CBO(5),
    CBO7  => CBO(6),
    CBO8  => CBO(7),
    CBO9  => CBO(8),
    CBO10 => CBO(9),
    CBO11 => CBO(10),
    CBO12 => CBO(11),
    CBO13 => CBO(12),
    CBO14 => CBO(13),
    CBO15 => CBO(14),
    CBO16 => CBO(15),
    CBO17 => CBO(16),
    CBO18 => CBO(17),

    CCI   => CCI,
    CCO   => CCO,
    CI    => CI,
    CK    => CK,
    CO    => CO,
    CO43  => CO43,
    CO57  => CO57,

    CZI1  => CZI(0),
    CZI2  => CZI(1),
    CZI3  => CZI(2),
    CZI4  => CZI(3),
    CZI5  => CZI(4),
    CZI6  => CZI(5),
    CZI7  => CZI(6),
    CZI8  => CZI(7),
    CZI9  => CZI(8),
    CZI10 => CZI(9),
    CZI11 => CZI(10),
    CZI12 => CZI(11),
    CZI13 => CZI(12),
    CZI14 => CZI(13),
    CZI15 => CZI(14),
    CZI16 => CZI(15),
    CZI17 => CZI(16),
    CZI18 => CZI(17),
    CZI19 => CZI(18),
    CZI20 => CZI(19),
    CZI21 => CZI(20),
    CZI22 => CZI(21),
    CZI23 => CZI(22),
    CZI24 => CZI(23),
    CZI25 => CZI(24),
    CZI26 => CZI(25),
    CZI27 => CZI(26),
    CZI28 => CZI(27),
    CZI29 => CZI(28),
    CZI30 => CZI(29),
    CZI31 => CZI(30),
    CZI32 => CZI(31),
    CZI33 => CZI(32),
    CZI34 => CZI(33),
    CZI35 => CZI(34),
    CZI36 => CZI(35),
    CZI37 => CZI(36),
    CZI38 => CZI(37),
    CZI39 => CZI(38),
    CZI40 => CZI(39),
    CZI41 => CZI(40),
    CZI42 => CZI(41),
    CZI43 => CZI(42),
    CZI44 => CZI(43),
    CZI45 => CZI(44),
    CZI46 => CZI(45),
    CZI47 => CZI(46),
    CZI48 => CZI(47),
    CZI49 => CZI(48),
    CZI50 => CZI(49),
    CZI51 => CZI(50),
    CZI52 => CZI(51),
    CZI53 => CZI(52),
    CZI54 => CZI(53),
    CZI55 => CZI(54),
    CZI56 => CZI(55),

    CZO1  => CZO(0),
    CZO2  => CZO(1),
    CZO3  => CZO(2),
    CZO4  => CZO(3),
    CZO5  => CZO(4),
    CZO6  => CZO(5),
    CZO7  => CZO(6),
    CZO8  => CZO(7),
    CZO9  => CZO(8),
    CZO10 => CZO(9),
    CZO11 => CZO(10),
    CZO12 => CZO(11),
    CZO13 => CZO(12),
    CZO14 => CZO(13),
    CZO15 => CZO(14),
    CZO16 => CZO(15),
    CZO17 => CZO(16),
    CZO18 => CZO(17),
    CZO19 => CZO(18),
    CZO20 => CZO(19),
    CZO21 => CZO(20),
    CZO22 => CZO(21),
    CZO23 => CZO(22),
    CZO24 => CZO(23),
    CZO25 => CZO(24),
    CZO26 => CZO(25),
    CZO27 => CZO(26),
    CZO28 => CZO(27),
    CZO29 => CZO(28),
    CZO30 => CZO(29),
    CZO31 => CZO(30),
    CZO32 => CZO(31),
    CZO33 => CZO(32),
    CZO34 => CZO(33),
    CZO35 => CZO(34),
    CZO36 => CZO(35),
    CZO37 => CZO(36),
    CZO38 => CZO(37),
    CZO39 => CZO(38),
    CZO40 => CZO(39),
    CZO41 => CZO(40),
    CZO42 => CZO(41),
    CZO43 => CZO(42),
    CZO44 => CZO(43),
    CZO45 => CZO(44),
    CZO46 => CZO(45),
    CZO47 => CZO(46),
    CZO48 => CZO(47),
    CZO49 => CZO(48),
    CZO50 => CZO(49),
    CZO51 => CZO(50),
    CZO52 => CZO(51),
    CZO53 => CZO(52),
    CZO54 => CZO(53),
    CZO55 => CZO(54),
    CZO56 => CZO(55),

    D1    => D(0),
    D2    => D(1),
    D3    => D(2),
    D4    => D(3),
    D5    => D(4),
    D6    => D(5),
    D7    => D(6),
    D8    => D(7),
    D9    => D(8),
    D10   => D(9),
    D11   => D(10),
    D12   => D(11),
    D13   => D(12),
    D14   => D(13),
    D15   => D(14),
    D16   => D(15),
    D17   => D(16),
    D18   => D(17),

    OVF   => OVF,
    R     => R,
    RZ    => RZ,
    WE    => WE,
    WEZ   => WEZ,

    Z1    => Z(0),
    Z2    => Z(1),
    Z3    => Z(2),
    Z4    => Z(3),
    Z5    => Z(4),
    Z6    => Z(5),
    Z7    => Z(6),
    Z8    => Z(7),
    Z9    => Z(8),
    Z10   => Z(9),
    Z11   => Z(10),
    Z12   => Z(11),
    Z13   => Z(12),
    Z14   => Z(13),
    Z15   => Z(14),
    Z16   => Z(15),
    Z17   => Z(16),
    Z18   => Z(17),
    Z19   => Z(18),
    Z20   => Z(19),
    Z21   => Z(20),
    Z22   => Z(21),
    Z23   => Z(22),
    Z24   => Z(23),
    Z25   => Z(24),
    Z26   => Z(25),
    Z27   => Z(26),
    Z28   => Z(27),
    Z29   => Z(28),
    Z30   => Z(29),
    Z31   => Z(30),
    Z32   => Z(31),
    Z33   => Z(32),
    Z34   => Z(33),
    Z35   => Z(34),
    Z36   => Z(35),
    Z37   => Z(36),
    Z38   => Z(37),
    Z39   => Z(38),
    Z40   => Z(39),
    Z41   => Z(40),
    Z42   => Z(41),
    Z43   => Z(42),
    Z44   => Z(43),
    Z45   => Z(44),
    Z46   => Z(45),
    Z47   => Z(46),
    Z48   => Z(47),
    Z49   => Z(48),
    Z50   => Z(49),
    Z51   => Z(50),
    Z52   => Z(51),
    Z53   => Z(52),
    Z54   => Z(53),
    Z55   => Z(54),
    Z56   => Z(55)
);

end NXP_ARCH;
-- #}}}#

----------------------------------------------------------------------------------------------------

-- =================================================================================================
--   NX_DSP_U_SPLIT definition                                                          2018/11/30
-- =================================================================================================

library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.STD_LOGIC_arith.ALL;
use IEEE.STD_LOGIC_signed.ALL;

entity NX_DSP_U_SPLIT is
generic (
-------------------------------------------------------------------------
-- Generic declaration to define the "raw_config0" (cfg_mode). Defines :
------------------------------------------------------------------------- 
   SIGNED_MODE          : bit                    := '0';
   PRE_ADDER_OP         : bit                    := '0';       -- '0' = Additon, '1' = Subraction
   MUX_A                : bit                    := '0';       -- '0' = A input, '1' = CAI input
   MUX_B                : bit                    := '0';       -- '0' = B input, '1' = CBI input
   MUX_P                : bit                    := '0';       -- '0' for PRE_ADDER, '0' for B input
   MUX_X                : bit_vector(1 downto 0) := B"00";     -- Select X operand   "00" = C,
                                                               --                    "01" = CZI,
                                                               --                    "11" = SHFT(CZI) & C(11:0),
                                                               --                    "10" Select Z feedback
   MUX_Y                : bit                    := '0';       -- '0' Select MULT output, '1' for (B & A)
   MUX_CI               : bit                    := '0';       -- Select fabric input (not cascade)
   MUX_Z                : bit                    := '0';       -- Select ALU output
                                                               -- (not ALU input operand coming from PR_Y)

   Z_FEEDBACK_SHL12     : bit                    := '0';       -- '0' for No shift, '1' for 12-bit left shift
   ENABLE_SATURATION    : bit                    := '0';       -- '0' for Disable,  '1' for Enable
   SATURATION_RANK      : bit_vector(5 downto 0) := B"000000"; -- Weight of useful MSB
                                                               --        on Z and CZO result
                                                               --(to define saturation and overflow)

   ALU_DYNAMIC_OP       : bit                    := '0';       -- '0' for Static,
                                                               -- '1' for Dynamic
                                                               -- (D6 ... D1 is not used for dynamic operation)
   CO_SEL               : bit                    := '0';       -- '0' for C0 = ALU(36), '1' for CO = ALU(48)

-------------------------------------------------------------------------
-- Generic declaration to define the "raw_config1" (cfg_pipe_mux)
-------------------------------------------------------------------------
   PR_A_MUX                : bit_vector(1 downto 0) := B"00"; -- Number of pipe reg levels
                                                              --        on A input
   PR_A_CASCADE_MUX        : bit_vector(1 downto 0) := B"00"; -- Number of pipe reg levels
                                                              --        for CAO output
   PR_B_MUX                : bit_vector(1 downto 0) := B"00"; -- Number of pipe reg levels
                                                              --        on B input
   PR_B_CASCADE_MUX        : bit_vector(1 downto 0) := B"00"; -- Number of pipe reg levels
                                                              --        for CAO output

   PR_C_MUX                : bit                    := '0';   -- '0' for No pipe reg, '1' for 1 pipe reg
   PR_D_MUX                : bit                    := '0';   -- '0' for No pipe reg, '1' for 1 pipe reg
   PR_CI_MUX               : bit                    := '0';   -- '0' for No pipe reg, '1' for 1 pipe reg
   PR_P_MUX                : bit                    := '0';   -- '0' for No pipe reg, '1' for 1 pipe reg (Pre-adder)
   PR_X_MUX                : bit                    := '0';   -- '0' for No pipe reg, '1' for 1 pipe reg
   PR_Y_MUX                : bit                    := '0';   -- '0' for No pipe reg, '1' for 1 pipe reg

   PR_MULT_MUX             : bit                    := '0';   -- No pipe reg  -- Register inside MULT
   PR_ALU_MUX              : bit                    := '0';   -- No pipe reg  -- Register inside ALU
   PR_Z_MUX                : bit                    := '0';   -- Registered output

   PR_CO_MUX               : bit                    := '0';   -- '0' for No pipe reg, '1' for 1 pipe reg
   PR_OV_MUX               : bit                    := '0';   -- '0' for No pipe reg, '1' for 1 pipe reg

-------------------------------------------------------------------------
-- Generic declaration to define the "raw_config2" (cfg_pipe_rst)
-------------------------------------------------------------------------
   ENABLE_PR_A_RST         : bit                    := '0';   -- '0' for Disable, '1' for Enable 
   ENABLE_PR_B_RST         : bit                    := '0';   -- '0' for Disable, '1' for Enable 
   ENABLE_PR_C_RST         : bit                    := '0';   -- '0' for Disable, '1' for Enable 
   ENABLE_PR_D_RST         : bit                    := '0';   -- '0' for Disable, '1' for Enable 
   ENABLE_PR_CI_RST        : bit                    := '0';   -- '0' for Disable, '1' for Enable 
   ENABLE_PR_P_RST         : bit                    := '0';   -- '0' for Disable, '1' for Enable 
   ENABLE_PR_X_RST         : bit                    := '0';   -- '0' for Disable, '1' for Enable 
   ENABLE_PR_Y_RST         : bit                    := '0';   -- '0' for Disable, '1' for Enable 
   ENABLE_PR_MULT_RST      : bit                    := '0';   -- '0' for Disable, '1' for Enable 
   ENABLE_PR_ALU_RST       : bit                    := '0';   -- '0' for Disable, '1' for Enable 
   ENABLE_PR_Z_RST         : bit                    := '0';   -- '0' for Disable, '1' for Enable 
   ENABLE_PR_CO_RST        : bit                    := '0';   -- '0' for Disable, '1' for Enable 
   ENABLE_PR_OV_RST        : bit                    := '0';   -- '0' for Disable, '1' for Enable 

-------------------------------------------------------------------------
-- Constants declaration to define the "cfg_pipe_rst" -- raw_config3(6 downto 0)
-------------------------------------------------------------------------
   ALU_OP                  : bit_vector(5 downto 0) := B"000000"; -- Addition = "000000", Subtract = "001010"
   ALU_MUX                 : bit                    := '0'        -- '0' for Don't swap ALU operands,
                                                                  -- '1' for ALU Swap operands
    );
port(
   CK   : IN  std_logic;
   R    : IN  std_logic;
   RZ   : IN  std_logic;
   WE   : IN  std_logic;
   WEZ  : IN  std_logic;

   CI   : IN  std_logic;     -- cy_i
   A    : IN  std_logic_vector(23 downto 0);
   B    : IN  std_logic_vector(17 downto 0);
   C    : IN  std_logic_vector(35 downto 0);
   D    : IN  std_logic_vector(17 downto 0);
   CAI  : IN  std_logic_vector(23 downto 0);
   CBI  : IN  std_logic_vector(17 downto 0);
   CZI  : IN  std_logic_vector(55 downto 0);
   CCI  : IN  std_logic;  -- ccy_i

   Z    : out  std_logic_vector(55 downto 0);
   CO   : OUT  std_logic;  -- cy_o
   CO42 : OUT  std_logic;  -- cy42_o
   CO56 : OUT  std_logic;  -- cy56_o
   OVF  : OUT  std_logic;
   CAO  : OUT  std_logic_vector(23 downto 0);
   CBO  : OUT  std_logic_vector(17 downto 0);
   CZO  : OUT  std_logic_vector(55 downto 0);
   CCO  : OUT  std_logic  -- ccy_o
  );
end NX_DSP_U_SPLIT;

-- architecture NX_RTL of NX_DSP_U_SPLIT#{{{#
architecture NX_RTL of NX_DSP_U_SPLIT is

----------------------------------------------------------
-- Internal signals to be mapped to the NX_DSP_U component
----------------------------------------------------------
signal A1         : std_logic := '0';
signal A2         : std_logic := '0';
signal A3         : std_logic := '0';
signal A4         : std_logic := '0';
signal A5         : std_logic := '0';
signal A6         : std_logic := '0';
signal A7         : std_logic := '0';
signal A8         : std_logic := '0';
signal A9         : std_logic := '0';
signal A10        : std_logic := '0';
signal A11        : std_logic := '0';
signal A12        : std_logic := '0';
signal A13        : std_logic := '0';
signal A14        : std_logic := '0';
signal A15        : std_logic := '0';
signal A16        : std_logic := '0';
signal A17        : std_logic := '0';
signal A18        : std_logic := '0';
signal A19        : std_logic := '0';
signal A20        : std_logic := '0';
signal A21        : std_logic := '0';
signal A22        : std_logic := '0';
signal A23        : std_logic := '0';
signal A24        : std_logic := '0';

signal B1         : std_logic := '0';
signal B2         : std_logic := '0';
signal B3         : std_logic := '0';
signal B4         : std_logic := '0';
signal B5         : std_logic := '0';
signal B6         : std_logic := '0';
signal B7         : std_logic := '0';
signal B8         : std_logic := '0';
signal B9         : std_logic := '0';
signal B10        : std_logic := '0';
signal B11        : std_logic := '0';
signal B12        : std_logic := '0';
signal B13        : std_logic := '0';
signal B14        : std_logic := '0';
signal B15        : std_logic := '0';
signal B16        : std_logic := '0';
signal B17        : std_logic := '0';
signal B18        : std_logic := '0';
         
signal C1         : std_logic := '0';
signal C2         : std_logic := '0';
signal C3         : std_logic := '0';
signal C4         : std_logic := '0';
signal C5         : std_logic := '0';
signal C6         : std_logic := '0';
signal C7         : std_logic := '0';
signal C8         : std_logic := '0';
signal C9         : std_logic := '0';
signal C10        : std_logic := '0';
signal C11        : std_logic := '0';
signal C12        : std_logic := '0';
signal C13        : std_logic := '0';
signal C14        : std_logic := '0';
signal C15        : std_logic := '0';
signal C16        : std_logic := '0';
signal C17        : std_logic := '0';
signal C18        : std_logic := '0';
signal C19        : std_logic := '0';
signal C20        : std_logic := '0';
signal C21        : std_logic := '0';
signal C22        : std_logic := '0';
signal C23        : std_logic := '0';
signal C24        : std_logic := '0';
signal C25        : std_logic := '0';
signal C26        : std_logic := '0';
signal C27        : std_logic := '0';
signal C28        : std_logic := '0';
signal C29        : std_logic := '0';
signal C30        : std_logic := '0';
signal C31        : std_logic := '0';
signal C32        : std_logic := '0';
signal C33        : std_logic := '0';
signal C34        : std_logic := '0';
signal C35        : std_logic := '0';
signal C36        : std_logic := '0';

signal CAI1       : std_logic := '0';
signal CAI2       : std_logic := '0';
signal CAI3       : std_logic := '0';
signal CAI4       : std_logic := '0';
signal CAI5       : std_logic := '0';
signal CAI6       : std_logic := '0';
signal CAI7       : std_logic := '0';
signal CAI8       : std_logic := '0';
signal CAI9       : std_logic := '0';
signal CAI10      : std_logic := '0';
signal CAI11      : std_logic := '0';
signal CAI12      : std_logic := '0';
signal CAI13      : std_logic := '0';
signal CAI14      : std_logic := '0';
signal CAI15      : std_logic := '0';
signal CAI16      : std_logic := '0';
signal CAI17      : std_logic := '0';
signal CAI18      : std_logic := '0';
signal CAI19      : std_logic := '0';
signal CAI20      : std_logic := '0';
signal CAI21      : std_logic := '0';
signal CAI22      : std_logic := '0';
signal CAI23      : std_logic := '0';
signal CAI24      : std_logic := '0';

signal CAO1       : std_logic := '0';
signal CAO2       : std_logic := '0';
signal CAO3       : std_logic := '0';
signal CAO4       : std_logic := '0';
signal CAO5       : std_logic := '0';
signal CAO6       : std_logic := '0';
signal CAO7       : std_logic := '0';
signal CAO8       : std_logic := '0';
signal CAO9       : std_logic := '0';
signal CAO10      : std_logic := '0';
signal CAO11      : std_logic := '0';
signal CAO12      : std_logic := '0';
signal CAO13      : std_logic := '0';
signal CAO14      : std_logic := '0';
signal CAO15      : std_logic := '0';
signal CAO16      : std_logic := '0';
signal CAO17      : std_logic := '0';
signal CAO18      : std_logic := '0';
signal CAO19      : std_logic := '0';
signal CAO20      : std_logic := '0';
signal CAO21      : std_logic := '0';
signal CAO22      : std_logic := '0';
signal CAO23      : std_logic := '0';
signal CAO24      : std_logic := '0';

signal CBI1       : std_logic := '0';
signal CBI2       : std_logic := '0';
signal CBI3       : std_logic := '0';
signal CBI4       : std_logic := '0';
signal CBI5       : std_logic := '0';
signal CBI6       : std_logic := '0';
signal CBI7       : std_logic := '0';
signal CBI8       : std_logic := '0';
signal CBI9       : std_logic := '0';
signal CBI10      : std_logic := '0';
signal CBI11      : std_logic := '0';
signal CBI12      : std_logic := '0';
signal CBI13      : std_logic := '0';
signal CBI14      : std_logic := '0';
signal CBI15      : std_logic := '0';
signal CBI16      : std_logic := '0';
signal CBI17      : std_logic := '0';
signal CBI18      : std_logic := '0';

signal CBO1       : std_logic := '0';
signal CBO2       : std_logic := '0';
signal CBO3       : std_logic := '0';
signal CBO4       : std_logic := '0';
signal CBO5       : std_logic := '0';
signal CBO6       : std_logic := '0';
signal CBO7       : std_logic := '0';
signal CBO8       : std_logic := '0';
signal CBO9       : std_logic := '0';
signal CBO10      : std_logic := '0';
signal CBO11      : std_logic := '0';
signal CBO12      : std_logic := '0';
signal CBO13      : std_logic := '0';
signal CBO14      : std_logic := '0';
signal CBO15      : std_logic := '0';
signal CBO16      : std_logic := '0';
signal CBO17      : std_logic := '0';
signal CBO18      : std_logic := '0';

signal CO43       : std_logic := '0';
signal CO57       : std_logic := '0';

signal CZI1       : std_logic := '0';
signal CZI2       : std_logic := '0';
signal CZI3       : std_logic := '0';
signal CZI4       : std_logic := '0';
signal CZI5       : std_logic := '0';
signal CZI6       : std_logic := '0';
signal CZI7       : std_logic := '0';
signal CZI8       : std_logic := '0';
signal CZI9       : std_logic := '0';
signal CZI10      : std_logic := '0';
signal CZI11      : std_logic := '0';
signal CZI12      : std_logic := '0';
signal CZI13      : std_logic := '0';
signal CZI14      : std_logic := '0';
signal CZI15      : std_logic := '0';
signal CZI16      : std_logic := '0';
signal CZI17      : std_logic := '0';
signal CZI18      : std_logic := '0';
signal CZI19      : std_logic := '0';
signal CZI20      : std_logic := '0';
signal CZI21      : std_logic := '0';
signal CZI22      : std_logic := '0';
signal CZI23      : std_logic := '0';
signal CZI24      : std_logic := '0';
signal CZI25      : std_logic := '0';
signal CZI26      : std_logic := '0';
signal CZI27      : std_logic := '0';
signal CZI28      : std_logic := '0';
signal CZI29      : std_logic := '0';
signal CZI30      : std_logic := '0';
signal CZI31      : std_logic := '0';
signal CZI32      : std_logic := '0';
signal CZI33      : std_logic := '0';
signal CZI34      : std_logic := '0';
signal CZI35      : std_logic := '0';
signal CZI36      : std_logic := '0';
signal CZI37      : std_logic := '0';
signal CZI38      : std_logic := '0';
signal CZI39      : std_logic := '0';
signal CZI40      : std_logic := '0';
signal CZI41      : std_logic := '0';
signal CZI42      : std_logic := '0';
signal CZI43      : std_logic := '0';
signal CZI44      : std_logic := '0';
signal CZI45      : std_logic := '0';
signal CZI46      : std_logic := '0';
signal CZI47      : std_logic := '0';
signal CZI48      : std_logic := '0';
signal CZI49      : std_logic := '0';
signal CZI50      : std_logic := '0';
signal CZI51      : std_logic := '0';
signal CZI52      : std_logic := '0';
signal CZI53      : std_logic := '0';
signal CZI54      : std_logic := '0';
signal CZI55      : std_logic := '0';
signal CZI56      : std_logic := '0';

signal CZO1       : std_logic := '0';
signal CZO2       : std_logic := '0';
signal CZO3       : std_logic := '0';
signal CZO4       : std_logic := '0';
signal CZO5       : std_logic := '0';
signal CZO6       : std_logic := '0';
signal CZO7       : std_logic := '0';
signal CZO8       : std_logic := '0';
signal CZO9       : std_logic := '0';
signal CZO10      : std_logic := '0';
signal CZO11      : std_logic := '0';
signal CZO12      : std_logic := '0';
signal CZO13      : std_logic := '0';
signal CZO14      : std_logic := '0';
signal CZO15      : std_logic := '0';
signal CZO16      : std_logic := '0';
signal CZO17      : std_logic := '0';
signal CZO18      : std_logic := '0';
signal CZO19      : std_logic := '0';
signal CZO20      : std_logic := '0';
signal CZO21      : std_logic := '0';
signal CZO22      : std_logic := '0';
signal CZO23      : std_logic := '0';
signal CZO24      : std_logic := '0';
signal CZO25      : std_logic := '0';
signal CZO26      : std_logic := '0';
signal CZO27      : std_logic := '0';
signal CZO28      : std_logic := '0';
signal CZO29      : std_logic := '0';
signal CZO30      : std_logic := '0';
signal CZO31      : std_logic := '0';
signal CZO32      : std_logic := '0';
signal CZO33      : std_logic := '0';
signal CZO34      : std_logic := '0';
signal CZO35      : std_logic := '0';
signal CZO36      : std_logic := '0';
signal CZO37      : std_logic := '0';
signal CZO38      : std_logic := '0';
signal CZO39      : std_logic := '0';
signal CZO40      : std_logic := '0';
signal CZO41      : std_logic := '0';
signal CZO42      : std_logic := '0';
signal CZO43      : std_logic := '0';
signal CZO44      : std_logic := '0';
signal CZO45      : std_logic := '0';
signal CZO46      : std_logic := '0';
signal CZO47      : std_logic := '0';
signal CZO48      : std_logic := '0';
signal CZO49      : std_logic := '0';
signal CZO50      : std_logic := '0';
signal CZO51      : std_logic := '0';
signal CZO52      : std_logic := '0';
signal CZO53      : std_logic := '0';
signal CZO54      : std_logic := '0';
signal CZO55      : std_logic := '0';
signal CZO56      : std_logic := '0';

signal D1         : std_logic := '0';
signal D2         : std_logic := '0';
signal D3         : std_logic := '0';
signal D4         : std_logic := '0';
signal D5         : std_logic := '0';
signal D6         : std_logic := '0';
signal D7         : std_logic := '0';
signal D8         : std_logic := '0';
signal D9         : std_logic := '0';
signal D10        : std_logic := '0';
signal D11        : std_logic := '0';
signal D12        : std_logic := '0';
signal D13        : std_logic := '0';
signal D14        : std_logic := '0';
signal D15        : std_logic := '0';
signal D16        : std_logic := '0';
signal D17        : std_logic := '0';
signal D18        : std_logic := '0';

signal Z1         : std_logic := '0';
signal Z2         : std_logic := '0';
signal Z3         : std_logic := '0';
signal Z4         : std_logic := '0';
signal Z5         : std_logic := '0';
signal Z6         : std_logic := '0';
signal Z7         : std_logic := '0';
signal Z8         : std_logic := '0';
signal Z9         : std_logic := '0';
signal Z10        : std_logic := '0';
signal Z11        : std_logic := '0';
signal Z12        : std_logic := '0';
signal Z13        : std_logic := '0';
signal Z14        : std_logic := '0';
signal Z15        : std_logic := '0';
signal Z16        : std_logic := '0';
signal Z17        : std_logic := '0';
signal Z18        : std_logic := '0';
signal Z19        : std_logic := '0';
signal Z20        : std_logic := '0';
signal Z21        : std_logic := '0';
signal Z22        : std_logic := '0';
signal Z23        : std_logic := '0';
signal Z24        : std_logic := '0';
signal Z25        : std_logic := '0';
signal Z26        : std_logic := '0';
signal Z27        : std_logic := '0';
signal Z28        : std_logic := '0';
signal Z29        : std_logic := '0';
signal Z30        : std_logic := '0';
signal Z31        : std_logic := '0';
signal Z32        : std_logic := '0';
signal Z33        : std_logic := '0';
signal Z34        : std_logic := '0';
signal Z35        : std_logic := '0';
signal Z36        : std_logic := '0';
signal Z37        : std_logic := '0';
signal Z38        : std_logic := '0';
signal Z39        : std_logic := '0';
signal Z40        : std_logic := '0';
signal Z41        : std_logic := '0';
signal Z42        : std_logic := '0';
signal Z43        : std_logic := '0';
signal Z44        : std_logic := '0';
signal Z45        : std_logic := '0';
signal Z46        : std_logic := '0';
signal Z47        : std_logic := '0';
signal Z48        : std_logic := '0';
signal Z49        : std_logic := '0';
signal Z50        : std_logic := '0';
signal Z51        : std_logic := '0';
signal Z52        : std_logic := '0';
signal Z53        : std_logic := '0';
signal Z54        : std_logic := '0';
signal Z55        : std_logic := '0';


constant raw_config0_gen : bit_vector(19 downto 0)
    := CO_SEL & ALU_DYNAMIC_OP & SATURATION_RANK & ENABLE_SATURATION & Z_FEEDBACK_SHL12 & MUX_Z &
       MUX_CI & MUX_Y & MUX_X & MUX_P & MUX_B & MUX_A & PRE_ADDER_OP & SIGNED_MODE;

constant raw_config1_gen : bit_vector(18 downto 0)
    := PR_OV_MUX & PR_CO_MUX & PR_Z_MUX & PR_ALU_MUX & PR_MULT_MUX & PR_Y_MUX & PR_X_MUX &
       PR_P_MUX & PR_CI_MUX & PR_D_MUX & PR_C_MUX & PR_B_CASCADE_MUX & PR_B_MUX & PR_A_CASCADE_MUX &
       PR_A_MUX;

constant raw_config2_gen : bit_vector(12 downto 0)
    := ENABLE_PR_OV_RST & ENABLE_PR_CO_RST & ENABLE_PR_Z_RST & ENABLE_PR_ALU_RST &
       ENABLE_PR_MULT_RST & ENABLE_PR_Y_RST & ENABLE_PR_X_RST & ENABLE_PR_P_RST & ENABLE_PR_CI_RST &
       ENABLE_PR_D_RST & ENABLE_PR_C_RST & ENABLE_PR_B_RST & ENABLE_PR_A_RST;

constant raw_config3_gen : bit_vector(6 downto 0) := ALU_MUX & ALU_OP;


----------------------------------------------------------
-- NX_DSP_U declaration
----------------------------------------------------------
component NX_DSP_U
generic (
   std_mode    : string := ""; -- standard mode [ADD36, SUB36, SMUL18, UMUL18, ...] empty for raw
   raw_config0 : bit_vector(19 downto 0) := B"00000000000000000000";        -- MUX
   raw_config1 : bit_vector(18 downto 0) := B"0000000000000000000";         -- PRC
   raw_config2 : bit_vector(12 downto 0) := B"0000000000000";               -- PRR
   raw_config3 : bit_vector( 6 downto 0) := B"0000000"                      -- ALU
   );
port (
   A1         : in std_logic := '0';
   A2         : in std_logic := '0';
   A3         : in std_logic := '0';
   A4         : in std_logic := '0';
   A5         : in std_logic := '0';
   A6         : in std_logic := '0';
   A7         : in std_logic := '0';
   A8         : in std_logic := '0';
   A9         : in std_logic := '0';
   A10        : in std_logic := '0';
   A11        : in std_logic := '0';
   A12        : in std_logic := '0';
   A13        : in std_logic := '0';
   A14        : in std_logic := '0';
   A15        : in std_logic := '0';
   A16        : in std_logic := '0';
   A17        : in std_logic := '0';
   A18        : in std_logic := '0';
   A19        : in std_logic := '0';
   A20        : in std_logic := '0';
   A21        : in std_logic := '0';
   A22        : in std_logic := '0';
   A23        : in std_logic := '0';
   A24        : in std_logic := '0';

   B1         : in std_logic := '0';
   B2         : in std_logic := '0';
   B3         : in std_logic := '0';
   B4         : in std_logic := '0';
   B5         : in std_logic := '0';
   B6         : in std_logic := '0';
   B7         : in std_logic := '0';
   B8         : in std_logic := '0';
   B9         : in std_logic := '0';
   B10        : in std_logic := '0';
   B11        : in std_logic := '0';
   B12        : in std_logic := '0';
   B13        : in std_logic := '0';
   B14        : in std_logic := '0';
   B15        : in std_logic := '0';
   B16        : in std_logic := '0';
   B17        : in std_logic := '0';
   B18        : in std_logic := '0';

   C1         : in std_logic := '0';
   C2         : in std_logic := '0';
   C3         : in std_logic := '0';
   C4         : in std_logic := '0';
   C5         : in std_logic := '0';
   C6         : in std_logic := '0';
   C7         : in std_logic := '0';
   C8         : in std_logic := '0';
   C9         : in std_logic := '0';
   C10        : in std_logic := '0';
   C11        : in std_logic := '0';
   C12        : in std_logic := '0';
   C13        : in std_logic := '0';
   C14        : in std_logic := '0';
   C15        : in std_logic := '0';
   C16        : in std_logic := '0';
   C17        : in std_logic := '0';
   C18        : in std_logic := '0';
   C19        : in std_logic := '0';
   C20        : in std_logic := '0';
   C21        : in std_logic := '0';
   C22        : in std_logic := '0';
   C23        : in std_logic := '0';
   C24        : in std_logic := '0';
   C25        : in std_logic := '0';
   C26        : in std_logic := '0';
   C27        : in std_logic := '0';
   C28        : in std_logic := '0';
   C29        : in std_logic := '0';
   C30        : in std_logic := '0';
   C31        : in std_logic := '0';
   C32        : in std_logic := '0';
   C33        : in std_logic := '0';
   C34        : in std_logic := '0';
   C35        : in std_logic := '0';
   C36        : in std_logic := '0';

   CAI1       : in std_logic := '0';
   CAI2       : in std_logic := '0';
   CAI3       : in std_logic := '0';
   CAI4       : in std_logic := '0';
   CAI5       : in std_logic := '0';
   CAI6       : in std_logic := '0';
   CAI7       : in std_logic := '0';
   CAI8       : in std_logic := '0';
   CAI9       : in std_logic := '0';
   CAI10      : in std_logic := '0';
   CAI11      : in std_logic := '0';
   CAI12      : in std_logic := '0';
   CAI13      : in std_logic := '0';
   CAI14      : in std_logic := '0';
   CAI15      : in std_logic := '0';
   CAI16      : in std_logic := '0';
   CAI17      : in std_logic := '0';
   CAI18      : in std_logic := '0';
   CAI19      : in std_logic := '0';
   CAI20      : in std_logic := '0';
   CAI21      : in std_logic := '0';
   CAI22      : in std_logic := '0';
   CAI23      : in std_logic := '0';
   CAI24      : in std_logic := '0';

   CAO1       : out std_logic := '0';
   CAO2       : out std_logic := '0';
   CAO3       : out std_logic := '0';
   CAO4       : out std_logic := '0';
   CAO5       : out std_logic := '0';
   CAO6       : out std_logic := '0';
   CAO7       : out std_logic := '0';
   CAO8       : out std_logic := '0';
   CAO9       : out std_logic := '0';
   CAO10      : out std_logic := '0';
   CAO11      : out std_logic := '0';
   CAO12      : out std_logic := '0';
   CAO13      : out std_logic := '0';
   CAO14      : out std_logic := '0';
   CAO15      : out std_logic := '0';
   CAO16      : out std_logic := '0';
   CAO17      : out std_logic := '0';
   CAO18      : out std_logic := '0';
   CAO19      : out std_logic := '0';
   CAO20      : out std_logic := '0';
   CAO21      : out std_logic := '0';
   CAO22      : out std_logic := '0';
   CAO23      : out std_logic := '0';
   CAO24      : out std_logic := '0';

   CBI1       : in std_logic := '0';
   CBI2       : in std_logic := '0';
   CBI3       : in std_logic := '0';
   CBI4       : in std_logic := '0';
   CBI5       : in std_logic := '0';
   CBI6       : in std_logic := '0';
   CBI7       : in std_logic := '0';
   CBI8       : in std_logic := '0';
   CBI9       : in std_logic := '0';
   CBI10      : in std_logic := '0';
   CBI11      : in std_logic := '0';
   CBI12      : in std_logic := '0';
   CBI13      : in std_logic := '0';
   CBI14      : in std_logic := '0';
   CBI15      : in std_logic := '0';
   CBI16      : in std_logic := '0';
   CBI17      : in std_logic := '0';
   CBI18      : in std_logic := '0';

   CBO1       : out std_logic := '0';
   CBO2       : out std_logic := '0';
   CBO3       : out std_logic := '0';
   CBO4       : out std_logic := '0';
   CBO5       : out std_logic := '0';
   CBO6       : out std_logic := '0';
   CBO7       : out std_logic := '0';
   CBO8       : out std_logic := '0';
   CBO9       : out std_logic := '0';
   CBO10      : out std_logic := '0';
   CBO11      : out std_logic := '0';
   CBO12      : out std_logic := '0';
   CBO13      : out std_logic := '0';
   CBO14      : out std_logic := '0';
   CBO15      : out std_logic := '0';
   CBO16      : out std_logic := '0';
   CBO17      : out std_logic := '0';
   CBO18      : out std_logic := '0';

   CCI        : in std_logic := '0';
   CCO        : out std_logic := '0';
   CI         : in std_logic := '0';
   CK         : in std_logic := '0';
   CO         : out std_logic := '0';
   CO43       : out std_logic := '0';
   CO57       : out std_logic := '0';

   CZI1       : in std_logic := '0';
   CZI2       : in std_logic := '0';
   CZI3       : in std_logic := '0';
   CZI4       : in std_logic := '0';
   CZI5       : in std_logic := '0';
   CZI6       : in std_logic := '0';
   CZI7       : in std_logic := '0';
   CZI8       : in std_logic := '0';
   CZI9       : in std_logic := '0';
   CZI10      : in std_logic := '0';
   CZI11      : in std_logic := '0';
   CZI12      : in std_logic := '0';
   CZI13      : in std_logic := '0';
   CZI14      : in std_logic := '0';
   CZI15      : in std_logic := '0';
   CZI16      : in std_logic := '0';
   CZI17      : in std_logic := '0';
   CZI18      : in std_logic := '0';
   CZI19      : in std_logic := '0';
   CZI20      : in std_logic := '0';
   CZI21      : in std_logic := '0';
   CZI22      : in std_logic := '0';
   CZI23      : in std_logic := '0';
   CZI24      : in std_logic := '0';
   CZI25      : in std_logic := '0';
   CZI26      : in std_logic := '0';
   CZI27      : in std_logic := '0';
   CZI28      : in std_logic := '0';
   CZI29      : in std_logic := '0';
   CZI30      : in std_logic := '0';
   CZI31      : in std_logic := '0';
   CZI32      : in std_logic := '0';
   CZI33      : in std_logic := '0';
   CZI34      : in std_logic := '0';
   CZI35      : in std_logic := '0';
   CZI36      : in std_logic := '0';
   CZI37      : in std_logic := '0';
   CZI38      : in std_logic := '0';
   CZI39      : in std_logic := '0';
   CZI40      : in std_logic := '0';
   CZI41      : in std_logic := '0';
   CZI42      : in std_logic := '0';
   CZI43      : in std_logic := '0';
   CZI44      : in std_logic := '0';
   CZI45      : in std_logic := '0';
   CZI46      : in std_logic := '0';
   CZI47      : in std_logic := '0';
   CZI48      : in std_logic := '0';
   CZI49      : in std_logic := '0';
   CZI50      : in std_logic := '0';
   CZI51      : in std_logic := '0';
   CZI52      : in std_logic := '0';
   CZI53      : in std_logic := '0';
   CZI54      : in std_logic := '0';
   CZI55      : in std_logic := '0';
   CZI56      : in std_logic := '0';

   CZO1       : out std_logic := '0';
   CZO2       : out std_logic := '0';
   CZO3       : out std_logic := '0';
   CZO4       : out std_logic := '0';
   CZO5       : out std_logic := '0';
   CZO6       : out std_logic := '0';
   CZO7       : out std_logic := '0';
   CZO8       : out std_logic := '0';
   CZO9       : out std_logic := '0';
   CZO10      : out std_logic := '0';
   CZO11      : out std_logic := '0';
   CZO12      : out std_logic := '0';
   CZO13      : out std_logic := '0';
   CZO14      : out std_logic := '0';
   CZO15      : out std_logic := '0';
   CZO16      : out std_logic := '0';
   CZO17      : out std_logic := '0';
   CZO18      : out std_logic := '0';
   CZO19      : out std_logic := '0';
   CZO20      : out std_logic := '0';
   CZO21      : out std_logic := '0';
   CZO22      : out std_logic := '0';
   CZO23      : out std_logic := '0';
   CZO24      : out std_logic := '0';
   CZO25      : out std_logic := '0';
   CZO26      : out std_logic := '0';
   CZO27      : out std_logic := '0';
   CZO28      : out std_logic := '0';
   CZO29      : out std_logic := '0';
   CZO30      : out std_logic := '0';
   CZO31      : out std_logic := '0';
   CZO32      : out std_logic := '0';
   CZO33      : out std_logic := '0';
   CZO34      : out std_logic := '0';
   CZO35      : out std_logic := '0';
   CZO36      : out std_logic := '0';
   CZO37      : out std_logic := '0';
   CZO38      : out std_logic := '0';
   CZO39      : out std_logic := '0';
   CZO40      : out std_logic := '0';
   CZO41      : out std_logic := '0';
   CZO42      : out std_logic := '0';
   CZO43      : out std_logic := '0';
   CZO44      : out std_logic := '0';
   CZO45      : out std_logic := '0';
   CZO46      : out std_logic := '0';
   CZO47      : out std_logic := '0';
   CZO48      : out std_logic := '0';
   CZO49      : out std_logic := '0';
   CZO50      : out std_logic := '0';
   CZO51      : out std_logic := '0';
   CZO52      : out std_logic := '0';
   CZO53      : out std_logic := '0';
   CZO54      : out std_logic := '0';
   CZO55      : out std_logic := '0';
   CZO56      : out std_logic := '0';

   D1         : in std_logic := '0';
   D2         : in std_logic := '0';
   D3         : in std_logic := '0';
   D4         : in std_logic := '0';
   D5         : in std_logic := '0';
   D6         : in std_logic := '0';
   D7         : in std_logic := '0';
   D8         : in std_logic := '0';
   D9         : in std_logic := '0';
   D10        : in std_logic := '0';
   D11        : in std_logic := '0';
   D12        : in std_logic := '0';
   D13        : in std_logic := '0';
   D14        : in std_logic := '0';
   D15        : in std_logic := '0';
   D16        : in std_logic := '0';
   D17        : in std_logic := '0';
   D18        : in std_logic := '0';

   OVF        : out std_logic := '0';
   R          : in std_logic := '0';
   RZ         : in std_logic := '0';
   WE         : in std_logic := '0';

   Z1         : out std_logic := '0';
   Z2         : out std_logic := '0';
   Z3         : out std_logic := '0';
   Z4         : out std_logic := '0';
   Z5         : out std_logic := '0';
   Z6         : out std_logic := '0';
   Z7         : out std_logic := '0';
   Z8         : out std_logic := '0';
   Z9         : out std_logic := '0';
   Z10        : out std_logic := '0';
   Z11        : out std_logic := '0';
   Z12        : out std_logic := '0';
   Z13        : out std_logic := '0';
   Z14        : out std_logic := '0';
   Z15        : out std_logic := '0';
   Z16        : out std_logic := '0';
   Z17        : out std_logic := '0';
   Z18        : out std_logic := '0';
   Z19        : out std_logic := '0';
   Z20        : out std_logic := '0';
   Z21        : out std_logic := '0';
   Z22        : out std_logic := '0';
   Z23        : out std_logic := '0';
   Z24        : out std_logic := '0';
   Z25        : out std_logic := '0';
   Z26        : out std_logic := '0';
   Z27        : out std_logic := '0';
   Z28        : out std_logic := '0';
   Z29        : out std_logic := '0';
   Z30        : out std_logic := '0';
   Z31        : out std_logic := '0';
   Z32        : out std_logic := '0';
   Z33        : out std_logic := '0';
   Z34        : out std_logic := '0';
   Z35        : out std_logic := '0';
   Z36        : out std_logic := '0';
   Z37        : out std_logic := '0';
   Z38        : out std_logic := '0';
   Z39        : out std_logic := '0';
   Z40        : out std_logic := '0';
   Z41        : out std_logic := '0';
   Z42        : out std_logic := '0';
   Z43        : out std_logic := '0';
   Z44        : out std_logic := '0';
   Z45        : out std_logic := '0';
   Z46        : out std_logic := '0';
   Z47        : out std_logic := '0';
   Z48        : out std_logic := '0';
   Z49        : out std_logic := '0';
   Z50        : out std_logic := '0';
   Z51        : out std_logic := '0';
   Z52        : out std_logic := '0';
   Z53        : out std_logic := '0';
   Z54        : out std_logic := '0';
   Z55        : out std_logic := '0';
   Z56        : out std_logic := '0'
   );
end component;

begin

----------------------------------------------------------
-- Instantiation the NX_DSP_U component
----------------------------------------------------------
DSP_INST : NX_DSP_U
generic map (
   std_mode    => "", -- standard mode [ADD36, SUB36, SMUL18, UMUL18, ...] empty for raw
   raw_config0 => raw_config0_gen, -- MODE and MUXes
   raw_config1 => raw_config1_gen, -- Pipeline Registers
   raw_config2 => raw_config2_gen, -- Reset Enable for internal registers
   raw_config3 => raw_config3_gen   -- ALU modes
   )
port map (
   A1         => A(0),
   A2         => A(1),
   A3         => A(2),
   A4         => A(3),
   A5         => A(4),
   A6         => A(5),
   A7         => A(6),
   A8         => A(7),
   A9         => A(8),
   A10        => A(9),
   A11        => A(10),
   A12        => A(11),
   A13        => A(12),
   A14        => A(13),
   A15        => A(14),
   A16        => A(15),
   A17        => A(16),
   A18        => A(17),
   A19        => A(18),
   A20        => A(19),
   A21        => A(20),
   A22        => A(21),
   A23        => A(22),
   A24        => A(23),
         
   B1         => B(0),
   B2         => B(1),
   B3         => B(2),
   B4         => B(3),
   B5         => B(4),
   B6         => B(5),
   B7         => B(6),
   B8         => B(7),
   B9         => B(8),
   B10        => B(9),
   B11        => B(10),
   B12        => B(11),
   B13        => B(12),
   B14        => B(13),
   B15        => B(14),
   B16        => B(15),
   B17        => B(16),
   B18        => B(17),
        
   C1         => C(0),
   C2         => C(1),
   C3         => C(2),
   C4         => C(3),
   C5         => C(4),
   C6         => C(5),
   C7         => C(6),
   C8         => C(7),
   C9         => C(8),
   C10        => C(9),
   C11        => C(10),
   C12        => C(11),
   C13        => C(12),
   C14        => C(13),
   C15        => C(14),
   C16        => C(15),
   C17        => C(16),
   C18        => C(17),
   C19        => C(18),
   C20        => C(19),
   C21        => C(20),
   C22        => C(21),
   C23        => C(22),
   C24        => C(23),
   C25        => C(24),
   C26        => C(25),
   C27        => C(26),
   C28        => C(27),
   C29        => C(28),
   C30        => C(29),
   C31        => C(30),
   C32        => C(31),
   C33        => C(32),
   C34        => C(33),
   C35        => C(34),
   C36        => C(35),

   CAI1       => CAI(0),
   CAI2       => CAI(1),
   CAI3       => CAI(2),
   CAI4       => CAI(3),
   CAI5       => CAI(4),
   CAI6       => CAI(5),
   CAI7       => CAI(6),
   CAI8       => CAI(7),
   CAI9       => CAI(8),
   CAI10      => CAI(9),
   CAI11      => CAI(10),
   CAI12      => CAI(11),
   CAI13      => CAI(12),
   CAI14      => CAI(13),
   CAI15      => CAI(14),
   CAI16      => CAI(15),
   CAI17      => CAI(16),
   CAI18      => CAI(17),
   CAI19      => CAI(18),
   CAI20      => CAI(19),
   CAI21      => CAI(20),
   CAI22      => CAI(21),
   CAI23      => CAI(22),
   CAI24      => CAI(23),

   CAO1       => CAO(0),
   CAO2       => CAO(1),
   CAO3       => CAO(2),
   CAO4       => CAO(3),
   CAO5       => CAO(4),
   CAO6       => CAO(5),
   CAO7       => CAO(6),
   CAO8       => CAO(7),
   CAO9       => CAO(8),
   CAO10      => CAO(9),
   CAO11      => CAO(10),
   CAO12      => CAO(11),
   CAO13      => CAO(12),
   CAO14      => CAO(13),
   CAO15      => CAO(14),
   CAO16      => CAO(15),
   CAO17      => CAO(16),
   CAO18      => CAO(17),
   CAO19      => CAO(18),
   CAO20      => CAO(19),
   CAO21      => CAO(20),
   CAO22      => CAO(21),
   CAO23      => CAO(22),
   CAO24      => CAO(23),

   CBI1       => CBI(0),
   CBI2       => CBI(1),
   CBI3       => CBI(2),
   CBI4       => CBI(3),
   CBI5       => CBI(4),
   CBI6       => CBI(5),
   CBI7       => CBI(6),
   CBI8       => CBI(7),
   CBI9       => CBI(8),
   CBI10      => CBI(9),
   CBI11      => CBI(10),
   CBI12      => CBI(11),
   CBI13      => CBI(12),
   CBI14      => CBI(13),
   CBI15      => CBI(14),
   CBI16      => CBI(15),
   CBI17      => CBI(16),
   CBI18      => CBI(17),

   CBO1       => CBO(0),
   CBO2       => CBO(1),
   CBO3       => CBO(2),
   CBO4       => CBO(3),
   CBO5       => CBO(4),
   CBO6       => CBO(5),
   CBO7       => CBO(6),
   CBO8       => CBO(7),
   CBO9       => CBO(8),
   CBO10      => CBO(9),
   CBO11      => CBO(10),
   CBO12      => CBO(11),
   CBO13      => CBO(12),
   CBO14      => CBO(13),
   CBO15      => CBO(14),
   CBO16      => CBO(15),
   CBO17      => CBO(16),
   CBO18      => CBO(17),

   CCI        => CCI,
   CCO        => CCO,
   CI         => CI,
   CK         => CK,
   CO         => CO,
   CO43       => CO42,
   CO57       => CO56,

   CZI1       => CZI(0),
   CZI2       => CZI(1),
   CZI3       => CZI(2),
   CZI4       => CZI(3),
   CZI5       => CZI(4),
   CZI6       => CZI(5),
   CZI7       => CZI(6),
   CZI8       => CZI(7),
   CZI9       => CZI(8),
   CZI10      => CZI(9),
   CZI11      => CZI(10),
   CZI12      => CZI(11),
   CZI13      => CZI(12),
   CZI14      => CZI(13),
   CZI15      => CZI(14),
   CZI16      => CZI(15),
   CZI17      => CZI(16),
   CZI18      => CZI(17),
   CZI19      => CZI(18),
   CZI20      => CZI(19),
   CZI21      => CZI(20),
   CZI22      => CZI(21),
   CZI23      => CZI(22),
   CZI24      => CZI(23),
   CZI25      => CZI(24),
   CZI26      => CZI(25),
   CZI27      => CZI(26),
   CZI28      => CZI(27),
   CZI29      => CZI(28),
   CZI30      => CZI(29),
   CZI31      => CZI(30),
   CZI32      => CZI(31),
   CZI33      => CZI(32),
   CZI34      => CZI(33),
   CZI35      => CZI(34),
   CZI36      => CZI(35),
   CZI37      => CZI(36),
   CZI38      => CZI(37),
   CZI39      => CZI(38),
   CZI40      => CZI(39),
   CZI41      => CZI(40),
   CZI42      => CZI(41),
   CZI43      => CZI(42),
   CZI44      => CZI(43),
   CZI45      => CZI(44),
   CZI46      => CZI(45),
   CZI47      => CZI(46),
   CZI48      => CZI(47),
   CZI49      => CZI(48),
   CZI50      => CZI(49),
   CZI51      => CZI(50),
   CZI52      => CZI(51),
   CZI53      => CZI(52),
   CZI54      => CZI(53),
   CZI55      => CZI(54),
   CZI56      => CZI(55),

   CZO1       => CZO(0),
   CZO2       => CZO(1),
   CZO3       => CZO(2),
   CZO4       => CZO(3),
   CZO5       => CZO(4),
   CZO6       => CZO(5),
   CZO7       => CZO(6),
   CZO8       => CZO(7),
   CZO9       => CZO(8),
   CZO10      => CZO(9),
   CZO11      => CZO(10),
   CZO12      => CZO(11),
   CZO13      => CZO(12),
   CZO14      => CZO(13),
   CZO15      => CZO(14),
   CZO16      => CZO(15),
   CZO17      => CZO(16),
   CZO18      => CZO(17),
   CZO19      => CZO(18),
   CZO20      => CZO(19),
   CZO21      => CZO(20),
   CZO22      => CZO(21),
   CZO23      => CZO(22),
   CZO24      => CZO(23),
   CZO25      => CZO(24),
   CZO26      => CZO(25),
   CZO27      => CZO(26),
   CZO28      => CZO(27),
   CZO29      => CZO(28),
   CZO30      => CZO(29),
   CZO31      => CZO(30),
   CZO32      => CZO(31),
   CZO33      => CZO(32),
   CZO34      => CZO(33),
   CZO35      => CZO(34),
   CZO36      => CZO(35),
   CZO37      => CZO(36),
   CZO38      => CZO(37),
   CZO39      => CZO(38),
   CZO40      => CZO(39),
   CZO41      => CZO(40),
   CZO42      => CZO(41),
   CZO43      => CZO(42),
   CZO44      => CZO(43),
   CZO45      => CZO(44),
   CZO46      => CZO(45),
   CZO47      => CZO(46),
   CZO48      => CZO(47),
   CZO49      => CZO(48),
   CZO50      => CZO(49),
   CZO51      => CZO(50),
   CZO52      => CZO(51),
   CZO53      => CZO(52),
   CZO54      => CZO(53),
   CZO55      => CZO(54),
   CZO56      => CZO(55),

   D1         => D(0),
   D2         => D(1),
   D3         => D(2),
   D4         => D(3),
   D5         => D(4),
   D6         => D(5),
   D7         => D(6),
   D8         => D(7),
   D9         => D(8),
   D10        => D(9),
   D11        => D(10),
   D12        => D(11),
   D13        => D(12),
   D14        => D(13),
   D15        => D(14),
   D16        => D(15),
   D17        => D(16),
   D18        => D(17),

   OVF        => OVF,
   R          => R,
   RZ         => RZ,
   WE         => WE,

   Z1         => Z(0),
   Z2         => Z(1),
   Z3         => Z(2),
   Z4         => Z(3),
   Z5         => Z(4),
   Z6         => Z(5),
   Z7         => Z(6),
   Z8         => Z(7),
   Z9         => Z(8),
   Z10        => Z(9),
   Z11        => Z(10),
   Z12        => Z(11),
   Z13        => Z(12),
   Z14        => Z(13),
   Z15        => Z(14),
   Z16        => Z(15),
   Z17        => Z(16),
   Z18        => Z(17),
   Z19        => Z(18),
   Z20        => Z(19),
   Z21        => Z(20),
   Z22        => Z(21),
   Z23        => Z(22),
   Z24        => Z(23),
   Z25        => Z(24),
   Z26        => Z(25),
   Z27        => Z(26),
   Z28        => Z(27),
   Z29        => Z(28),
   Z30        => Z(29),
   Z31        => Z(30),
   Z32        => Z(31),
   Z33        => Z(32),
   Z34        => Z(33),
   Z35        => Z(34),
   Z36        => Z(35),
   Z37        => Z(36),
   Z38        => Z(37),
   Z39        => Z(38),
   Z40        => Z(39),
   Z41        => Z(40),
   Z42        => Z(41),
   Z43        => Z(42),
   Z44        => Z(43),
   Z45        => Z(44),
   Z46        => Z(45),
   Z47        => Z(46),
   Z48        => Z(47),
   Z49        => Z(48),
   Z50        => Z(49),
   Z51        => Z(50),
   Z52        => Z(51),
   Z53        => Z(52),
   Z54        => Z(53),
   Z55        => Z(54),
   Z56        => Z(55)
   );

end NX_RTL;
-- #}}}#

----------------------------------------------------------------------------------------------------

`protect begin_protected
`protect version = 1
`protect encrypt_agent = "NanoXplore"
`protect key_keyowner = "Mentor Graphics Corporation", key_keyname = "MGC-VERIF-SIM-RSA-2", key_method = "rsa"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 256)
`protect key_block
RahiIxmBPwp/pWPkdZdIhbDQIB7CjYVD2OIzTA+VqSCUrqF/MbLUbFI8PUQdrBwQ
iuc5nWQbjOtFDfuCLbtsZTcc6272+SkmBzoYZDf17uKvZR57dgHYZ7GxsezcZNsv
vHcKIWRBjj+gN+30xlqCgdoHGhaJnu7LY4zq+iSkU5s1hYg+WfFNtnCVdg8WFb+d
ccq+s+byNDk7m/mZGvp9SteefBwYlQRTp7RSBujg7XTLJH4SQPzH+q9XIi5xh81y
/Fr/WKXpuh+o/3sEURDCWGRZJkwvtfmu+dcDuIlqxvfq1LkxruKmMxbt3zg4ljBM
mciT9rZhm3LeRsijJ/E1Ww==
`protect data_method = "aes256-cbc"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 41152)
`protect data_block
ZoWAb6OX3oXoSLKQQdI/4MP4HD1W+UHgeSOxjSU0fpLL5nCJTrL4dcxUNcfbEMh0
Z8ibsCyI0oyEuhjrMG3hfH5x6zYzb8mzUO0wpEWu5zh+/34qwV7u77WvdFO7Q3PP
OyNxuu09+2qiHocIBLKfNaU2Qj1XkdAH24JmilUBOnBCJyzo2L/ZYJWmTChbmt1O
YwW1/LYsjnqi7QDpgUFbcISZCVgnNPz6d5HyXRixD2DCMTRINuz3ZvHn+zlL2X/5
bBber33vItTPgoywga3+7Xf6dqmobnnbRXlNDkUC+h+B95+CUEQSz5N/LbIxtYkW
DWdDJM5IWYsG5B0LAW+7yGH2mGzMsjj/OigGuHwV0Yv803ap5GJqOAR5MZCfVeuz
CEPziYzlwT7gaJ4A3UDWb1qXoKAQpppK9sHuuFag9gS/83hhMbATF5IUCO0cQLGq
uw4q+25W0iJF7oe5AF3r4a2phcAk+ZqfJTSUOR/ZzlaT5LP4pmpYZUQGuVxJhyjr
bvB/ZMeYVyzH3a4fLO8dTQLVtDdAZrp3ViO2OMPM8wAt2/Dk49CJFOPyKQLUmA+I
NDCEFLxkYFdEu/poXoQE7z4fK9a3y5+4GVwDJlkfBjlQraVe+MCr9lyYZFlotyeC
AQLEOfmQFbQsl21xkM4cSBx9gaupiq9IofFAKbJ3rBS06DcSBYvPkRohyK1Ta1eI
LLJyz+CTcvQfGBZrLaZT4Jea9PdH2u9t6GM5GgbE4LQRHXGYnqGrdQ4kZBQQ3SZS
5BV/IAC3ou90TQUqLCcGJub0z+Ogl0xq8q4Fhdk3kLHgix4jBJC6zafAdFn8s/hO
8tHrYIe/93D/NYBJocwDDNBP1Uu4Xh3/Xhu0LzTFSq0OdF8VZZ3817RdUNJDAtaw
z+07oyhJAjTjDskejfPFK+Z28Pqg0ud8imony1SWf+QyNKPGySaDIFWeTOJesCuo
M6+ZCkf72Y+g/Zc2Ykf4vVUlIwjioMQaYlf/Tk+WDgXFkABln/MoLmDhyFSfXH+N
JP8CIIK1BEkRpFCu4zSACzzUaA9EJGS3BJWyF9mkcfU2jkYUCWZZhcMdS1en1Qxk
osvnl5JEYTClvr9MrGU2NcjiPk47M/f6BrpqkdGZKp9KNLw77bVAcA/AIVFDdj44
rUngGzsLmKvLSeghQJCtfnkEkNp9oiOGw3Bw+k+xSt3Xsz/JtWzX1LIxSp5ofiYu
eSpvS6dC70DQy2Up1An4qnEkVEBBdm8Rj6kK0IasrkGiEfKJ7qiIX65P2hxSPgEZ
Ropn+P1pOuQyXZIE6jBIpz6ficIJ+y5A1v4yDnfLmvBMEISU7/Gm0GwoCDYUjsSq
W+LqWs+lxtHoW65zbfXDZfiLWyn1jkztxO6o+JlFGhakIwY20hFJgGr+F32rKHNf
laOyFX1CaP7G+N3ywlfhyCjqI1Q3Y4HSqyBhSbBCSsuWcGhCiwugO2PrUpdomgHW
YiCLKLKcdxAgFcV9HXyJFgtQ9DCt7rcjT1j5YXYvDdkyjP69hFRPAzz+QUVrq2mj
aMvdZnfZsiL6yzBSqn88+3mX+aYusGL5o/VWF+OFcqQiQ40jBNiwVohlmNYcOdl/
R8D8mtLXxD2pjynNKCfs3GbpusdBeuboXh+6sX6zWzyPIErPi5zJgXAZDW2uoO13
OcNK83o8v4OTysMh44GD+USe5yjMtYda4se5kdlZJoYkBZ8iLLe3fnrUAFUvRjbg
ycRrCE63zTSaAmNZNUm+boMh3lxJqbI3xv31BBna7C8aJEHCYpbxZFsJrz92okKp
AFpkS7fk0CHMDqO6R/hphAjO5gM4JcOJqPCecNExsvSx60wXltpbBRGdeCe6kb+L
pwktjAxlTrq4iXm9pjZFLDdc9wnf6Zw2i1EQ0WWY8/dMbCbTFjpim0UIx6eY9t6X
D7hF4Iltw0xuSzEQH26oKz4Sb0rCtcVQyU3fiM2TgoPK3ijNCfGjDfbg/xlvXjz0
dFXk/7//edG1+18cAh5CgautqVGvp5HfOcTcV+SHUM8PfBOtNcE6T5i3rpGGXnwk
sFZRxGJV3S75qC0EUNm4K8Dy/IOSLk+d07T+Dm/Ge/3IuOcgBuhT2R3xapJPHJiD
tR9Pma7+A+IB2GeaV9zmcze3A78fZRCQseRrsOuYeiD+u5fyh8hrKu+R5Dhu+iK/
BQiPs11AaRsPWIn6AwsWZn5AerzW6KqNq/YtUNDTe2L1Ws1KUBvSnU1741ai09eR
Zr66qRBp/BHM1fya0TLJqysqkZdufQ8Yeivk9JOnC57fOFcYxawDWH7g6w8XltmP
VQOk+mUP2bdHhOLmMnipx2fwb7NTO7g6wXMZgFk+k8krfy+yWx2sGXGLW323QIzf
arintTaRhdYy62ImvPzFu/DvSPR7Gh0GP040PSR6jm2HduyhoD0QtajsTnuXkuXb
jEy+/6pOx+tbwuSUufWlGQU9owllnb8bf7wVf0/pYHfoUsc+ObVOpqiwX+F4qhCP
VAG2vSzl+xWn5KhxmyLpuZJ2ViDT6sKSmtXTz8ofiGZiq6qH403GrnrQHILGBbQ7
FjebXmfeMynTBT0nFtLAr+1UlDm+APPIYrmlG0GmYyvw0alGmLbE++knCpJgbglH
rldrVx+1l2Wt7va+spg2o1Z1Eb2KeJebO9YdLOBmjkZuAxeo4HJSF1JlDRnI6JNp
FWOyI+niN2LAlf1jNJJSebqYJOMMTj9DRtt5oek04UIc4MW+mTSD0iyPDlc0h4fk
2hKzfEDb47+SryrKS3tov2G7/ngSPuf1BXiEQ5OTrLTyc5xLu7ckmoJmr2CI/OjL
7jr7T5Du5+Lp5dUKCRGswxlPHa0ABjIvFW2ivzUkWtLZ9/3i1yUNPoii4kBxlt+N
uYXVLfA1JIXxlYnVdr/DJ3VI33JNuQeNjB0pGpohW82mjRmqUg4RofvDKeh5jCCR
mM9+xP4SovvVigiVksWy0fZCPnnVYR3MMFOXS4woUeac59g1aJt05cCgQjHumnxf
wsNSvePFZhhvKXmQswoqJySPZ9Nywmo+BjR5VtrXegvBwOKRQxYwVmZKzO01DCjf
SIcHApjiiZj712Uj1cQ0n1KGUdVNSJvmrYEhlK55lz7HUZ3B6Ti8+71Uu8igN2//
lhh+u1gBqt8JBwvZvzTZhQ9AdRON+banH4bFGC8XbhZDpxAL7LyrixJN/HQhcCMX
71SoMraiiREzQrNuZG6BfpYjDNgWwp04NRiC1ZL8OP3xiEt/1VYvdinFC1Sbbb01
QWNE7Q3i+KCcjT/DeIS75bOKm7KGzLHmAjUxKDYCEI3n7jtkU1cF61mJ5sqwh18i
+qzk1cMUhPMZKbTGnd/+wgiYffMnQV60wgmr3hb7waQ76EVsm4ipJ3izTKb9wjr7
YxR3Ha/a1WxWAjBpqS5sA8zfzF7yryAyM49cLT0nUWx/rtLqAyxh0deMC/g0UKsY
3BZsHmD581AeLDfZ4CDekGQhj2aEfIo9PoAj9dDPOK7G1gL0HzDiniWwuYWR69rv
GMM3D0scLf7VqYM8yNX5Bqm4PyZNksiYZoXGtSio8z7SBmX8I/80gqsyNaZzMRH/
tfazOrZdb/Np+w7FdT5zFPYve3VziCOuhLT9g4qyZzA4zX9Gx2BJyOt6m5Ppl8xu
A/Yh24xU9y2O674hJHwmnppJb8Po/PYucnEUXFbeUZ/t0BOmYiEnFgUcTZH1QDav
cZht4lLdGH8ZHNkgREnwyAaD5Jz1JsAaS28HHP2XCE4OOMolVQSFIZKYODWmtHXa
BCw7q8yYGSoyH4rvAhHNaXxEjVVd2O83Y18QASJrdDup8C18nHn5pBVOIysUXkc8
TEnLAqqXvdhGvWfF4T2PUjqemLou9XwbXZJxSzWXh0Eas5ifVfBeLKxdfSsGeBna
09skvwSWSepK4HFy6x2oZMvRGzW75PMF0kakdiWWDNrD3Pc6BSM3A6KOqyXioKVn
61MFfl+6QgHqBii4FJLqSILm1Xv33S0m17bcQluiUOXv61DsU8euTEzwE1EGIg/j
ibyOzxZhh6ML/PVjhuLukeKM3a3sSJpSH640pLnCL4YdDeKFfXC7sJ0Lh36iN83e
u/UJP6XrnBbayuJGwgrL9NYRBLaEC6BK1hrtIj0+evhkEkHnPc60FXi46x44YYQs
DwWFAgZoDgDda9ec27myj7pvLX6lCyn2pN5kfggpQltBMKkWopm0ptSvncWSVH12
aCte5Nx/pAMZSfuhsHJjtwptslH8GoJQQQdBX78ZNePKTPr9YSJGS/sL9AYS90gW
LYIOLq6ymzGgcKpkb6oo9UQF2FyegfDYYgSa6/kt6owYvpvOCEIHRPkD8K5kA8ZM
Ds1JPl0atvdbWmvminEQcrYpX8V9qRYqj8AhnBz8dXOTsPgzEvzZt5IhY06QMSth
gjaw9hnoGP5CLYT/jGwoCUwBnyd8tLmzBZxQBh6f4DNX+eFkP/I92ZOvJK/Mdroe
ZMzIO4w1dDd33Cj2p9a/fV8vphd5RdEw037NTLK4ztmf6L6BqEcVGh/C0K4/WRLW
MX8ORldZlF2ipx89yREOrtOrbRQTFgqhglEukLU3wYbjDHHIrwg2ILJLthpLCR+6
2RImx3JtWqLtmrYP8AwJUiEINkVw+8WWA9seTpseAb7F2Bh0SQ+HfkUCrnSAJFLK
0pdLv7LWxp84qx0I3rGQX+/YRIRxYWHelAY4hSPubV3kfgRhia/rbWDHh5uzfIGP
BfWXDYl5/dEJVIvttm3+ZZG1PyBnl8JaVbG9bIJvWE+vVpAmaHFNaSBcHJNYD+/h
Fk/4X7a0j88x9jLxkKd6YTxuMreiqLU0fgtywZWrVmx1hkepUtnJpJgrK6swW/9/
DQLOXzrm5j0v5FrcbtZ7cU6YTG6VzekrMLzVGa/3fmOe+00rqUlzFaRmMZ7FrmoU
KhWQbFZjsg87eqRkUYhoepM4ozpCcdycOio1uwrtKg+8zFxLgQK9RY4g+vQw/wdV
gFlguYXH84vXQrYO8Dk9HkoYqp1dLnvpZAGaDOMEv66xS3QOVx7uCM0Cz6g0gJ55
khmhF/YMBKR8Ep0kJIi0xfnAqSgKpaQ7kUv2wRcDk//KLOhFMrAaDpbVIrVV0+C0
hq0jiC8tuy7AIymGb5egaMpjK4Wj3LEKNgFs6YSe8nMzBXuuYhVjfzhUXXMGC2FM
w1/kSwhKjh5wPehhD5Y5bjRjj3fI8h+ZS/EoC7cmRPPMLhdEMRAFVZ1GYgG3QHOW
H0D7BZL0b0J16rAh2NfdduLRMqm8ZI2waIsq6/oJyh8Cl5mACewjGlEUi3LDTtKD
B36uHwuiKgNTT04mQwo25xvWq61p/e7fGY3EDG6zbHK71cCO5TcQLaPlxy4Jo09M
w7zypvQHdXaYfxUyOb3WGsKbH1ilF/AhFbOB39XljoNHFnqQ1P74MDTDQu3MR7QZ
jV+9Zm4S0t4EspKMhW2gmOJxpUZjkzBQ3sUC7LC78o0nj4siuL8bIFKlKGw2FnT+
VWzLHWW52AVv53yzRHHS7KtNGGP3751VFwu3DNJlmHGjtRUXRjbdXRh8MmZp0POr
Sr1qoOKRusjVoiETqiVPtNrRcvMWGiT/kEuliWjd6cLu3A8hlUmJoHzqEZ/9Ejdp
jXlCldXUCKCNqdHUFkXIMFA2HXa6KiBOAEIk2REE76HmJnFYMdY8X+YsdJ4VnvJq
IicXlJWOJoMPsN5ewBvDrmAaG3vTCFbyJE+EYpABsBgNo8LEB7TyqUuJ4Br9rg8e
JrvTRZ4JXFcR2cf5J54O4aHOlDYSZhVShcSF7742yRo9g+kpQoAV+JrF+hp8BkRp
NE/gvm/a02Q8rFYyAnnzUf/zf6QbAHfYFNTIDKYZO03JVX1NfZXtfrWL8tc/KL94
2aBwP6bsWRyiUgWFztw8TOvWnQFmUgoCWrP+r1ukCxwsFs04NFh1ILsgQerlEmeo
57qZyVCLhdJr9Bs03f0GqiUczwXWpMIjN04JBTV89keIM/eu/z0mdbMqQfxa+6BZ
Lr4x3FxIP9a+RgLvjUnHQxgRu/DsvRHjZh5K6+c4sl2vSBQ5D1evCtViByIutEzB
4S2e8iDwPdBWtKEKBu91o1fzA9Aez4WhbM8SmnSX+1HaZlYsj6R2x/ftVL2LhJ3j
Op/0nHqG0mFaoipU0TG/1kFaB0R2vPMpdMgtSFXgLn882uK2VbFWVpn58uRmMnS9
wkTBxXDbw2aru1Tw5Rcn46cqc0OGwOkXIoETcy/PWJs3FOQk9R4rKsNK5DlCIYCL
Qmdfyur7sZ1u/E3TVA+gP3hs5VtMocw98j/p02/wNuF6NbGqlI8QV6H1io0anwXn
djvP0zTWwLrx0m5Zdr+6TUbT4T9UnYVZK15Q+ki1byeZAW68QPN87b4+ginjx+pW
2jvPyPdI6dS9KxTCd5W0NDB3LomH+ZqVz6GGP5zFM9zPUl8ver+MJeYw2FiXykV1
2SUWZa37MiS5f32WJBOpZ5XW4V3/PemCdzD8bwGQviHCZCSUTxIpjxVsMzjY0VdX
RRMmHpV3WU8x8xatbjCtYWsWLe0K3rD3GgIdke/WCIFNGalFjrkdKxKAXEkNfhQD
gLrcemvgh+Az0mbc/0b2MMz1TC4OMrujlUvdN9+xMeJLrU9uN6TKgchaW8lX6qPv
Wfbhott9SAO+07w8cwG+TKd8b4kJVRrSeWl6iI03067JhfsbSaXtBip7cq14cmqm
n8Rj3TlUidIxFM5w8NgTO2osRHvrt80kHdHWsTlcqRKmeQjYY0lDWDWmT+lIz3/d
Rlr8oN6SAq6mclUuE1mxTCxrkgwk6YUF5EJdPMFivv5iK94Goz7TkZmKDVEYdds/
X6iktAgmE+9G98nSvZSr88P5bmqo7jEtRECWDUdUkteb+7tVbISRvxNRPaMhydzD
h0tZWAJFqtT1FR3gVQUsRsuNhBUFCeabBntVU7uR+QFBxn50inlaIhmhOzPhBGgp
dDDoLUQwtwIo42evTSmDWAqiXfM/oeqO5wpfODzjA2sDEw/7Q9flvPFXZ4rqtnm6
GGfYdFQGkaPZHLcdQnaNAfpD9jTVNGsRzxFahDhUxo9TmDVwByIciwr3npptIcp3
R7oLOk9M+HxKOgvBVimyUESeNmuTauB/0ZBZ3hEpGzJfbd/8t/dheL3384smRpde
lQXg5RXHKCfvoxnocg2B5SIXHsVhKIsBAPJVpCBF8UBZQUjLn0UloVfWTwtYWztO
hgVSSF+Pz69fD00v1lI1dSbRJuxaMAlCN9n/5M1e3eJZ+YXx5f4LG04fgY+XcbhS
ljOywgVcwlThTdx0aBVofiuEUL0/fKvT8mmHnCk3QPZ7X+PdC/0kStHHe6Pm7QME
cMmpEqSfF7ybOrZGLoIGS8h32MKy0o6oXppeA/i5MI46abWSrBNwTn5lxicyjoiJ
REwOq0Cfr3FCZT/7hm+VvJupp9QjGHfBSTIzw4LVmbluBxS3CZgPApN8KuGJtiCM
k1vUqfyatcq1dGwPxbawclvZ2S+XEbWiYbVKYoRlurXGY1Qijbr20iuKgNENKVAT
TSW3U0v1ZCwKptulPC/VYspszxlNyu/9r87lKRRHT30Tze2MBeJBcqr5LiwQVGaK
3dpNksSeUsbybr8Ou0ncdMBliX3G8hJktrrm9mEjzAV3NGk070aNk4lMe21f0KfG
bkE4fKb0JqOo9I5Ncm6H/hbqbu2eNt3SbhBb7kzIxfene8dT3EivmEmj6GjinqTg
nwP26ypCfAqgXMfQtKUiWBd9XRKOVQD0iRz8PmK6rpm5o3co1HxeedRgvlCFQcfi
oVKFYxSJAUHMbDA60gHOW8+ogEZG4tS7PxfJ6scerxt7YD4KGCuk+swhkudAOkdx
L+rTZuuDQ3twG7xu6dzh2yh5Eew1UcerqTZ6s7AT77BUmOYJ+cp3S44xCGousM35
T5G8KfOcQSZjHWzQJlQdQ9E2rXA5FrN9UQhQeFrXMtviCwlUZITAuRy91trQrrvW
ox7pohjcTmFdqXM8Kpn1mXfpwDVdCQKEqEoXvaVJHPergz9AC65dkz+KfS5NriEN
+EkYqqP7KOfi8ZUMKEuCxvJeGnzFfMO/FdfeOkNjCnvSbYQFsyiuvxLSEYju+pi/
MzJ2JS+a3sCDcb9hbu5+YGZxvF0ZN5r/UguqHh6P4tpHhzfbSfw2YrqrYOZXzn0a
UHZa/1Iy1X6tEOuG4C9f4HNah7DiMy24V/pdLSoP0dXnOcnAhm5EBmZdZX1ci2gJ
MvFJcJGRhwRmPC/JHdFKC9bX67zM5B2ZOAZ6h4dAHNXEIn/S3D9vn4ETTpJAJ+eV
pzCxBSXmBSE+9jv7F7MZiq+KokyNoYnB7YhYBUYLQMnwrdZW0eDF7kJql5y+Hg1s
MBexxOn3i6513ZsmbCqQFq9H88yeiqFKOX/wvunasNfehpFcWPpiDUQP8dRAmWOU
sQRtXFYW2oEQTMVA/0l9KOA/6Ynnn2fQHg9h4YHDmlmxEdKP3RN6DYtclXfkXlxQ
BaxMOcpeBby4rer8wz6NksztoN91dmCkV5gtUxvXIMMBFnXx8sTZwRBPMxgdUrl9
8BqA2uVKHNSHq2XLBr0/z442GhGHO+t6Z6krjxR+ch/RXEan2EttLdnaazG/oPxI
TXLfTRA01dksKVBY3SzuzeBHdOY10ytpJEqts9x6BBohwa+WtrDBLAN1nZ05b6tq
eJ2hLbynxzdt73Rwlc4HXMtm9Djzuuwd+MHnvW2KAUTo7LrDNP/pHZVTqFWZMf8j
LtEQHcCB3AyMo4cqYE6gBoQZzwRLhOki8ZGAxeXlAx6wzn2gqBK9z777B6rGEtzY
cxzvwWoTCGmAVlIi1hEfeVXmFjNKYP2WIOC96lXemKAs2gMxZPsuGtrRDPxFKRsD
7UidGzBTUhYOVH6nZ8k9OKNVa7xS3oUoHT2HrscWcj2zi+3yr53MG4sBsIOdc0Al
JdjBv4Ad0k1wzyTlRpo61HmXEPmum3E4mDYpj5TvB5EJEcjd3C59y4lwIt+pMlE/
WvGW6Yu2PYIYAJUCu2e7H/lgUj0rWGSDLrztK138UTu8Nyt/XGg95tCxBPBB5vnU
yZmeWR0ZIQo/O6EdytAxSbcNLp3wLlKvkdAns/7nNC122zrhbRn8TSj6Ixao2cab
y/hmr+zgoqNrwWfjfYTJcBW3C8cQgYOtX631aiMJHn+YoiJjd7a6Xrdx75mY9epX
wvVrOIHKgd0JoCgNgijb2slfzI4HkfC/k8pvjHwRyz+qdI56K+jqIDGXqL+GquRe
X0QPOctg063gaWR2mWpGryBqTFketAAcKp5+7n+mTqQ1dWYNPQ99SAomIixuvcl+
9xrbeB9XLu78EEgBLAmOa4ZMI8YFavJKRv34j0mgFORJ9lwSFMe9jogDxGYrGCL7
iZLw2X+2cDe/sL+9ZnDZg8bjab/mdAT/dvq0Q6M9/SiLjnHBeblzIQATlqV7aKtt
KvEuaUoW6ckYbsV0toAbgplMEwmTlK6JELz2Bgni3Uar/3YnJKQKC9GIeygx1FHy
IzYS2VEieZaMF6agKcXkk+9Y+baJ3hsKxqXkQL+04x1jVJsoT+rGlUlGhUI+Re/Z
lPUe0pstjcmg2ZAUSAhNusdBaoAwbSFGWMLiaFNqHO7LxjQyrlAGIQkniLnhVQqc
m3Bgw1u/Y9JmlAMJUKE4d0f+M+ZwxhEEtNNH6fIat4ijMZRaBN7713xunEnVO3h+
NYibRRAuRJWLS2DUCP6YY90Ws0CjR1uJSo7zzekytmBZ6gmYS5NwLISf+0JwDBXN
234SvcaOvrybqqzWe99tzHkv3C6YcY+OkOqYHhnuuh7G6auFGTQGNHujYO9bOKWr
xHInxwdiQbh0XsPBVYOR+xId1R5u83x1uLArDx5Ns6ZT4Y/E0UNzthxtcTUMbLND
OepHWY05dBU9xIl3WIvvmpVFjUa2fVNGlS2ykhaHFQrJ4XNXmD1+eaLBMS6dZ9rx
9MRrSapJlx4JDxejUoHG59Ew8g0JgsIygWnuPGszUdo9oqCY8u512/ml52sX840w
FBzSYeX2UDgNxU/Gi5o95NYwRj6GMMwUYUy2ybOZzQVSYF71wIJtM7CVTGe1/X4L
VbYDeWT2DJKMlA4hIEvgsdOMMYUXmUhQkC1ijG5pDxkOVxuaziGHfM0gyDmBqx6j
ILuo6zBj2IC0NWYc8oIEoU3lMpEjE5kO46Q5ZgwSuliNXisJnDhjQGwQTt+Q6AY8
6qqNCLK9g8yw4f6mNNo0IYcTAc+31z5VBT7+ECQ4uPCsLvPOCdafIj2qGkC3qzUL
+hiOLXPFYfVWxqU7Jc/T78JBT/unEU8r9etxhOKarN12CVXGYWAQG647YBtn/vAt
gM6+oHFOSyb7sh1+CEzZw8+qORqWaksSe2mf1Y3gwup9ltYT72YlyCLjmAOAeKoB
kjMzZlcSD37SKqggbiy8mLwlPMJrp5YYgeqtR2OpodxbYW0+HBBAVCCA6hqAkEuK
vvkYBguoZW75/ThK387PeImwSZxHrSN9/q9XgV3Y9dv/h6YsbMSWr1YoH106OseE
mKhoPXj39aKUjkVmeCnLTTU3pg7kjC8J0BX7KRFm6QDkiWt2SGnfFbQbtEaGVeax
TDUzFcO5GQlD7TU8kYAeGMkJyIAOSEhxjX7zvMD63XNznfv5VZ7SuW67M9mi5g0v
ttlVL4Z6ztwiJj1XGynzMTmiS/Zkb1kZTYNL2ksHOd00czZUhG7RjWGEvYpr0QEP
Zs+kN+mCtMRSsYcWflmUiBemPCPvxOoKnNB71CWY+M9sSO5mQnyZWMPMsFHGflPf
Lh4T6st3DfRPw8fPv0so4hpYI18BwA4YXZnPE47cowu2CdK31bU6hZvE+3uh0wwi
BWcdQs3KoffoWVzJpMW+UEzmHXegJsVZ8DkpczJRBKzD5603vCM3EUres9M1o5Pi
4/8cqIxKTfqGOekuDaevykDQJ/Ufg4uj0Q3MPKaN2ydfHZ+tkIIc1+nR5sEpZEO8
FagkrBPOX+rcccIpsCfUzwCOaxjaaBRfd73ygbreu/L4o4Rw1/kK/6UmQCmMb/c2
jDREw7hQYYZwZdzg2MNg2I+49IlG+I0pZUUYmtHjCx3a/IGVw8Tg/LlwnQE7yDUL
4SVNvem/xlN8UaiMNjhO4b8s1Uk5JoRANdmmec1DOFzS3gW9J5JBEk3Hdc0U/gu6
Vnfwy6cNXa45OPsUS2C5yt3fZxEb+IdFVfxMGWJ8D6MUVzCIqChtQ9OEOJWJy53e
mERCMlkM6Q6UnhNBbgqpPMyHNbCC+CXkNHM+awnhDEd2uunRu4RbovjopiXNRyrt
zH2jCIRoRLCpwehpfsNQ5fDpnv4tU7bSU3dHEgtGoanDMXH69iR11KmXqmFEhySx
jWiMsr9Zn2x78CVMzJb/K0SJZRmX/vQV2jNVja5DByfwQC2Vr5ZdR0dszDxqCh2/
4VVIQiDpxrioiGCbbqQvnlhundNfTudNU1l72FGH2h5I9zblk5kTf7zWDU+LYX3K
b0zexIKvKyh+cERe//EOlh0MzLe0fYyuufMGvb91ugEYBqNE0QtAWmTb8O38xxjV
pulmU/f0b7GfXjKcV7pwHvTigDl8/eBxpjYQ7mzmQ61BGYA7k+RCC4Xm8TkTPBHt
8VS2OzqlNKdqp44roj1VrOzG7HuiqRSVExmsuNvWh6nnzydzIrdpzWvA0pT48+h3
n+JGgGS3BGUEp378/tZ2o1iBSbsSV3RfpU9MNLDtOHgBGgRIDlaSVCk647tFycRq
T1KJ21Qc/Pn1TNKf3pUHu8TanGUhYs4YP0rdOJR2yXdnBmW7ksrYS94ah5hAkbHx
DxjAjvsmqJX2nkjHqtdikr03i9Knn6wrHkhJOSbgctLt7qvwNB/VEDIa8641UZhr
w7RtCFN52qY4hPZrc7S19BEEaI79XcjTDkdTKPrTTBHzvI58M2LCxK8dOLDnV6Sa
GtsBksylrbh5pOWXeZDuB1quUHORGQ2zb+A4p1X2P65NREN8zPVf+vUi/IuREGu2
n0CYC1/lNVRdqmHE4sDBORByvaY4qXOecNqXhq8mwi7pRpOcyN7iiFHYISHJY6Zl
6DfhAk6T/LKXqvWOA3eakFYuMlhb0HDVHI5T2K2Lrjj0hpAzMKM4+u+AvEgCW8+5
tpug7cXdvgHq0sixtu5lrR9zJxv1zXbGEqW6KGJdYDu0mcLKadrqNCMsky2b02NY
as5gDXcappbx2w0yLRKBoKfNB+RvrPD+/j/yiN/S2q5zPBGATvUt5p0b2NF1zqG7
hSZlu6xkWolQrKAKdIWBGXGHR3QrymKz84dqkAdZABdrKlM9cJMauvofp5Evpszc
JcmnnQh4OhxGxIVWzWmMmZf1nEO512mEt0pveaJfdHyKG6FYwEsJuPWsXgoED2D7
29BmO1uEgXYbr/mwD2VIGyIIM+9ErH0Am4VCHKGGDOSHS/urIi2/y+u9W8VZ/hdq
q8R2nmTrNT+UsEuan+ctPk9E37Xz3VJxA3VS3vEpz8BNaNXeZwJ2xKqhYXNvnBO6
Rh0m7GPu8VoRm5Csaa+LNShrlEguTX4liGH84UsTSNzbL6zEFTUd7jQpSiZXIyJa
Srz5W9Tn9rlvjZoTSg4Bo3yYZxU7Umr9iR2qeYsTq/CRNj+lr8/w7iqIIUcfByR4
TqzQHmxocpNf+efHSxzBVlRqwvOxi2D2EO36oEcxUJVvsIX22RYUQ7KOizkaN4hR
aelNF/p020vamJkV06EEjHrc9FJJTrNPl8WPSNQOrbmPw+Dak+E+umVc3b6t1u9x
Po4zyIFfqHspcsCwwPold8UcupfUJ0PHEPWbgzchCCIauELGzsQQ2CU3hgP4i6Us
nclP5KqhdT8HVUtWn+YZfevzMixILdy+yeeP5QkeLoEySBC7dSu9k03XB4WAg+dX
t7rlWwKY9cnBYaYvVT5sw0swM8lygMANGqrjzYCaKFpgBseIGTOCObrRRW+Bv/xe
/Sdct7a4M/yfbkn81AvkGLEh8RKOBQskSEgzc7ob4XemRLSOie9weur9Xk5qjmz0
u01gRvhfW3EkF+1eqeibz2T887aOiiBHUT96K9U85I05Ygdfnwq8pXfUuesWp+nB
9JtsV5MnNxzN4TAoZc8/qWw8dtgHL4klpeY3ieU9XS4C1A4FUSdtHXPvUhhSwq63
omLR0+BWetO8IP/WWsw7gEh6WegMCYa7eaOnGGCLbRHGRnMSdI86xe6p8Vwcifoj
BC5AeFVLUkE/2qyGvJu9kJ2AUzgAcdP4II+/C3XotGDaRftqOfmZTESqChgBGXRw
ahiWHZDdUb31MXEVOfKmfsO0LdnhlCpSKkXzV/qlSJxwTovDpJXHpdGYuYEWQ/AD
kk+r26NRrxLZwInKcikH9SNCkJynsWa4cnJbfFwM1UGFDVcyOuIbKDJ1ujQiK/Km
cOdZ6CDsk432/zRtEUpBjKqhk7MXnlKKMyptYJplC+MGQeb6M2sW3VOyqBVXveU6
EQ2t8dBG60Lb+nqB4Q/xSfdlo7hc95dNpC6JqYDPQ55We2KwEETRgNenoGQj3f+i
uZfWSm4E9s9SE3LWlKlClxaLFJGs2NT4j6Vk0q6VRSiBDzNYS/8eaYs/Bd+Moe43
aGSCR0bnFUMBemGBDqkIAVeTks1tbVUv20NZb93kKzXTzeEkO8PjiHTrjUBYmeiL
r22HdjQ5j8xui+GUI9nys9itZyQdUOPmlR8FMJhDkhmV8UqzrPlqVnLj+iR8V1zl
5HwIjah5mjNFnlXDVL7cmMbV0MckFjmWD2nwiPFB18SNS+4ISCxoxNB0vrZojetE
BwKMM+3/YRvOwc1uej09lCIzozuKF7nsibsrx3fCfOWC0V73s0MCQ6lYnZQhUIXl
JD9lZV9ua0DPsaxd+G3R4/v+9gGunzlhhKPHItMv+7Mz4j3eIXsN9kGj9r7N7o0L
XrEHjmCp/BD3D3wAJ9omT8No7VOE94I8GxaOAR7m9jrS3Q+2dAhOAzrI8EiXAAVR
5gGh53XJy3Ac8lN10SgDPaS7+WS6q2bfYgIwMdHoK9AlQWjK8mmPvzjS5nKvpwqP
b+FFsRgyhPGRT+/+qKovvDxx/oneyAbJQafA2pKgJBMSYwOSPsM39XBtPDoEOvPR
mzrhnPY5PDPHWWdwKmKyKEvWrz4a18rPGSjMpeM08X4ZZoA+Bjm5zAEIZhgcGQSz
BaTBLfFR4G1WKDyhoq411V1Q2Ii6fzTWvw5ULgUHdVRXDZezKe97NIzS5w8b7gjB
yai68mHV4C+ryDUEpfZAQ2F6fFBno9FIqG7PYNw1T1IfXSp1yBKjyZHSM33dhk4N
BovWMvdkJWTkFJgUP8Dd76wb0Y34hgoKr38idJkW6iClR3AcQuMso+K/uRxbYP9K
yy7cTy5WTDI8o9hI6gsA8qQSDvGS0y8WVg9hNXCLfCeY67M45xZqPeaoSB0eFq2M
w1tOgxZBx+iVom3omj+eraxszPx+N3kH/KlrN/Q8q4p5ThGCksRv+pE3znsSNs0z
+g33qiAgYmaPuj+HR49wc5MnA1EzwHgKVm2CG+eUMBDh7RpjfgHnfaT52bD5TFew
0jZaSz2J7ZOv9IqsphrilSsEAqrhTBX8T+mP6Xz7HQZG9zxZU75cchMD88yFmAU3
O+VgxyJuZGjHfdENZLi7gXomdsT7hud1QvMK6MaCIkZhd7/richoWouxMjk1jl8L
LNWBaQmwuIJZVNPbUwjMq/6ZTrGrOb4QnE7AfvYQHdz1jAiu9hOgA2lrnw1lXIHL
RHA4HqgknI0XYkjX2wo/tZ7CteneYwpB+uMsfGvxujHJwkMWA1bI06DOuqBmEpwk
4vQ0gz85CmBfkYE23mL2ym9nJ53ZZt/F9r6l28v63UNyL/jtHpPMMmD1oQZK4khv
kXYDyKztZ6tOcOvsiK1s3lbUVYgaKuDThsHYuI1T4ri1NXtHbKXru60IqAxd9pUP
ayqZ9gwFlQkC9FYR9Vejp+Hhl+QbeV6l4m1g+YLoFnc9jGRO0r8tRVNwT+EgcxVs
N6VtS5OkYNy5Ic23vj87v+669pz1YV+Y+BVaGl7DLvC3y9ldozEPctl6woY0HqDP
xYCVqsMF5VqfBxaZaekWwo6QxZiu7zlPSxq5aRi1yvpqiiq+1Nc2XIsuebw8Ee/g
0cbVBu2k9FiqWxW4BmyzyZY5+c5lcCn0qoKYtBr64ZJA06OGN5o5HsF+szHExhLY
esQyorTVCn66cSUl7nLDzVP1KXu81yKp1gUutau68rLYGFlJyHlqgPRaLicFkm51
Z1py4bKVffmuzL4DrB+KtHsZq1VPVmCaogZkSsc+a67r6AO2rtSZ1vCtpB7Z2eiD
WDCViGf64LaDLEq8xr3aQcIZCAwbbWfl0tgC57a7zyNTeT2mhNBBJKGkbE+p8Y8u
5VFnJp69+RlfYKIq8s6FzJkgcSaF6iQZeAI2dOoE7KwUN+ohbo8m1YVUi1rDNyfQ
gvAO/MykxxOLvH6MPeCuV6WSinVfbV7ACVfLj7I8mUZcz3RV9nYm+a+7QIAfzSAG
5kvoAOQBt4wLXgjzBScRcqDpIzGiGcJZkA58tCeSn8NcZiQYc9bAGIWIRAM8twcy
gzSbl07mNdgQuR8liMu1dC6vetw/ioe9NT+7sge0OdTQnJZzSjyauwUgi93Gkrmn
wJnp35fYsSf84POhSuRnz+3/+DThOuamjrRZcjR0KDUxRTvZdkO3SoqRVuIFa/sT
Itpse5IBRi1Pw7AfMsYSk0Kh6ekqkh8ayHnjphEIC9J/TD6765r19GmIfh2DoDjZ
Z4jybV+GNZVVISVr876ReUh1sB3FeMDvd1K3B2YVZDpXTRRF2P7DIdGBdwDAAqC3
3G2gmiGlzPkJ8nbJBnCa0Qwq+3fKgG6GWDodDIJH9sJs3s7E2SmcwBkP5CKSNNlT
OGB2kf9Uzf7SjZ7PH+smsw/fxcj/KDCPFzPlt0OnohdM6sf06uYGYJZk1qq3pWzL
lYbpz0HNvqiUJp8bIhqulpZl1wc4TZFizzUHyE4GKm8rhzDTCXsv40rmYSY34R5r
+XghQUEy/h0IBQPcWgVc06wg49lWsV7TtJFjF5CtHa8oBYnZ/pUF/J+A0oDx/8m7
lNLYIsJqPtUZxuivj6zcc5RZeQ9ESxteM/I0r7vvhpz4CvC8NG+Ib6p9hstbUCWW
WwdtWAUy77UEvMLaFywWTuXJ+OEJ+uPcl8ka/Sd85h8IsMEHZDqxcDTsXVSEvgHL
9GNhUFgH3c2UXjtKTiUp5EbGSHMc7zjeIgXS+xLa9LbwSAnuLCJCSzAqWd0e7Pto
DIJAHRpxPuwXCUPAFTPEbqPLlGCFeB6UtdR7F57VKYHA944ZEPHbJmYZZuzPUm/Y
hwujcY/pWie1mSgI78hqwtwv8bSoAyIQ6D3MmKO82J9a1jhGBICZQlCkKwU+uRnk
uOu/HDkoPQujRgN9yqEGYJscMgoxMb8NCj6w+tzHFGUmv2+LF9OiIiw1WMvlX3sP
9UjS58nkJvrZJfvxaOFjSJXzm1HZGmvW0VzHZ9drmonGTJI+XeXsMRk4MtHE9gc7
RZ/yXceym5jKjBbFujAtKTD5CgcgdCLeQ7+WEX9/ecrBKTzW3kmS/g4JgraAcAcy
eZZSoVDIY2VJS0HKLZtNvvNdBJB+kZaOJHk6sVA2YZlbbJwSgSuManBxSj1Gbr9P
sz0t8C3dXFSRCjzWqkL9bpigVZ1T4EPEmj2efaoMRHcEH3CUjPpx490jBtvXnbAH
73WfeXrK9mqv45ImFtbd6UAx0YgkD6uwUuK5vLciOVm/sPKFP4zUSjCNvF1tkffT
GFxaWAKEi/VaIsMjyaXdoKMG7NshzVt0Rx/33jQhnAG/X0g5oWKY2zCPz+wh1V0y
R/g4k9Mb9MpM+chQ6kaus36uehv940RtoY0eGiA1Qq1M2u+bEsbWWI382Rr/bQUc
mUoB4ii4//mpboE8jkMksyojingUTKgDWOmW4utddeHwkhNG2e1RG786zI1HXxG1
Fv6ygK6xmSeGca6z5C+yKk4sD1Bfvhy4k5tTKxQX1r169RP4pzuJT0B/pfAUaOzQ
Tg44pQaZnb50ND57Pa0/IGXb3ztUWYwpJeLdzlOj5GxtD0bdCtpuoBvNeK3CNtlq
SNW+nTEX1vTiFnRMwhpCtoHhuvugj2TIGrB+Sl/4d4euz1s1wVjp44YiMnWlb+Bd
jJwseFdxLLg66NRkGXljfO4ju06LAHiV6C9p1VFjzh675IjJECd/AynBx2BvVNwh
QtnvHzS/jYetfMjQhvmqAftu7OwJFbHxodHtlcjtZmjj2R4IrJJLNkkVmtjZkrgP
6PShCgEzEoo1xvAJn9isN/oBlWn2kFwJvb9EfeTbejlSGLREgG0myuA62pTEfT4W
x35Xd6c9UDaQP2s1YslW8Si0VoTDYLZfsngVXdG7d+kDMQ957r9j7apGeCuMacPs
Are4Hp7SAfOAi6pr9mZsSDHsDYd47qsLvkhiR++5+f4TYghBm0yLvgKlymdBnzRS
0D7uC4MBsOkMzoT84RKcBgUvfvJu+Gi+0EJTtwQNYswYk0x6ADtBpBQQj9OjoLj3
QJQIbJDRvXp4YsHo3cPrMSIVQ8YY4PwVv2SJ0CFuDAnhBLq95JieBYHu/BLZvD4v
EmnKhWAgk2Zucfz2dVtJzaaRbIUWoqZLYPFZH9gEB1jbWhnpJN/hYbr0Rp8tyvE8
R5GO9tkV6FhID3x7vEfLkeosmRGYgcx5MxeGVRxixJgD+bEvh3RrtaF6l8zft0tP
MD7YksP+e9PDFMo0eCmXP6P1nuOQT7GvkJ9AeLi8nilWzrfFPdKjbTWel9cdKlgd
Mu5g700OXGaloP0CT0KDKA8oxKyw12ecRuZXaGDY3v7Gup5uL7LAt2ir99Dg12ql
aTxeJhZcdJy9D+C3e8z0nMFTvUQk2GFO02JtmEySUtOBzsfSFCY/tQhCh22kbao9
K8ncqR3rqMXOpDwMMRCcqsvvjJKvh2qBQlxhRWnrzLvv7mHh6E9lptW8tg85xicV
Z9R+e/taBj38xvXzmPtd/aSSJv2ehox+Kbq8qr6LyeHI3ZjjmkEYN9OqtssdgiVV
uMVrzeF0xSzFclOR50JuI3D3PSvy+UhGhgudd7l/XVKJ10WQvlaGKfPlpig+bK42
b9sbDmgWaUFu2QpNdZVf8FCFFpPJWpIeXl/E+sNMaFY5Z4Cy/TYpgJIFrXyADWaV
Zr475s5Um7sL+Ffmdm/BCbHkTeBqiv0bgS0nxAlo25Ap+U1goP/7kA7L5v4Y+VCt
3iKWyiOEsccZQCUfruUIe10XZMJr6aGJ6xNbAlHnJS4iMaPAeDLNhq7JewYlz41V
BmMEjTALaBqhHUEeIA5PPL1pehr6f2tyUVXN3cgySZbQEtJ+IN2RKtfC5WrSmudY
tYDGMBg5VAauNJrehuQ/R20maTstiVoK25XLF9KSc4Dn12D+wshGGHOi5S08VdHe
iJuBAWdljd7O7mDw4QXAVTbjGBBxZtpLh3C4dln/LVAvuw6v55dchcCQ9iM9hMq3
UcduWrafscisinu7pgcsZdx51GMC3Zr0kJXhDQ7XnPWk2AvY+aoXzSqhDCdyiDWV
/JxFWNky8NkC7gPPLYZi3cQ3SomO6fjYSOUZ1kA6XjgM1ZAoLql+/J7XC+p1h/rC
yMoOQebq2L9GqomFQZvNM9mKiEEU+DI6IHP+eGFRgJpxRpjlUs5BB1e8S5Aib8J0
IwLXLXHzZ2g/x+liK3FnZF/zPIVH0sXOwAac4e17esUWWc3DLLQ2l4lF2jH9Tfok
rdUX61MBg2JuMorWuMh2s9mg9AlZ4nQhNeMA/fT4xepcNOC8IbUpVlJpN6vIuodN
6J8XLO/dCFfzgRmfeLYDkEwn8ogJ1cYB29hzK+2k8wZfTqYaHjVeMFtufF8F4Hfp
9e9FDZ7GoaoWSEdyQqYKej99coTtLw3lNSWVrE4PwwKuXmyaih0XIq/bUznzogKa
SiLBdoW1gdziL+2mmna+keWXkQCSTe2DuSv95OJCSCoSgFkZjT8xl1tNMQaQtTvk
fOYKFHlWr0ieCPbWH9xDqXhzJHDiyRzJ0bYz5y9WufX06UrJw+EoY307n4y4lZnv
ab5cig09o2T3xDs+BFTUeaoKmxdKOmeNzriFnptvmbZC00XNCtYrZ0mEWuiiwv1s
l41VFDQ1WwxuZ+CbGfhKAbZ5FwHYcBw7wfjNFYHioGUm0CgH3wtqGHMnjqBbbQcN
PuRl8gEn1tvhV+Kd/PZ4gF7smL8PNPb359yFyK9MpJN4UYxMd5PrUWGkkpZRy6RN
VXiCEc32SAShbnAkZPCr0N1ZR7uvB9ahYZsamk33Y3Q7sp6oGI+hVuBqWW+jS+At
tPjppQMndw2jBEkRdojTMdYLx+mXfVtV6xP1XKt5NysimvNntI8sj6ORjhxPonvQ
9rPBK/lp7idf2z+2wfa+b0B3QEGxvu/pO3BIIsONbRNvNcFpDpCOEpeyDjqd1zvO
2P+gXuep3HGyNTMM169eICzeCa1So2Xjck0KqGukWp7TDJ9qqYvaAGl82EegMvPD
AF6x9ejIdIH1UmVhwy+jkIDiqqqN6yBuHO1O01RyLCbOYNETfN1xoe/rTeOCXI8m
0hq1z3G7/tjzxEMESXFBr83IhyG9QIEfLiqeNmkgfj1nEimp8G84RBGswwJNnFbY
G8t6nRsZ9ATkDrlKsDAYxO4hy7io81NNvw7HXzVB6bBHhowVBcldSu0qSaPGH2Oz
znRNXNZRqgKFP6aJzll7lW4u4DsCUhzIUse+tBxi2j4Cyyn1R6qyvVmqvu85eRNT
s9K9LUag/CWm1qVZOAckv4goZFyfhsrZUDxfNvbYSiVPfAq/pf55PUTmaySzqTcW
UtuIsmj0EMSpP4T+vi4Nf19c8HooCXMJa3Z1mUuk6oNUfWmde1lzCdMjAyAw3cWC
AGeVXMDf3NrQslV/JK8fVTJk/5KXYXb6f+y9CMyg60AupU6JLE/cEsph7ujIxxau
F1vHn43ME5vr/HxZ4uoRj0hdVhpZHLZ5SHC9hHvC1KHn0XHsBhRcAjSbmRTiTEc0
JPeLI/SxGeSOPJFGvmPK4puoWVcz0PFzNuJFd1rciNLFwj/jPlgJuynv34LAJVWd
5vcTBYZplMPwJzH1rECCO4EP408p89G7bmcqpqHjZU0UYDk98x/zogQELkHrvIC7
J/lMJXYb2d6zZsMXTuk4SmzhgKedVO0RhoIUSGD6qlGyGnuX8enFVLxYnvnKEVl2
4GuaXFNJrUj6J6kStgbZ2pWUIJaIR1tIHM4u7RvHh+/4vEvf8tP/HfBz/z9+BjNo
sjWXPOmLsy2LN6phC0TPuFpUQwdrXos9nBYc2rX2wkgn2JSahMibJ6GNviGhJ7MD
f1ez1wAKb2y+A8hXRJeXCHfCW2q+r/I5AVNd8/Qexo+W5lK3g0yJpxnS3e8BDzw4
HSJk3XF6hd/W0DQ50BjapHKClMB5whDuVRCcnUpM+G20F9RBzpuby1lcDTrLkiDZ
A3yF+do4TXwMzRnsHcMB9kYqkMtPfF2+YDa0V+iAGx7L/2yezp+s0WFed8R6zV4Y
LEmU02nvfN9ZERsbQldwRbm5SLw+DlbX9oNcE01LphE4D5zFPgTBZpovrhvaAhH0
qyJMHg/claoAL5mRf9uXj1/cyIT6uzP/dVoJfcPiLIIa8cC6xZxHDvgoo/BvBlwO
pOunTt2KPcAoRmuJQBYVy99eowcMHUd73MXMk2gCHg7TWy01hyeVlGg5TSc0cx81
LGvZuwoYUJJBxNO11+fYMnOCeBYfinNLsfLYMtTh6fZWQicpeoNRIOs6FkT5gYe3
yo7bEf72Q+scLeCmO4qIOj8leXNswj5VbX02d+kG0lNPX5qRV7p5Mso7WOceSCzI
gaAnPMUqx6yZqwUiLB7lRGqHxuv1nc5SbCTWbd83DohLENb3Uk5Ftps0X9jgYOmg
qAEUHexrNTPXyLf3zghxPQpGXdcDkwYjxlmuFPMIAUej97mThICItenu9FAdiZau
zAZ4rJDC6pxe7s2cEIjpBYx95EFirhlfLhjtbrSoqDKiU8vqKK+BEvejLohZQTJa
c9v6TzLzopE2fDFEo22tjEbpag2pY5izaFFB06uSRDTUO+Pv1mKo3uEI9czeIKgx
bXIz2Skp1oZzJsLAscQThvS5q2qfgRHXrAtL1Aa+yD6k4d/+mPxLgncRtSpXXyKe
1P+frBYXVb5F2ErNKjt7JGXDb8BWngCDCmwpItX1FeFnQdvdrFI77tzpHdaI/XVF
YUjBtZX6fGh/ihOh1ByEdlgoBEGp9fun3SwqdwNpqpJ199OdS5LcUW+iWJX9ylLE
6kmbXSduHenu4avJzwbY+MFXpY493ik8TMHwVV7ZByZQNpDJC00IXK7XShjWDOas
R0iTF4SYybSk3SoQbII490Vnq3HUT7/vNj5Z0rnEB05cpDr/KN4vxnPKew5k7xM3
X3uGzvbi8zSp6FTxO6YuoOAxZ+wmBt8/i8v8HNEXPi2jfJflWCP2j4Ze7PQ078H/
xubj3tJOsas6yMuDzwgzY+C8+6J6K3UqoFLATHyX0hbqqW04U5n5v48voVeQ3E93
98vckdgllXsGgjoBdQnVJvpd2P+qaJCJ4jr43IUmNerRt+iYG1BNRh3Rtl8qe1Zm
gmG/uhPfq7gTsH1pDF1YiYwtSUctNdoTD4mc+86roRGNF9YQAXfAAffB9fBv2Q9N
0mA34DQIU3D9C7FPbLsR+EFwZPDY9sQlRMaQIy+eRdLOhFpWSB3j6AQOyYqvyO5I
DG6Va7qp5MRwgDkbzxUK0vjaoIerBANin9UiNqQ0R28LCYIPW23GV4WqckUUViL3
63am6W8vR5QU730DcLaNMZTATZt66g3Pm/LVwGwqi+GH3uZat26SZ7qLMRMuzEIG
VbTTvUalDZT2F33KDUd9dxSJRBDLfnMRSJmjoiuxldTSnxn8/rA9zugT+LpD2SO6
hdJgKuTKPepm4h0lj3+X/WoBxijf5xpoRcuihyrwaGVaXziEYkT+yrwlzYIs8OOE
/Q2o8/jMcDoXa4SL/1RSb9rwrcqI8HaOvUhpqf6kGFfeuiRk0/R9Z2HauVtx8Aq3
AuTLEQHjNpzbjeJlJbUmQF356gaT1ZBFenlMmD+jU919sk1spwswj8ZvMoMldTjl
icCI93TvjjYz6SkapVmGNajsemo8Z3QPppTx3j4+Uso051DXgPext6mYNZMDNql8
qhcMTfVDSx4NkYOAfDIMozyenujad0i1nveD3iNbTp27MDEUhMtUE2CGYQvHlnLl
nivyQHItxc0WQnxcALYFqBbfdpJBOBgjGLWb0qYoE8U6lvKOiM0u8o7azxk2YRDr
3NMjDy5HV/kuu7mRMX0wBzHsoMaGchcqXb7KMEbzyqsuXzXvePTIctsw8j0Ahs1g
CzvhFc+P+MGz4eRAK3VraWS+mi3XPLUQX9AkMPQ3TiwGwP3iGjuglTgCzbvtjUyo
wQoIW8qCM3W2MsqXf98FQMctAnt0/4JLC5M0w4zSndHaKdoBf+5z7IbBBkxeSpd/
AlVczdeMbbxz8C8VtQo0cYysrfj4D1Z5eQOjog+L0tDnCybBFBaThd9veXVNpe/G
ChyrM0PQ5H1FAFEcqCKEplq3KIXYNnDhhk6L5cK6UbFGmKvGU/YsNsyna8fes7x/
bpHvZYka07ofSJ0UDdkGPMOsBM0gxBhkG0xOWbAiSCL4U8Biz+REf8HgWzzHH+/n
9Jh1Uo+CBubAzIyB03ASX5GLJlp50oARu1CmyAjJYCt4jvN1huMkUTKBkzPVaugs
fUi8XKhVH7fCYUGUAqVV4WEtCVRlUBVe9kEJtG8ffsgw8OLizKMUEpBsamFbyiiz
/XEKyefS4CikbXg7u0TrEKKIEcDg7lMpPxizeCGEX+U9TCtQfct+y/oZxUSQrvBx
DqAR3OzN3AEAcvXpi2lY8wLvw1FGlmi1MtXiO7VUGcfuVs9qluqDZ886gxrSRsqg
PQ+PMvqQ40N9jg34QzF+oa3pSRRajg89OFk4+JN20v5iYk24GMgC27iXq2yinfNb
jAwypVraygtLrr684rpVbzSvGCo+vKH+Mgir7Jz77wLFa/gXoHOcuUcnGtika0xo
nHVpiYsgdfIhm9CVEnF7WrRilDKMW0kNf/uftAa73fn2GoN+AHPEZlDMVXoexog4
x2QnC+oK6ZhVnj7XqNWfKuRKHAvX1WkBkyZwGSbD6B6lCRQwhznlCjHJT0u8FqvJ
zWaIVY4PpcysAoNN3rrLlkHVQJ8eTnojSbvBOSXamhDiE5ZQCT+z2QWbumyd2npu
ljHO3HwyCs1MFjRPkqdmtsb9A+F6nCNibGOofxebnJxZnbgPAxMwlpkaTiwpDkp5
ntIVJtFVAl9K8Q40kTynk506qzpisdEF2edkphi7DD4DiyTSDAzjXijFo04JEDI1
MRXCdVeHrClmRzRoFA6UDpQzXCOs+9zW7NrNm5nTL7fGYoxHvD8nYr/B+CbCO7Qg
gYkxq699IK3azUtBHUqBevTx5th4YYSCxz8PGCDAKuuJJBDvoOeLbiy3Qw8oGewu
bHzZ5fxeW7D8BfR9gaYhIUcGAOZt6ui1taxR6r4K4GdpUBEa0vlZrPBRhxZDFZ3p
fLmojtZLBYC62y/c02cUIP/sH3ajWYnAiIEqYdLZPO4/xzzXypfBN+sgbRWuHDW7
fxONykGLZi7udjtJVKNTyn4AtMg4m0mNdQEslgVSQttQ6CWZFRGrKF1/POdzQsHu
01tQkz5t+kUczFa3UT26ML7kmUP9KkGGQkOunD+hRbZ03pD013vf2JHwq3ZNjUry
dfoXpQStnNUujOp4V3qRKRmdYRDaTJgDqrVGFN46c+3ikmrs6Gf9Ot+MgR1lCk3P
SEM/bLZSB8K7Fc8jePT6yZXAdunP725pc2uUsrBn53JzH/WbqhwH6VoaUx8Jxhxj
SYHKECH4Bcw6qsQ/9GvE7fkVs6v/r1aJk/A/xDkrctkfE96SgLgU22E2MH7PvPnb
24a5R3+es5YOWtAe9gHJhLTST5Xsam91v4LKlFLDRW+5jfJwPliIhH6wtcxOeCla
NKl+Yrf5M84GLsRBR5BoYgQfkp6MYsN5XKpgYJ4SbOh+YFaT9UszWkUgDkI9Jzft
eU181d6Ex82dIs2rmA3WPJYtUYnRAHsG4wOmKJ4t420tNtCRhxbbhujH1PtKo7EZ
kX4WTM+PsruVc30401/x9EYjpAf1ZfQaeWcAo5tZWQ6n+C2COZMvO6YTGIpOyTEF
lbmmKcNCmZiv94ceeebFKEkgOBWkDFxa2AagxhkFTV16wDDEnVbPcpPX/d7w43Kx
MoUU5T3U/rJ4bU8GacdVueRlSpa9HeR78uKMeigzT8KaWYEptQV/5DuP6musCJOH
fru68DCxStO5/pq+HCIJNRIsgeFVYxD/h8LBnIXVbrF0rlRU9Z14iGS+BvrTHKw7
9BY546ppnyVUAR0fwUkkPCnL26jy9xVQWnmYxBkypPRv5XIOnDuBv6nbtui/zlFF
5skkZxxZ0LkZZct0rgi05wTSif9FBndu8WHzgyC/Go3tX/OVocYKjQFcZs19zLD3
lCeh6xhANWbtdKgIICm5Me67rb15LPV/4IPAnB+S9svWHn4dULilUdfB0VbJbVu8
BzOUeIoj6BLabAPwdIHQtGVwjNxuFCt3KBQ5pgXL+qCxvfXcUxSl4z0gbzT06Kmj
UyHHeXGw21QPuzS6pVTwAq8AKIB7J9OO/3IFZ8fNhawdHZgHz2WfdA5B36kuVtov
iBbZAyZ/6LOZ7gtyhJ03mbYfu0N/vdlXGUgBnyb8yc1WV+xLdhnjOuOkWF+S3upP
PpAIHDF54jvbhfeKttqIJaxiBRLdyh1uBbVwVZzJ2FnLgFlEUCVpkmNlzyZEbs4c
WcSmp9IT7V5Ip/Yco3vWzSJmeg7kXpB3U3uULWsce//uCKuZqnl5rhGANZdvKVLI
tTIU2fzNEKSLDvdofdsE+4OKoymCcEbdDDsCa21BP3GLMrRzPmKoLKW/MsgQX6zM
c5B62z3RKKmVBf6prtvviIaVflRTmYPYkS70I0jhy/47uOGyl7sQw4yhR17nEPDD
dvxqMxPG27df2LZqt5SDWVBDRClad1aLxo+OghcMWBRW0zA1G8NFfokRMCg+IVFX
LKeM0XrRgqfbihYcy4tg4C7Gx64LMghzgvy7ghFY3P8eih7bKX0WuDjuM5T5UvmC
eAN74LlEt5YDjyZiBrP+JQK5mR2RYPhZt/75SjlZVynWEzLc0iTMEUE1lGPNycI4
2Ae99gIZibMJR9a2/u5fL9XgDCOUfQH8wCFZG2M8P654qPdHL1zxAhNODkGI9WdR
2lf1DpE5G79eku3fcEwgr8IELUZ1LGSyShkY3/j1mlQvmzF5F3bmtoEOAkTAP5WL
9BCaTob+rhXBLSPowKjwgfNTmE3E7Rr7cE9yNCLWknmym7mu+TdEVe1colt61YWk
SdK6A3dlhznJ7jAFIlgCCYgvFgJkWa0wOWC01aLav0XE9mWmVVU5U4OlbGYouHX7
imrb5+mp+YGYKaA7jtoTvmkc8r6/89ZyaAE0ucpkmV9ES59UODhS7OeFmccm6aYX
qOcUH+32pvzN+thXA7VThzgTwEvMn/dZJUyrKwPdkFYYPNsNrx1MojrtlxACooXX
W+suoairH/oNgQrY7VHPj5ce4BjC0I17yzQW7thBJ+NWG1Yd3QDFy4uMJ/hb8SJn
hxobGg4Iup7tugOD4sMIVDNgVudTw8EmfVcJKAPJbH6Sc8Y0uN+c2fExNiWqbfh9
+vURWvCFddrEnglSPswF8ytciZ9hkMswfMdRipIzq/xt1gp5MDcIqH/EADV8nbzV
T419xnoBF6+63aQNI/a8QLF2QKxjz20O8zRb3YmZ0J6ZL16YN9UD6XSKIpqbhZcU
gH/0hmkGSv4GbNb/N9SJAfDhaHbWWpGG0ylnZh9231V9S29s0LePqOroqfdFEYi1
dSTS0rUH67dByMul9+Sa8BioIci21DjdWqcaV62P23ZW32+yAGgbbNGBi1YTlurH
0P9DiBlMyDeslHl+ZDz0lU87/U4mpPIu44X/TMP+lfKBI6bTODzZV9Xx6Us/nm4r
Zl7yjv0TYYxoHfx94zZeki+ppc/B2VrrFqkqblALvBuRv7qZ2QE3xhsj872N0iuv
MpV7WnvtMj9TQb6GQeFd2Fvh3V1j4GO9mKeLTz0qCDrzm+kxYYTCBhxXyQisomSv
FexhpNVuz5pZXEQkBia2o+ojI1HsHJoIANP3Zac0BHP3BZi8Z1Ws2f+gXAc9SxQV
OTrFZ2na57ksB082tUQ8Yl7p8JFI3UhLtlczEkmpWjr1l1KtebtgRtSpWZWWEMvf
PSsKS+2Iksm5G6/Ltm19gBVpGkj3epNRVFOkRCZivDfpZVqRRywsuevgSGwLH+ss
3POO8dzFsnERxHsmYUj3orGCYg7maUO9cHA2/ckJjq7xjbOitFAiQ5hDdvIFT6vL
kHltnlMlD7Wr4Abr1tTqEagu98nrJ9OtbTRnKypURDmjvEf4/c1XTaujI5/+MiYm
9rsLznWULEpF9Uvdsmak6IuTcdP4uidaSmEc4O6M8W+Hog5qupb0ByY6YORzEZ8L
oy34rx2qsqNy+fclxUGb0P70BFBXsVKWmD7uhbJI0NbTpPUW9bbrkHjJR4j3wC4l
elSpvlY9FNtEmrLWUODzORv3lkYQfCK7CZO8VhpSvTlHfctzDMTQRnJV5LawPQIZ
yWb+K2eClOvRXJVblKvDZXk1REshpqH7bMhaU1w7jjaxu5dsO+GLiZOTbteup/ky
zIxB+/Y7dvgOh9wPIszIog+w4nbeeGYTTCGqeK+nNax454CJvhW0N4jQrinFnJ4k
v5LQvFGvuWcfZ2982bpG2heTnKEJxk+oM1RGR+jCZ/d02nGdkVumYccQl3PYjWzh
7uipb3h45EcpighncansDwTiqQtZAid9eV6/yXuNKiiYxtcM5q4s3LM3mCGuoqhK
FQtC9vE0V9h3aC9CJcGzy7qRwOmUKfejGNDx/r8Fe9n/KgdVT0NKyinSrRu6Qro7
fih7+DnXsIeIwf1z68EBYXayTYN3jetMF4HoZnpc7lGFW3ZEheZNhxUcY0eYRqlo
rR2sC6T0frPk6mBphgyhpsvLbpILyRd97d/RXB/bKW68LfWlTtpGt2dCX/4crciN
q2ulTPgEjZG1KAE4/M/F7bJPv63IlfXfhwA3Jfs/tbbg/jgqaHqpPEPF4o+IP+87
9dmrjUpgkrvefB3MdPbJLcje01k1aAbBaXyf/JhczbBaijNBd1qHHCxhHcn3dIn3
3GhnY7AhlewLjvwT9BTtpQZpu6Y+0XVxIxeIrr/awPAu1bG5EWoXtgq8631Y9mgD
7b4msTuvZ5jxGpbhPfkgOdJVznzDB+gJbBL4Ed9rMN5yXC+7ZWc/J82dM2iwrpWs
W2anlt+UEheV5uVyv4B1bYxeAGJQxVOVksM6jEh+zAw9mhRvFdExr0iHIgYPBf2B
LCRyCd3vkFmMIh2lO8RK7dLTP7/BmphjPQUQ/dss+4Z7M5HYAfXI8BiXCSLodoaw
jvo8kmiztoQuHMrFoWPEk8oQygOPLcAnpfS4izrorRqs3SUoxCzOl53Lb6/Ji7FH
iD+ChVX3NT6C+GiBM2ZgdFOtxonXIyJK5jeUNDEFXyTKG5hcuD1UMmxGNhPVdC4i
PNS2wD8lStWBKvYCTg0dWyztuZ80htqqkRDmXzCbvPiJiC/TCFYpxa8zTAmSniMW
bgNaS9wMzN/hV0J/huxlCq1cYOYQEQlraKdmT9mcmtEJ3eGmtIj7D6WZro82f631
/VfqaDBOsmlNfzyaGsvCaKDXQOcbIkv29cw/MCW8WRcFu5x4K2EsVKt0d5NfLmB1
/Virm8iM9f44CRVy+BGFwXC5z6wN8+8ohHRUavdi3qIEk8/6jX6nbXLOgn3T+GjR
jVZLf+q432z4gpVrkej3YpvfxU/7YemItMaQbyvBGwQGvHWb+BCE3YzZzmHtYA23
N1bDxbnraH5dK7PiZvoTRlawssfzs1sZ+Jj4tHrhbyqqaP0VTS04ehsJ0ldTAvcn
ON6deBMtONrlNgEh253yypFWoab5aZRChiEdnw/f9Nx4DadoiR7qAwjZXdRgyicw
JXgULF9d3AL1lAYT1pYPPgu/dFRuuYfQ8nN5CzXR77F12Bm0rZa8G/1Rr/s+e3lv
z9V6Zrl45sCY7SoL4lad0n7W/32scX6zZjhYC9x7rmAI/j9w5QjyQxacUHqDVIEv
Brp5VqBCJZ39DXGHkpNdzyKYWvodJYxwXhB/+dkKh+EHyH2moEIFlytM/EvANnxP
yZLfOJCsnKCiWQbfZU+wFD5GN2aigOefOB5Bj5m5HUZB5xFB+aXqHODipIvrpQbf
osVRbtqw+kvyhGe32t20ku4TH733eiqbys8mqGVLA6/OCkUo0sjbyO/b6TQa3Znl
Vdm/mJjtCPiqGccRyafynwoIKE2hFwNFU47dhp868xSvPJJdgCqISPSrEatOZilH
i9fZpHZJJp0JauSMLekb+T++38ZZDobosDXErfgegcZi8KfS603JUzo407R2Q73E
HCUAQff5OFR6gUV4aK5q1RiGZOPPXR+AlB9UxIaQTlkZlnLrGCPZWL6l5RB75bXH
uPISTFL0PDy/95gPvl1EM6ZWRp5r3XQnXXXnCdDt9iT/OdbrlGOBIC8kzCbSlEgW
/PZbQq7svrSytdRnJvAahDfdorHRauTk1LuhNXwWWtor8mwysqcLQ5HbO2vANBra
/JFXAgoiGEeZl0Wgk3vFhLq7ZeXQor/lHX6/AW+PbEQWQ07fKqPyMpUxX3118iVA
vPjgRRg/LYkcI3qdfa+nO+e3hDeEdEp1eLlnIdiiOq8MiKsWAulq5zgKeK/7gS2h
HWNvVwPXEk6jrGNb/uN80G7tO8FKr5GFkMU4l0yCH1Oc7diuL2h9+1rMkwxSsgiv
JbrpUo4nD2pJ3aSNIMkes85RPK/3VQyDqwJ+yJC/NFlxSx1eU2D1OFR8eRoa4x6E
U4gwuMJYydG6vRu2gsm4qVlb/Ck0727fxE9TE3LIyehk3ppFj7L39dDHCjbnGvkh
Cqjp6Tc5y/sUkcV96qKSKeJVWsriWtTUIGHCzxvPxRqOUVvgqllrYer1ezDRxXvz
AL2Gw3YW6ulyI8fEwFHIzTnpPhehktjuwRxvvkoHzXf1VLlTgfXmfnG6z9hi/vE9
5v5UoRU3u926aPmxbvtWdbnQQbPNfFVE7GUfKhuGIEZ7UN/Ef7Ndx+TKFwmM079B
Cc2f6uEBYTMJonr5hkG0JGrlQ3uKVyY5YGggaeCIr2M/faTb/3jxWRSBNMDquCVB
VsIOP9Lhix3bx5IYSZ8kNcQDnlPsNRviHXSO1Q6EmfzyAGikg+tdqgVmp/OPbBxL
Y9e130OwhrDs01cpOaXspvqTACPFHnyUQwSoHsCgKc4tigmd1xmd2zYwBtgNsmfR
wKXfMAH1AzIOmDbci/KwgSnLkkr0ONOkdSv8P21zWHFBn9LWZADfdoXLSs7afS6t
ZWTcREiCybKirIW02dFeto16IwLGukkwsu5aCDMT/jvz/VDcUNCBRPf8CPuU6yh2
W91pWkY0P7pfWnc4vIK8ZOwtza9iMIqMA9mr4y3bF1E7DBEAYasKUXP4i/z0m9Ki
lHdeDFdiaMIvzZEA6xdDyiKPaIJmYgdBTyGmruUlaSNE7EU/TnK8EiILWuwBMiPd
o3ONRcrFvqpjhKxl6I381w803IQabKAD3KK/W6g//9ka2EN7T1GEFZLbWAZz1/yC
v/d8VdWpDG2MkJ2Fri0MuRl3seKd4qM9ZgLFzPdlp0FPUTBg+9s/f0ijpE/fdDhr
95uqzZ7Rbtk6jjZxVvNxAAZ7hW3WEo4YuX5QgnZ45mrs9KVs43tru8RYlxdsa6+A
Uz/38h13zOWyu3JKTwmqc3yUnf3KSRSF9JkQ6ioLv18SglcZ4KSrm1I88fHzApSv
24MJP6wyyALXJpVAU4OhhC273cfQmqyZYFnLlID0ccK/JjzkVlZKMSPFaubBInOV
yKbgTWpqwJaaUYrWQ5ixw/gE5ADvbQbwnPjTzktlLUU/9KMCqAYuIFxG7Bg6T4WW
9kQCUCPYYfIKSI934RSWZOh5WsaY9q1qW2j9O1n8ZnyyVgDGYxz3wwptrjEGu0m7
ZMm3whyeq1bYD3UIQa8RS5bfBVEPkiBrzMVGAlOVEmFyhXZNLcnFyHF9yEkC2N2V
lt8w517lkMkFJaeu0hlK1D7NpNuvhjZVY9fNmbBTJrdg8dGh2dr9rsEtYqd2xoGs
gi8O36g10OVWigJmSO2ZJLs+xnlC3Vk10ThPPkZbWjJ21XHX2H3hFRfNVCAK4lj4
9T1yM+EWQMkUfbI8SA9Yl+hw6gg8YcQq7H1Mz+c1R75QLghE6r3PuXHTz1+/EMcL
tB6wAkR6gnzATwKyi2+odQSsBQrNGfb8BicrGWd9jkmy8PjuSXaD4/H4iLKFC9wo
B4+AneWscxspNY/XQM3ZJcWsa2+m1/ONEIIXUJK31VqQ1Ut1LeZFpnoE9JRuTXFQ
p0SNJFo25qhdxyj2aaRO+ol8aovyO3o81GTsPZpVQX9du4GtQDmVPM8yiP4slakI
zU0S+l5c3ukJzg5MqGFnIaJrQAHoxMdDNhs0EbAH5RIbdlzoT4YI8ZA5B3qh5HGZ
m8GFuVgp04gfuGrMdTkx8Vlyzu4qWs+CyZWIAY8q+9XmE9BvioN+p3KqkfY0Oi9n
GoJTedsKKdRB3CsTzK5gecA32mT4Qi8aGpVh36nHM0glmL25h8cMCyXIOnGhj5ma
0Ul9+/ZhVzyKexlz63K0T0vuf0OJRFasIxL1wyACq8R1PEtIbht8/f2Z5r5sUnXm
56vXtHMCojw1CxRRVT01Hbp0d3oiuHG13ZAj7y00Dg34daL59mZuYoMCP/+Xs/pp
5S0OPncI7WEqi71BcWuyCdUarB8OCrJyDL/mlqDdMX+ZPzcoLKD3PC3WrmMBDqZZ
knb+hBG8kNVMYUubVKgQ3aASdWt4lkushKs3176rksud1/oGUdFsqzzWpPbQr2Ho
1pnX0iSzlH6e+U56Q8eLeVV7UXdcIV+ubD5m5yKfDPPvpdNt4w6bT358PQ+X2Giw
xRHNSuhdv712FOING6zmdmts5nhU6tl63J0PQBv+JfuCWDQLIKDDS9MfooFDFFMz
j5pkWYrwnlN+Tm/yU7N0icoGDl74NyJnMXafJ8RzVLs0PdB6eE63G8G+qX4Nf1CU
YZ91Gj6459uu4eQKttF8SH2uK8btGTv8+EA8d3yxfTIzdnmGvyFmvU3Aa/kFH/Ym
OAhJv9CDg1hHl6Gn35XvqqZMvQ+TAF7Q+JAU+8/AuSyRQOOmNt8NftlPM1BgXCNs
aJZq82J09arQzzSvkYXT6Z339KuN/FCG4aOYrmmXuDZ+N2Cc+mq/0tonIrbuoaTo
GzJmFjsmcbyx9WOd6KFl9SH+qCRoxBIpu1RB4Oi5hkTRB4rm4gl9G4VyH29Z7V3X
4XQuV6KVLFS0uZ1IrL+hvJPmR94qh52NndzGAhSB635FkqhWjpY6KDWpRr5Fb0fm
YT6r1bPLqEFrDSgz20cr9wV+MI7if6r22Nohj2OCwFSkAWf99nUywaTnDrxF+gMO
vgVNZ+bIxP2DjumK/ypeKMb2MPc5Hq9I7+VT5km8gkF2IuXZKe6NaTnv/oWSAANz
TtrY/8O5IMgI19rFgeWOmCZZUAJstrMcpCvZ+pUMe/pSm3nxe2UaJViqxHLAKnT9
R5xCHeah5orSYLveV77vgpHOg8c+tZDL1ZH8Z4tmRFadqpxconYyHbF5AxjK7sQT
W10XV6otEXooKJOx1yh33dZbnlSTeBfDaBlV3yKL9ASmW8ata/fdBR13oGJAPz2D
wcurG6zQ7jhbWvQl+36lcGAbWRrhXHaSq+sLICtLLzF4zGr4cAOpVl1qqJxDyxNN
xDZ0YVJKDMnOxV6r6OjIHeFL5hNPoS8DbFkvGems94YnG7kLtrB67vb/H/ajMfH4
NIG51JDD/IcmAigfJwWxY0NKmq80ocSHnuTHdBCQ2JGrGeELSZqvRJ9VvLK72tT0
XDHSYSDDRBdcw7ovlZTj3vZKa2UeNpvXvHLsnqXkA8TBDDAzwWvpoUJCAd+xlrVw
shSuwuAvwIGtlT8TsZCCEt+EP3kqW2myNBni+aPxPcDMZoPRfIzHGomUBOsUICUt
EBN+YIfmQ8HmExIbLKY12SAxa2QbUH8dVKBgdkleUElVr1XWgaZlCpoad6NWuB46
o2wGU0Ta0OZyMPEPGQYaoM0/zyVMSCyYZMI28+GJOMW6OzbAAyLlozEpvpcsSfQF
J2U17L4zY9PTAYr/88A+Qov5lUFPuKrFg7Wiy5H+wSkDM7qoipbW4MAAH/jXV5la
WY1k/DxAt/wDxP2vt7Oh230w0/UWuDA0rwHmgUnvqUW8tEnKROmCJRQa8T1kJwWt
cdCWokcGdOOmDMUNOsvRxMHb1OspVq1DDHJS6KyGhxFXbipaupm5lNaG+HsML6qm
7BIaAaTxT1uMPsjLjHacyD0I3Bk7TGbDU6h/cqmeAGlF8k8f6SJQkkuzm9tn0aF2
B6a4OLf8aGj4Qa6wVtuTbj2cTEK+0kvnTNg6yHFGRH3TDh/M/xRc8hzKglJUQUCO
DKWcVrKLyrzCMWHjIW+08vAEmoU/TRPEG+xm3HgCB8jhD7ggo3QVAE2S2h64gfqR
A81hXEdZFzljNFsON92qc8MhdXF3NQJc/aWRrHFjPlsbyB0b20iY+fZK8H2DvzO6
9r5t8LWSg2/Z2spm2strFmddVNuXuGkO96VJ5HobvpfupKsHbF20oBBmDhN/lt0L
0+wuxfE14Vy2m0jKCzksevVXAXP0JrtMpJ+heFJdVeL1bxRh3BMaokPSd5M5XYKY
B6r5mVhgk72raqZzeVoWmqkgHqlmtCoZqbYAbz+IySguirloxWuYRLKU32cLrSk3
WtCtpQZih36c4xEyZKmJSK9L2kG6vlvTtDWnRAKOFCm2qBhltz4unZHbM8DGFZhD
FbeML1KAh7iM6raoCN42ECUapX50wXkrmxEb4QOQFQ6hVP+2AHanKIsaO3LRMxyi
pcLBIe42C+0c1oy1sdSTRIxBlyaJnuO+AelVv+YfrwLsB2K7ra9w1GVg8x5bAuPO
3yPpfK1NqdXOlOI3cCTY9Ud77aWaOWpiRUyh2l81wBsuRMfK+NPzfMOFVzckBo4j
nouZtuaTOMFA31U1oIQ12VOYqlbsAq4rW26gxxjuKV1hhx/bcqIONHbB+IiGNoPo
Z2Cn0/s3UwUjmp0qHhIUxBHpT8yKVACWLAzjnecSMjE59BhJxer+1X98o5c7Rk1Z
NkTahFpYPcQdQydsJ8H7yOgyXTFF1njqyfOzNvrJSslHYxJZjLM1akBkDJnnnnkf
FhAcAW0+lJYbsM75hm+mZRDcuak4dQBsVlCTVX+mshAMXM860EEKMJWoazAaiPgR
1vRGjdjWv5ZiW3LjcvITO+PQWxQxoMHKxkxa1TgnPfuE8G2W17eT6XKAF0V1HbEp
7iUPIJ0DVrwy7LIwblztBgbNzyTYeFomgpIBw+JQPCrFYCxFp8pwXycdZiYCV1+e
useRWRtkeAv4ByaeuQi4VxSlY68C/PW5It2f8kaurMVrCJ6BsCAvTJlUK0iHzkE1
EO/z+AbnvQVujSB0V3pzf4NiFyhzv7dkDpR9K3F1scRIDDKVvSmhtevTpbWHyCqT
cPHkPfQOGtOfqY3pW2J4KCnVR9UE4EEumGxbdoXAXgtwI0mAhoH0V7zp8IoMKmR1
1pUZRG9GUezk+KR2xUp/pKkGbrZ1u1xU29RnWORUAvSo7YJw5G60kS704z7KHCkB
0MlUekcrNylMzMTS3CWz08dygOKAZOHFnFFOndrj5mqMyDhpUG/YBT7c25nFN0c4
OY5h/ssZUt5b+9rreJu3hp6l3Al8z+WWTVCXvpgBMio6m+/+zKZ5MEmbTNP9HUut
UbEqYOLEBW814hUfTy9Gt7vGj8BvaRWOnwc3Xivl6qHWoZp+ixje0lM1/On5pz+l
7fYZFRogdfAcHRstmNP2qF/pe6DEn4Ur9H4FeoHbxcC7qKCb39BkfXAZF0M7oQpf
bU6+8vrZOlY+vXZYvGrj/SV5q4HY9EtifYkKn1z0yaF/2uMF2Vk6Rem9/ewlFVM8
nWgvBTkK36ObaDSVGKtcCPCMtmX7OIlQeqqRl/vXUiSue9iVGHsY9+hFZNSfymEf
aGd7M95hYqugSs9aAu4Dk0rLJ9/N3tu1PRGQnQYjXA1QBBzK4PpiLWSuM0w+L7tb
XGcukXWfX0/QpOP2nidkPYg228z5CXL7b9b+bf88KezHfqJ+NPnrJ55m+IYHJ6r9
kTf2LlTM7xP2x7spXEkNkC0CIsp1d3s6HnzZPslhTyvRLVzpkK8t76aaBfpabhDL
Uk8bMWeSDzzICqSM0bUcXBc8ZuO53pbWVgcDkHAQsgwUz3L37bnSD8cig4OFJF+6
vMYhExMb1hfMRFOVqm6YmXof40fTW4tmNpciqH9QvyqbiX3Tdvxex5cfuv2YnkS7
9+tzgmVMoRzTJfS+Qv4hI1aEcPyPPR50qiigyiouYf2TLjIp9pY2SpCqLApSDWvc
4NEEHQN95BbtIZ7sTmAdn6e3252uYDNOL1D0GHsHr8wcyH0TaAX3oWzHEDXoVFzu
O9oB/I7iPKuaYjvM3g5gQG8/wF4A4Cd3rvD/HTHOrBymCJwqJ5agak/I3tHGnQC4
d8AbJCpnhtxH3BBr9KHZG7frZV7twCkkIlLbzfqfYlYDWEii/jV5369+8NnhNuqX
v/luI73TV/ZBbbXVVEvdU47WceqTHP52Uj89PJ9oXr9erwcUuqe3A61lO5a4oHgX
hHPQLb+BwvDHFlSI1jEM4KTXsGaNcIzHfAYm9r2C8XwNLEM9Z9Cv/VRdU1zSL5KI
Ko5/a/pW3afhfRZ82bWy5uRyeKR4g3GIX3xtfkcWM/gSjPzFPdksI1gYrA90m89Z
gvf+XO0ovZ+rvv+kxLSEVCCXkWGy9cwhAIeVWHvcLMbqq7f1jJxzXYUYiOKh1wG3
jj0gaX4WpcgIKyoV0uFq4s0SsZHa7+0775QixOUDCBMmszJKt3ZAqyXgyXFXDuCi
aeqKi8i8de1fsMCXEhW1RH6jrpwGapenwTxupioqMHtmfCV+XX+NW3wP7oVEcyMe
PxFf0CnB4LmfFCQ8IlNrPgRaP6cwuCFwqqJGkAoeCVI8Q1D47JA7DqDJ43EZpWon
yDufaZ2UJzZ9ZM9UXoPhvz/8doEasMcSwoa2VNFk+x+ItlITtZMY88UA28jFOrfj
Dde0RXQrKcaAPLiHOV0Fh06MgNmTPd1jdqJJ7uiE5cBcOadYkjsQQQ9z8DjTyKxs
8t122P/owj73aEr08pPx1ZnZGW8uWd1M/QM787KyvHP3hoHN8/rMikpJbtFm/PmY
AXYIaXR77SKRagLaaR2KK39u+H6cvGKGyNuVe0N5LtHXim8RA8UmgzToyG1oR74j
TeTWIB2x2RUPxVzeotED7s7ojYO3CRWfy9/a4yvouTfg6GJm0yF2mswSza4xa9RO
Zhejdh/wVmMfi6zuY2AfUt9fX+WwcDGmZsvZzK6lhB72m+P29IziWOioz5m5Q9+K
CoF9Xr6ZuZWM8Lx9/ZviNmiupm41G7THj2DCsl1W4++wWK5bx9Zwr9Coo2UisQtB
/vO7+46PeWyriCpJC6/h/PvwEDMcWutPvCE237EamjfxM39gnOUALrqAVJCj7jK/
QC9PqOaOM36QYwrskXmIrCBQsuDO8ggN+HYfaMHA67s/2HVXLmj+Qlk4HMKSucFY
S41bpeywzIclmyDb1elugl8rYDBZkpSna6IccksbaAGeWMQNNOV+tXTHCaSXRE4r
LmcCluUBTOuka4LZt0AYERgTW2zFEiuwSZdWqDjIqKkZR83/rtYyMp1hSCaIrBDD
12eGXm6T/yK/5rSI+L26tORY79RkMPOAIZFDKAE962B+0f+b3pt+eCwaAMGsWOJz
obRdHYYFWdoRyEzpmvB363z3pV5MO1MUiyKv9tUUtB4jzT7I9OQR6f2GnQUs/omi
GY10f2D8eP3ns6Bir7tNlqVnyZIZYXqzYdvLRlTNdp+2B89xzCEIjSDOggHaA0P7
BN4AYDw4oHcTVNOlAXrqYSHQHN5QAo5vIiEcrM2LRr6tFwEL5JpHf6g0WBlxICtx
gwb+BtKuXRGmYJxSBjgadRV+0bU/djG4hQPkw0Bz/zc/qGZ4kabhhuSZhz8IIqJD
piKww+shyCXtJv2M8sn+fHnGmyVQHTTKXLDvlqRDh9wxzLJ5+zzLxSShb7tDQYXE
JeIHkHTzeCLJgW+lukMWLsZ0qBJ4q7UzDil6c8XX1m8lUrHp+dY2W2n/dMehtCl8
65ngmiAB4/cKf1JtGux5yE4WZdZAZr6IcyW2NEnwZkn1DWOhoGfGJRx0y54q4un9
x+m/WrvWgR+8awSOVY4cEgwTjhBnAszyisBXIoPDu9d3AqfXFcnFE+YIT7XAcVIu
d92bk79uS1ukMrSWb6pm0a3Y4JdjZHIs1idXTVOuWK6qKtcAwczeYkl0MzcdT1iP
n2EcD+N4zMRBBhUwb8tes4EJxxHYP9wZRmPuAfSaupmBhYvfDeMClqVewdAfTN59
B8lXW+ch/DGAQNlqMPFB1RVuJkpX0c52d5HVp9molcCsSjpODQyjJ/2mLZlfweBB
1TKxJRc3OAGe/VuEtL/gpAwo7/Ue1ahkBd3KbSe8Awzma0pcyekkEYWPUpw0ujT2
CnCZHtxKqs+/4uwNp+mtRzhdi8YZGfkiB+bhEUFsqj7ZRJIADDNDRwRgx2gR/QSz
kk3jXOG32TzbuVmD2ZaFZVfFEW7o465YrVj4DB8YLq4DFYId2ibLwi+4N9ZhgSaY
1594Rae3ZzyEGtZ8jQ0vLx6/Yr8DE70GsA+42pfx0ffY1JiKpD7s+lishAVlA+iJ
6eZG5a9JK1jUJOn/zFTEYfJYdKJyJgVjgMAuTOgyoa/oiXqqFLcvVgcpymvvPtdA
aQpA3VtnldrHz0GVoKW40p0gXT1KfD7r9veMutrGfb+6hRyR///FjMmRv+EJJ/U4
eUbQvVisilwZoeo5VUL8M9AwMsZbkBhA2754+77d6RETUkIR7gGbRBSAbwmLf4+k
0fO9Vbt/L1QtfNCesigWglXn4d/FKYj6ZL6RTwpGUA9RBmpBWJK0tCN7jaTORVP0
ykUSfRSDpb1oxnZAX21oAC4az9WJIXIGxSOnOiSGqQA+g9GAnObrccX+/s64kJ0/
r+suuhC68S9tknlL3r3TxI6yGhn+DMGIvoUoy5rzguXqGqXEzK/Ik9Ln7ZcsaFXp
nruVFcPJgWlQv5gPKkGbGFfWCL2YT61CV8qGAmxK+PYJBPlpRMAcyfdkmzj53Wfg
M6QGrMeSHwrSAt6r7Dku+nH1my0LGBrrFgcCzN+8vbgZ5AvempqDrhe9FQzw7v2d
wkZPV+U58EvJrqLVhiAu8CS+Vwi12ea22VwqJ9HGJtz5JNwF/YTG0yA8w40G7Prb
DCUA5ZuoCfeP8Ca9S8yuMorh827CMDawA1y+BRxIoTcRlIku2TKH77lqyAwmZTdG
Ps+Y+/k20TcgwT7tQGhBuVd9CoEwDPGmnUqrvapUHc2Rsj5jDzdmuOOikNDPEORn
D2T7heHedyyh/co6VokK41lI3msdtisbtSjTne2TvI3C5Fyo27cjE6yAY/B+j82E
V6V42A5XoBM7tKH1OFaXgyCJjeSJhBUDOYjvzYLKRHCx+4daqsB5EPtKK4OkTBLF
JFhOWCOms+Xbpe2BfNC9o94Ikb+BJBtPSSvAHyA55QEr41B03QfSJVxBAvaucNCb
clhxqFP8tntahZp1ife5ccQ8QxQ/GcKLmsJiOdSWjdbNu8ldM3HK6QoxZObtM9a/
+gKvF2ss0IYE/5qR+4q6Mn/vBABaABKkVQcCGxMjZEzPeipvHQRPaK/lSRWRKXHq
7DK9E5gPGhW7UTJhPu2jCDy12ZijzZ+dJKw1ZvrfqRPMPRn/cPffdX0ZKzSoomF1
BV3zH9DyZoHD4jd7hGlKxRUr4xTqX7ZTSG7LlIntIWAjpTpmpxGAa8LhsWMcCcKc
aJrKi+GqX5hP+FQNEU7HYDpVNAQKXiqcl2XPEIhFQsBvSfjHKIRDRLXK4gc5kSPF
OM0XrMn67nYZBfG8S4JJKg2TOUVQzM3ozze7RW/yGvCvVh2R1HAnDWJzZvq60wJk
OSaK075mu0mehzafsCR/DTDPUnbf8l3nrol1MLBz48jD/xEmJBvuKYuTYCFyYbTc
qbEMQ80axh3vh36m0nRyefZIirkREhwysfTWYv6RuiTqQDGKChE1PnSPtSjW6RFI
B+4PXkldkdTPyn5uoiTkOgPhCKH5pEtqj5EE9eBizQ/4qsXkw9dm6zkYiTvg/Q0q
JYKScXbz0RT7gyEThOimYNf2E0EuOZ8n9LK08SA2P+uEk5zOwWYUoAi03WseWDj9
EcwQMpaNvBaj8puZrHTJGukYoeTlO0R9N2tVL/fA9qEnfn7D/WWraKAqrhGl7XGD
NRqfhGqTuaSosuYZJicOJ1opZQe6OMt0LjZj6EzS9q2YYu0x+fLAcPt3ZHXmVmtb
/cIJPXoL/Q7dEujJ07wlD7U7a0QT+acVSP44qvpcP91xIOc62bRSZd+BQ3zgWBic
nAXdkLKApp4/v+sWLorZqRKEv0ipNf0MTM2CJKCbZ/HUNb9zWKXTA6T0IRAiN1a7
st8MKw/Ri0z3tPVHn/YDnqWfWgLjfM6fxYcChWcNIM5r9Hoe8Z6eLwyv7N7U1Qvx
5weQFwIaTOaLVkTp6+Ekg6yRmEvXOicEiun1Y9OAhiXjDgngs6oqZco6vciWvtoR
bcb75+jjHVCoTNe6Z4EL4F374eCxjb7GZIyB6GUK7jLJxRvg9VWs0ZlollSgy2QW
H44HON9qmm/EmR+hwHWpbiJTYKBcqdZvtw/zzPVg3PViUhN/nveve99SSHaUYTfd
IEfH03A22hB0Pwg4yhPhJuE544PdcXMCrr1EEBt+s2ZaihIvTYEo4+1kfSvES5no
GK3c+MisxMc4OC/gCWNz33h/eO8xIlXB1tzM4PDlzt11Sy5h2cFuw/KDLBqzc1ut
5VFDWIbmeAEjA6O7I+GRx+9kQ8JbBoBdnKAPEz967RYplvAHS8KejcFrVtNZwDip
0mrLixSBRE00uMEOd8MCHbQfeNdQpCnIJFTTHi3z9Msh5lG16y4WshykusAEEAFZ
FwuT1sIvW9DMh0vcN7LZ89ruxoQ1Fro5IeHkIHu/OfyCU/Zkd1cuzV7iYbjK/2cX
zNqHWb8pAdd4yteDMIQj8h+h7Jj9ym4U5GLDdcEK8xFoTNvJbU5p/k+RQZnIO4Z3
WfY2Fko4h1/dZfG1Ev+Y+JRtPH1qzdklRpcK2eiw7nEOwNYjvUjZe5mGTgc7euzG
J2rim6n96HItqpt0HysGwl7rkzBAXtk6vyJD4aOvjCpoUbx4XYDiOnTa2R5oVJ+q
lC2eUzKiXELEJmv+3BJTpqUgbfBrrjWtmVY1qfcKy6QsQ4OleLsCtkWnSwI31MiN
Gfc2tAhqsyjuUDkxSxF2cSs9egWJJUS6aLus0KhEz1K0PcVWnC3XTCoOs/ICSOcd
ZWGDgJS8IxOQn7j4k+DElFh2FnFwYLyEV41TMpMYyvrrrUSP8gSUpz07uJ6D2WRm
UciDkDfdgqRYCmiIWQOZc6UEIlhyZYGgiHXHtNoGvIHnAp3IOeENV1+RjJ+Ft+pS
weFqrhjWAGojoyPDTvQMOzo3mRtihxJXpGEgI/gA/xv4TvghNQxg3s8XISV1g0vr
YLmBnMlXxpP3nbwVHcSIEi42vYGeyjgFM3dyPFfbTPNCTVl2sXoilIya8Z9vhwfl
BYPvJuICZtFGPmXKpVn30JHihRYgnjng4pJfGu8zUy7eFPUo/VMQMG6CP/GqPLcu
PZwQhYNPzB8vVahJtakCxpVdgQZW4cs+EOSr67QLoYLDzyQMH2XdmOQZcn2POBkI
ZTZ1DCUT+7xkzN7QFqsOnxCYEu/fXnAFN1CmxQRSnMt2NwmXcmh6RFGLlRwKewwY
tfUFuwLaNruSoYbCdiGdv6h2lK0K3hhScmRG4NpbJ4eohTn0TdLXO1ue9TtLVrJd
eRcQ67am5L39QUjgRNVAuRGkAf6auV5Sk+72/PQKMAbgTZogpdSg/EA5rmyU6yRu
pMasnQC/xAMcLWoLNCCGkvMxmamPIlJDfLKsW/VLUGhk7C5g+yywiZ17L0fOlRH/
UxIF8c/S4cE/oRIJzC6rlsMqss/Ikm5X1fr0x/e63w/cgS1ZIRHByFeve+xeobpc
OWUeVNu5l2KK7973XSVW0QdYiUWTjUb395yBCaZTBnyfp198JmXTm6qiw2+OPkDO
JHI5E2/T4NoNvGS4Sg6CHLkmnqdO2w3V35oFtelAN/OdSGXCySx9RZ09uP1KU7+U
QVv9kDXZeI2LvLsYxMET5RXAx+eOx4fvvcuC4r9Umn1KUnCGGT4SWcM0t9/NkoUs
9HBzB2s7SVl8Qcj4M6FMxD/YlNkfss9urL8CpuGI7U0n2rX8Fs9DUzYZgpz6GU9M
ZQ6WdXuSj65M6rJTTkPSyo1YQ9onFuYntUYVUusaxMt0imhPRefzQXRaRunxaKVW
fUlutqwO4DpeRULjtVlbkS9ufmBabamGNwUSoPCIse7+LT1LjBspT9iSKl830qQo
9Btzix+dtM4x/kJpjhZGX++dR8p0iqo6232txtiKSPB0/iN2/XSRzxHuhzARq+pA
iFtd5z1XJXn8HX85D56uay0j8bK5ipE3jj9afgrt8FgE9KT1YCl6nMgMVgCTka30
io2jHHiV8uEcG/gTk7dYa69aDNmmtL+XjyCXilsSIxtkThqwA4KSgj4mvlJP0Fvd
gRKmpDvavF39+FVXukqKWuznQMmMYky6WMLIrerLR03+IQs3HMnmoGKKJxMIRH02
Vkmj2LGjRmpLZN9MWxyo+vcoB/FE2tl1L2lDHigqYRnxSjR73XIP4WSUNtdqDy+K
l1yad1Ti/YZ4z/0U/ESW8sSPJYNnIjnQg5U+0YUMaPQ7BQSksLSHSvr9VRDwKu4O
Zk76DzaGUhc+N78hNz3hGf7nNPemDI4qZESlKQ4CU47iMoNKt/LRou999TCLMW+K
V7AGlBdlp7bUt5oTKo8OJOb3XoHV8zIOS+qIk5OZv63SqFWM4Pjc6MJvjo5naVZN
Ob2vQrdARZSCoihg43yhLxMMYluwfTKSGKxT+hSh3h8NWB77z2wMH5OCenEcRE+x
4V0XQGns6F2SXtxj5x+DSS9Uq0ZINSlPOA3Ys9QSiIIYzdafuV0W6sQQ09byFnxO
bCwc4DTdnKB8enHClR8nsKXFW+mW8g30v2CEDgKq8OeH08FBkktPSLB/VK/65dxD
H34S0eDb8IbjeetrwLYyXSE3TOp1+H+00goKIGTHUwdX8PFwZMAusE1sR42iRukS
Frp9cn80Vxz/r45vF/fCX1OZOEblkMa/0wq8Sq5iVqIDKBZQjk2ckvN5aByOuHVT
7t4SOjN/7MkFdcFYwjsrCC87UHOmkwOCnpkeolP4pmEHedcOg0wtsoWW/dyJktZ7
lxbwtx1yGzNFRuqlyFu8KpTVNPhF74TpFMFwByYG+7sUouicLzvbAUhNfMf/ZHfH
ltaXRiUfWiT8CsZqnYpCYTPYpBx6UvIEAqxRRDOyF8yiDK76BbrWlyD3ADXUZOGi
5tEnW+6b2vwYfiOer3EvD0bVjHCuwcgdZ7aYal+quqoNy7+YD1bPEZ1GWUNxbXzY
GK5DDBXZtMZatGU9Jm4yyaUb/rwlipIyLzucsQ9AX3/uWVmhbyfUBAxV9tk7g8PY
59/bzZibH9YdZgp+WDraie5CL8rZY3z9l7ZlmK8PUIaGz19go/Uj6CaK3OMs4Kmm
yhVzb7G/+RNlVLx1flJDA9nc6xRe4sHSu16sU4hmsM1t1/t6LRqpdQxtN2pahcvR
u8uGWv7PT1JYZuBZAad7hu54Sl3ev3OVcJWlP7Vtn12hDjOOme0D54cNt7pC+j+R
yFmWqoNhYwkEIRKgd+LJS7DtAF91SqC8xbLV9S0klljyZZZdJfrlSSog95Dyiy/j
Ng7sOVfmdkPiClXPJ+YIGJ/IYQUU9H6DqV+2sU5wVtdBGYl2WTuQaIwapiOVRI55
kSEIWs0oOTeye0qHW/5t3oXXIJZZYYqChPNfJ5DEyxp52DtwnxZPy5A9EnAosOWT
NQpsnQEAQDFIFa+98MtIxqkxZz0yobIbPtnSZQuvZkqdtPGyN7bh2u3b4necha5P
+gRRCC+P8fvs+e1Z8RlYrvmE71RY4uRL9RcGNfTKqEWummYn5ENUPC0P3ubnx6A7
PYDBt8NGK8ZradzMVLPVow0/+5yuhJofEk8+qccgph6UAJ4UCMDmwxr2FKoHYhbq
U+LHgv0ga63mGu3QD6t3CvIpOVRrszSE8Q/pQd0jJhqCkeJY3LOmH6ywae7yxNhi
FOGqT8g8QUvzhH5/Jnq3FfLqcY3DdYXYZGbc53zRbtA5PX8S/Lzum3L2vaOKYCOo
MWdjCKs7MXim43yxk1Na0da/C+BMUR8x9ftERuiYGgHbyBuf5fr6sJ1+5dZcXkkI
FlIevjg3cTR+5FduYuq8HfPsg40cVW8n3agjhEx0oMJlzx2rQPZX/bpyWDiUGuwg
R7GpJOjJGkPM89ioOysn9S7kN/5bBJ/O/f3Rz7u/8fLfsUi4XLcFfcVRDHbz0GYC
BOv03f9jZWSmG9Y232CVopyXYeid+LTP++NulymmktQgME+vCyBW/iNhwiQv+eKS
WkS0lqu6M6aHgpGS7PD3D3qLzZiC17/uOF/w+7Md5H6ZwU4yRTYwJbIqdrVFy3nW
TQuFL4KaOi26wkHBExvDtYj4jrxEThyh2uYlXhQYGNbjEsNlrrAkG23o3NNEqGl7
TX6NBvWIAClwqFgAjkC3wULTdhwhw+GxAYauh6cvEMSg4Sl3tsN8p0THiSDVMczB
hUXnvG6QVxxUmB+rp3l1A/LXVAJ1w1yxAJeq1gV9eoU6S2pvPmCdvOog0HTXoiUo
h84buTNBQ+eTVk2OB0+fytv4ZLAA1wCnFdwZMu0rRMqTB6GlgVN1pYhPwd8lFVdw
shegjwsSLsJsCLW0b2zGP/Bdp7kocKvzleO6Q3gBSq2NNBydqloghafJII2Iv5hu
Q3XsIzn61McWTSnfCBY/49cimQLONC9GYCy1UhDzvqNNOQDmhS9s5vYTD14Ygdv6
6DPNdrzjvLAHeUpLQi57mU3m25a/j2AF+2iB2Oe7Ksua7sG2qIS7+LsfCc0RvrY6
jaX9PIdd6Lgarktv99kP8RE67BgA7EtJu3Ng0ll8595SCfIt+eCVjBOUmp66Pzfa
Waxdi/auiqo2FKONZ0lzEFHyqK7859y2U2PrOL/WXiPsP99g9uK+kJG1EoUIUxYN
Wgdr2oZMKme2qn4wHffy6KcXvdmoPgrmy5memmFbegCTu4lnVafp5uImyQwEpczS
z6TiM9EncYTIMCTYkL2IBHS3Ke2g8FaSGsHoB8mKsJd5CIsqkiCe6PKalZzp8xwI
Qx09UCiGo40eQ+LqZDP2UTX87AmtE+3uapH68wqlVG7YWRNW3SSsWdTz/TGxRnkD
1Ef/UaVZdvgJ05DJiPWMITVFxT2ohkCqL3wjl8bF5OwZvTkK6RGjY1iJ5WzirjpK
gv+A2GvLYSl3P4qptZHrCOMmLNOXJw4xhp9Y38jcoSPGOT99uYdO/ArF+NDpzcn6
jGOPYCl80/SVBsaD4nWELy2ud1zRkm3aqDcu8SFKaNiPrFG3GWik4SZYll2Lf2hg
tZPTi17dsk5BAobPz8Do2YkOkoTtdtZ1ktZstVfPYsaDLqtViCEkvzAFC0QRLap8
ACS+qWP06HykfLiijvvqRVKUfY+Kld062mcku+2H0eCDXGPSTNRWlkYDRH6WJ1Wv
PKjGy+FFw/+M9aWVSGmHcfiOGljX1oiLnyes2h6OGsQ6zkKXyWcNkNeCN4XuroqN
ri0igxFBokoKv+sK69mXh5yOV0bFwIZ2vetkqA1XJ5/SEJa5CmKm2fKtgpQSNrcR
jy/sJj+bW55n58qYFzvTe3Oi06ljZ0GMJrsfr77vx5i6BMvQl4jAWvyYI4vbsxrA
cFlZZ+i0adIVq/KbbTCMRAiLchfpRqnu/uoZjG6hQsEvQQrKDWOQ+PeCi6tZhmuv
r5zIpwayq/eMTg4k/nrd2ZpwAFnkYVrfsOBarZUA1k44yg810ZkvCYk41il7vP5R
jpzfPkUzgjH/6A+vq6l7xnPSnWGa7BguE2PSrxQd1vw/2oMRBovho9+RueaxQ0nu
QdOLuyyX74Z8YA1jHMhIjZz9cI/mzBadkRjcmL4tT8BL0/zp3FQB5TORsQPRtCh9
IduB0x8ceVzo9DSvmvsCN5wOhhnhf2UsMRlzWRUMbSBshhrijxpMZ5KQks6A9MYB
7Vm5lauTz204jiGg+RZIcOIaj/QgIoo9InNN2RqICxSrmV76XqeHeCjARrZkIsDx
FxyPhb6YYle4Mwjpedx2EqBsmpM+xkehkLmxpMhpy0NTdUPa/BPfxGJMimzGn+aw
agwXFGRhj1OGeRaGvBWakxLt5vJPaFgQcR2VEANTrR7Ev9SbFTpq0jQG1CBB0EnY
X31NLmOH+DIHuvRB3CCphGLMEGBTiDAXJ1YA1WSuqvkImdW+oUqfxNBZNMAVxqPH
KlsxWH5Nq8QTjPfONB64JSXTx7DhQUhkUjR2tk8aYyF5UqXJe1SEvbpzV5zz19nz
RQqC0VN1YxotogxyQ1KHHq5+bnEHZnCBi8yfwSCPHFlmtAbso7mwBwyiO5jr/UwL
+ysp2EispS0OnD6SwRmAb4UhFsN8oEM42LtWF6Sw50A112rf8RZGtKDc9OYMawZH
J0ngYPDoxVt06S467lkmJAN2btwvOnt4Npg109waDUZvNC9ELNnNOYND2Pn7zEYD
nlHvWSbqj5XRi46IZKurz7XM3RLVMSj+Cc33nzS0x2T+cadlJb1hziP9ac3N4yWC
D+Z5SXVPZmIhna9wchNj7vYTlGvL4OzNidPv0z6k5Po0+FR314tVdsbJP3wYdPsY
SffcoKPLmogz/hE1IB3IL/+SKPd8XqHb+SQ3eDlgu/cc/35n032f9npLi+aooNV/
jX4255kbBvMZQsd6E0uHiAflNvZIlDC4dNPP+k9anXaLtyx1pjZ6KVMWw9FaCxvR
FGF62CmY6R6gNiwA4JDrA7gCpF38/+hhc0Rw8f1+D18WqWd0WsT8lEb93q5DcwUB
bUhu6bFOnsA4uy4BDvHd7oXPRTW/A0P7I9UA+wJwmbbZrfkWeh8Mm0EEN52a/HuC
wSwZ6XYLum9lIuLWLEx+JymVCxqCGGkpTibi9dIGDN1p3dq/mGYazhh6xp9ogoba
XG1dRy808iYNRLmCfsGnhU02YJgQXZqp3FUTxarcFRmS5W1/zjPdT0HfN0sIvl3Z
Bqbj9j9ClxUuVu7HHyFrB8r3DK8/6zbgyUgkiL24DyVJL2vzdjVBoM2qqtChgkAg
LwXj9kh1CWX3mYqrfsNed8c3E+NqXprRQ4Ta192x2vpcJZwSOXedko2wWkVb4Ji/
dcQ77EPvEphERWJbTFHfmgoQHdArOsm37li/DZq6lhgUp/CA+T2exVom0zIypwJj
aAaYjrY2HB/AAg0jmhe2DFv6tZLK/qo1QMw88PEvN+guvwQsDO0ri7qRq/FcV+1o
Cmhxlgws9aqWw8qikCu284jcGma48bNp14KYWlCzdZ5eyueSy2M2LoQfpIq99V+V
CuLJIww/T9fSJWKqzXAP6uu/CaOgviahHHh+5pYcBzV48LbdEkYZvMKPSAVjpTeL
ZGaxtwWyVNKHus1XfkHVmzQRr8Wm+oPgm9asdbwo7G5SfRf4dcKAswXZXneblC7o
SRqL9PKB50R45c9err+WUd02Wa8shUQBz6hh4db2J60oxJLhJIsa0oKkhdSy0RvU
+Sic4XMSbH/8kzrNBdlDgrkP6dE8AXE01c5a7R6ZHdp0xfVxbeAgr5Ea14GviKd5
M+HKSxkPpJcPX2NEYC5nGl50sX17ziHmnJPmGXw/1Wmd8u2FHmG3+w2pDXnL0ofv
MifcDa/fnsuoIVIHluIJSSuyhAVaPa29YAIlSYKDl47930Oq0Zwt4Aa4y4wbijul
pQw3/AHe8ugZnKApL7RLZyWy/8yX/wy0RSrokDWUSfIiVQsfFJRKDEkhvwRsiOF0
OURycq59TNEb8LXbT6xB5fzjakZUPjtmpubUTnqR1S/Lxur64bPPiC8U/rg/Lp0X
gW0Rtr5qlMQWQV0tYQL5mklMAvo0PjD5Uf6ecqk0jLbSUAS54Js1WSuTie61JjeF
SA/PYPKC9SVG6V1xDgfg78dDg5DxaMjP3ArW1f2mRnOxdsMZy9j54OSjijOeEGsW
rhjkMZ1BgnPecWNKTY+xdm+Fh2N6sJu3KdzJj6mz6XZihA3DoYErzb1qyZvGQR5S
yb16UvbvpkGI+DTOEJlq/SwNKF8a/vOknEEQQiZjPvQryt+2on/cPcgBs76aCZOL
jqiGx36j4xl1KRZD6XpH0CfgYkbgQHEAtH6gGnfpwXr1qEtZNtjmmH/YYmIz11u4
tHNjG2VGqxGJMgzl4rDZrCenYMTw4sSFVVwW0CbyuQgQrgue869yNhGH8vgWmiWI
9DrOYjtMAY+dQnr0UriqDQVXhOm3KjPK8TAsjTxxfD2eMDAe/Ee8hGDRivUPKVJ5
4Xi4s3wUugDT7ef9iBKaI7KYBaCnrUJiqGeg6DEFGxIjVosocV6lQcnjc/JtS87s
2ALvljsEAMLYS7huaX8RDWUORGZ4MMK9z//iDd3Bo8OFRdmExe+YM5luK6biiQXS
aXmasEUcDrPDwo4VoXbDAdTM37ZV4TJbgf9aQMPtV01vXCLCwtbr/xavXYEwLb3D
5i2rEvrTp5e1Sgn8z3X31cNCIA1QflNGDvaVeTnCRzzMg5guURs/HVwTE9PyxYkj
MYzPQf+44YWOF5GIaU3caVsUb3Bthb23TEZtvtBUybQs5Zih1kAN7afwpY+dMdJn
wHeE+qK/65oQPQ8Q9wHEtWNVn1uv9i64O5sVzkK8i+ULIDk6x8TIxyZWD5wNhvcC
sm57n7rg9RzOTKgyY/DdkJvfhzOyXkDbiBFToONHK2DG9KCuEktcM1b6HVGazhL2
pZgCbATo6wybTaEggFDptsKNGFO7rPKgbz4v0XS43F9eIDd5iizL3y+Fp/tE1rOW
y5I4iiyQN9hvfQYPPcb8wKo0q/X7EFFPbUVyr67mdX23acv+bpmtrb4YNQKex7pF
mnb3imTE20R3KiHOWw7pCmoipbYjbphWOEgO4wHZC5eRFAX8rIT1J6IAzI+e6pKM
gIgznR1pP3GMReHGkcczlaO2TcxeKOv42wYzX1J+6C/+Wgjx4qCF08AO1YnPzWv6
UYWN/sgMBBTxLM+tqTcnNgKfDHGqsckj12VgCxhmfNrX2F3WzT7c5vamEuEftvcV
3MwL+jYHfsbnnyVw1FISirojhZSpMOk7ybl43BRD8O/5stBVFRPGvSOabF8se3ex
9qrGjfe6iaJp27GPncjkSPuDfIYN65n3NkFrmp04zBfj3pp2BKcN0G6mVtZEZ2bd
9cZ+8JZTjG8qKEpbSyf4gm8ULjvwOyZjBhZRbtgundmNKJQXLDkEY6zPFizCcLj6
udwV9BJ3x5rPVn3tNUR1pAEMMxJzJbq3trS92J5liCL6FkyBOCh66pqYOk8LLdM7
69e8yDRvGthw+RnKrL8AVKUEJ7mjMOcvNcLRnLih+6Qf5dTMXLA7jjj2EbH0DjeE
r1uJYu+dGeVO0eN+myTp2ifMcnT3kRTOgyg5MTkS25AXse5lgAw5sULcR/h6zvrQ
iHv8ThWyt0Tj5w8GyLtMbFLvbvVIVug/niqxRzqbGzaE2o53f/VKuPO4KexXBOQ0
GM9cm5FFmwLwt4mJXY9cRU/TMuTY8q2ZkwnM5fRlfPTjwgM1NVDWvBZOioAi/WcM
7f0VtKyPTSjcxpMxFjgReaAHee4BMrnvRd57y/Ax+f6EyyiTu49rzhrHp2lAV6a7
sXGQ7hXUOalvIvXuqFjjAzea8c8Wzu/cOTgJ5nmEd/+IBY41zsriSd6Vdq+HnbPu
740XYi2VjfeEtNjFZ79gRjux5sVQnMyp3WVXRWLp2hQREkLIOOiZDnzPiF0SomNy
4P0ZulIwTpemy3lpcMBv4o8yx62U+1KqvsERiKNV1RCIjCt7hun6DPsFMeovgYdE
zcb4Pym6JdSrwM0dPsEEhJ9h6pmefI//a0eQJiEfvcmFMJqLAfphUPWlEG8nBl4Z
utgdZm4YYdiVFeoMBfNZ55yC8F/7tejclqgTRiZ+QDBS32xbqP3o1YISmjmHYSJU
SCZPzpvUyytu7MvHrCbO1j+KT4AR3d+3TgJVgqyuYDuQIQ11297hjL5J3zqrv908
S4fkRDnrapb+ni7mr2PHk2y11ed/wtTQw/E78WUrwZPlOrrH6uzoI9KM4Qo2YLle
SF04i+rhkj5DkkFeMSkQMQEudDOdktA/I3C/OlJHD/6IrEeJ/fTKhjBJBO0dwqzP
/LVEVHYFTcLHF3Md89GSA0z71fwUUUA8KNYp51JI2MEYyrKTvZDVTwSaGL8FA2/i
dpPRgFiTKmZVtlqrve+WehWIHk4HwoiSQyT5mDyQFRwUyatXzduY+edZq0WHuDwT
aetFlkTbR+AmCdwrxlzZ0gPgB7sXxjUhsyKGnd+vOduhnWdhw17mDwYTAhskpRV6
1HIkKgo2944sOybbjSe+oxJVLia5F9Ig+WmOvAp2NJIZ1Chy7yiGfG7vFNBiuCzg
BYpabkbGIdqkwXahhjZrhPpJN+YfIVrPcG3QDVdhyrdf7F9pPOFgiGP20WQs5P5Z
B76aDi1rqWlVNd83aD7+38UnG6hzVowDlsZM82uxv6t5kfToWZtFYfMr0VdPKOS4
dzg5WYSnSXtT0ReCC1QdmQ0mvmScBKEgMAvdEq2lZIuyx3JKPFYvyyF4y4tRMxf8
A5ptAoiEaamMmlXI42kCknLbu+jOxfgkesaU94pgA8xrvVWllI6Dua4ZHdIaSmBT
171+WUFAz0HpvgixOqTeNeZYiMhUGvmOd8wyGTdYio/LU2QskgiUgfsBVGBJpxMC
SUNz0apAiQkdLBWXtQsyJqB5xF2BbiY/y+iGdM++eJZq+7SOht/r5sqCvYgfmlrr
Zd0fPlxGvS8MFwP1gKW2pkbz6TOaQ0qkbIeGDXTnHeR3BF2Ou8lV36IgqwS8bNae
0HfrRwBr7Y5awljLZ1W+m0b96lcuyMCc0uiv7XPbx47FJfSvzxNtQmMmaRQby7DJ
4cRHSuvwxfQLhPELCWThXNHCo/Omff3j0OTSdRY6jxbalit9cN2EHlocF6lgA/QV
N8zHWM/dTlbDOUsTZuXgJRJWqmKEExB1YHROCUY1n4nzTgAhoz74PUYmcxustsI9
QC5TATnmBGKIqqb8BcH6jrMsHyIAEsTao907Ca+mEJHd59imavbnlCM6bvsNMFsR
aQ99K/VfF4OjWVK2eUWumMaCEJyp29Ve7ZiR3YMzzVjX05FLpoFQErK4ohqXTgjj
51n7H1H42EiHXpeo+cR0N8XDmfNtLQ45wkWvpp8Txnhhb97Sa3dP1yPJi34gWam7
2PX84283nP6wChuP4Ld1xOdzmak0ueEsZr+EGby2UsfxvOmDslhfn9YU3T485mu0
J4BtLU01WmaNn6n8+qXTQXRtR/epft3QAIp6JAI0RhfshhTsByUUEQ25L5Leur1j
AArPcyFffCSAoLnXOc4OOTvRXMzx42VYzCy8AHJ58Xamdn8NH/f2Uv5rfd4x+v1s
rk5orTYR+fe4RrzxCU+AcAKDuSYd7Rk7kQoSHjnnF/d46pXtU+cssnDuYIRxo91p
tfia+gZ6FYqqak391gY1ldFguHhdfKT2i9YQkgJJdLRMB8eiuptMWWWAFiSx/ehS
suJDsdgRK+wWTYeYX7MSjUw6RlP4DGVtehveGJoycb4WjbUJefgHOwQf+uYSwVHL
Z18GZFMSDwF//CZk6FqRtRhvsBtl/RoN+pqMMPR3EUPwmQV0SLOIoXnTW7PbYZ85
vPtB2UvITCFeG91995+KOrNBdhNHsUARqEXQbeF9OOVLL23Kq54OhiGpF2d7047h
IkOM9VriaW4w0j3hBvIJt1WL7ThogSZRhbjWJFeYX0j7NAvCvHvnLbShWfUHLri7
QbHHXaxgEle6QoKvRNxL7pEvJu4cJWZLYOC+AdEhy4Hwc9LFAWUQ0IyzukDKxCBe
z0jrwKshUiUOF4E0Ck44QMrweiyUZ2Av8KS0ukU+3OxEOV55YsFZqwApx8gPYqlk
LqX2ON9etjIEBs2a68vIn4apkXrlKX1s90N9sPqvbmmd6f2u1jvgRDdZXKbaqGaa
rxjkMtsC6oPfwZAjArSfIB1sbA+XH4YtXdleKN3Y9n/pkOaZWto5TanJ0dRdGg0B
YwlZ9oWifcBJ0kHdEL0Zmo+hllNsSjcHEVabIWctDNomdqaC02yyOWo0kfF7UniN
g4y3wXrrLJEmhHdY0zKJK6bYbJPWp/nlIF0o+j9PjTaCyej1fTkftMRRMK3CgfUK
vl2IJhbloxKs7fzFNZ9EHNV4hkRnXQ5XxdAQ2k+4Mr4Viwobq0S9zIUcZKWbc02R
LenMGBp5EbNWJj6a+WnT8ro5lWU6ULTU4a0ctqpJvbVi03CDJgawjZL2YCtLceQY
LGGIoqDugwo2TkAjEl8Ev/S6sMcEAMvCHD98GuJUrUpVGJaIPAHqoCZbd8eERhEo
R5IBSKVzcf1R2ZetziIVgHGFT0LR6PsbauIVNX64OX8cZYawqnUugjrbHoTs4HRC
wBCwlB9syZm07Wby6I/KkYVqAEJPc2jIzVBTmaGgeNWh8FbLbH/TpXM1OAqvGrSr
gd0Nt0XBfmH68VMs4Pm4ZNA5n6PThoSlAVm28Je6UpcCbWgshGkJxK3SiBhmMVtr
Ow3w0RR+FMct/Q5C7lKj+MBGdd2SpwNJO9sBt3O+46aSvz3Si+Ad9oiH7ZMKMBem
sgVlvmezLtgs7m/FHedz+EpuJEsSZVc2q/Yo8L0sK/o+YXxJllY72mSzn3JAyBAi
XmKlnXVOF+u9ufIoahY6dTdAzmxhaY+5zxoAZqYDxdv72JSxHmCt2PeEwt8cDYrb
uaG5WCbSHC7eeIMNmHwSlwlO2FZn9QqMgqXoivkhcuTm0D1QF9DwVSlScaZWbZbC
qHzyn90rzGQPciaXAAlZDbOsBa8f4Gu7ICO79wE6bu87Cksu6sQMq/CDAFYymQqx
MtQe/CREaDR76hWeNVfylUn4iGNv6uMI1HoObQJNN3tu1U3FwZqFEKU6QUMxjvnh
578hwt6xgVcB1/lyi77dCLJBC9Ksc62Vm8qUhIDksynEBKz/yIs8UuGmGWtNb4Q6
IvokphEHlpSUoQNVUK+coA53bELqEUurx88hJfG4Xr8N8XiZeHDGJhniaW2v8pZN
oMzQt3gsYUEFgNTu2NVPtfMHQ/JEPE5o0UlbDhy1bbNYeIO+mqupxTZQ/yqel9Dt
af4jdvQWcxfjwbcpfhYd+For8jLex1Vh+s9bSOjGX/KA1Atmw+saHngs36TzSlDT
MTRWv0aj4rDVHklcZY0b7o3+4g216B6Ninik5kDJuf+BIj441mn8RXjNnQmr3qxY
2q12ARA03/Jy90WaMFQnKI153cn4cCDzUwSsy3WKFmJO/fO69RA3CNkXlH5ejFh4
Sdishjd2u9N2f+xL2al3wYk6aFqj12jmq46hI/qu74GfkvgCTA12KCPHoU8l1P/Z
Y+2Oc1Bh/xLtxNqoDpCw2Kwnc13JQzYmmu8V40tosyy2AENx/OplEaWZjXRdfW+M
wLXZfBzYP8iHAQZ0WLnm/kqyvK7yEjESTM10epzpaQLdqEmRQYrkR+/Zbl6tuZfy
Oo0+fV3nfASpjDuuhR7BDQJ7Fs2xnYD9XNFqQrOr16n65Y19UUlN5OSEqUTtYKdc
UGYzpys7TpxIkiy128geanLbvU4o50env0loz7cmw/WoBZJbq6JABycLfECqXsu6
Z9SoEKza+97ok0vWhTH04gV3N3vLQAZ+D343ayRnhwUot0frce36PrkUTXNYvwBR
dbUr2B/t31/+Xwpc2CH7HEJHyGKylENeaV4ynrzgvURST12kKyxHnJqDEjwHTrK8
vCgGupYzx6rirKIOoHe1bvxmJEZB6adh0hRH7Nf0mi2UR+euaNsuSY4AgWEQ8L/1
+eZT7W0dJPyKdTyxZcJfuEfMeJzSw6rP/UTJGPHW5xTwSvUYhitLiOm4H9T16rUd
dyMkD1s1XreykiqBW/Zl6c89NFFKnp97VxmgQQSEKZPZGSPNtj/uqd0+P8+0rtaH
2h7R7l8KFGKQFleuBQHeQZTpXAvrRNrYQJXwsSJWfv2fN3jwFk5tE/gjJ9lIuQOb
8yQNhDo3fnqe4083AxDoIVnxj/cqiQAgxWq73Idp2yKplngbEfw3gKM9M/3kqzb8
h1paL5MwJh/GMrZCYg4SiT49WtRJrsAj0nmBbNFjeT5atVquxk+PSD3Dd3WcQw0s
nzksg0D5GSjPwQqwW25T7Hp2HLlyR/q+h9GfUbFjvs0NPzpfcRSGamPDDFK8VAjf
oZqmSD4+9fu/YigJUuF0j/3deaWm4HJQIcKenYmXvNWThH79WyGAxHFmiZDprsUY
15ZinSJ/sADsnxrTcI1/X9XWOKiyK58vfkvlM5hrjjVP5r1qysvN7RdP7QqmBOOf
/0gl7mmUJVbAai9Q69rz0jEl83oy+TID59K/ooVR03kSk6z572CycHdA0GvsPMR4
Xqc40MUOGuozD8DQHMTlnqcg1zpuTPzTKvg18knVwgdG8mBJxBEzeia36YaVkoGo
hZITtlU+Pyr5NrYOe+u1LgjarxSHaM7VL72YrQrBsNOzYpbm0JM/TTsh/LVJ8851
16xIqUJ7QUPwnRxAOFsB+Zex2WLJTG3D98i4iG6NH3WNxIhwHNITZ633K9LiNTsn
+wKUMNWcl/yyoCIqJjAIZoNUu2u3EBX9M2AMcW6s9DqqlgOagdHJ+OwNaPQs5YC6
5H3CMxvlI7j0hKdq255xdXY/IF2PigHeldIX/jJq808egZpXGMPTdVp3MGj8XSAJ
ytzMA7xIHjq6wBFthQdwx3VWh/ny2HRl+mVwyTVxj/UA1C6DWKWq8BMI3W+Rwz9c
dyoceTG+UkxJdXNpsX5ViJpKbh4Xzr8KKDVwcFRuIAwlak4xoBVlZQVKqS1GGtvt
tSz5/HuXwN99F4/MzsDz1lSzjdT0WHR60MVl1VlPXsdv6luDBVmo3kZb13NN3Uwb
xrGAKhnkGxjdHzsMBBGoyQCZ3z31UgPAoKpgHVzFl1Ctq5eOX3jlHeEDkb+r3GoN
NNY3/oicYIF2NJRAh3nocavQjDm+WvOR7hLPfKoEZ1caiR/sxa2bpP8ygeNZcMCA
3dDjjV1qnEVx1vEHoXewNNWrFprNtlV1adAHK1oIBtz+i13Ac/jZVyxKkNp7vAE6
CaZ4MurTdp+ech0JPr/Fp+s1/x9xSUb0Pu+cKFEkDqHnsbqGENz5jvAuYyKmy81D
UQln0AFtOv7iqDR9rn7xzt/DtXpyG8UOpt4bdUDGHMAjFg5tgf1QOnzp9X4HphNu
zscHgh5sC8t+sy7lhGIQ3+x7Q04FG0xx3BQM/I9IiqRfS8rFe6W1RLvFm9NpAmqN
9K56OQQ0et0z1I4GbH3ogS1xYZPWMOBgOB0XgisImScPIY44/0xAbl7k96BuAh95
0OjTd2JlxddRk+GwKGzaiur2NpuMOBI48WL3FtYgo8EWjw6ZFnI1G2z+TfdczfzJ
qAY5Hj86egt34/OaL9hISMNqm4EJ9WrZ4zNhmIZSGoHhnmqXjBu0KvN8raW3+JS3
hUwRn5jfgykNZ+JafHLFNRM1JfKYW0kEWjpaNwiQB/yt8j4TINbo4J16IDWAXELf
jt84aprCQMfynOBB1r4TAy7BdSWTr+ovauADSdATsEbNVNizG3W2U/imotL5Cdk4
GSZpQAv2s4NuO980lQjCj/Ie6Udv5PEGz8jW1HYa9xsNrx+P6skdwRMyu/SrNohE
0skRdTF+zwnI3fIdaRed+hDitoiwvCnEqiPTSP+/pmF0zgKJoSqQ3NEWzelwx9N0
+IjVveVIs5qT+Z9WBG8+FjvJ45BqDEhCq34YVaMFZwZSdVRuR2TelLQpfNWflCdG
KSTTzBOLx9QJWMPnwRG0FiXxgK3aDfv3q0KuPy7We8HCqr/ojeWC/Kc/cTOrLK6W
p9uDlTcRkdFpnb0s8/9DdOqC3FvbD7XChO0ppV/WIuD6MTMZzXSzzesaol0R8o5I
jJ9YqzLIpisULCL4d0EIIpjiJ5vz1EMXFH5mklGKVr2fdtxH0mFg2d9vLXFqihjJ
zl9C/urjk0skM6mZXESqwrRhY6jEpsehEiGY0hTH1YeFAoY/pTTtNTxb1XOT8wrH
xOVSEMq/u3fm1WkgnJ8PgC5BsbYokSOlGO2kusPZNei0vyg6CYj7CHVm8FetLKhL
zaDMQKAGwLBK/0+OHUf/gw==
`protect end_protected

-- =================================================================================================
--   NX_RAM_U definition                                                                  2017/09/25
-- =================================================================================================

library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;

entity NX_RAM_U is
generic (
    std_mode    : string := ""; -- standard mode [FAST_2kx18, SLOW_2kx18, NOECNOECC24, ...] empty for raw
    mcka_edge   : bit := '0';   -- 0: rising edge for port A clock - 1: falling edge
    mckb_edge   : bit := '0';   -- 0: rising edge for port B clock - 1: falling edge
    pcka_edge   : bit := '0';   -- 0: rising edge for pipe A clock - 1: falling edge
    pckb_edge   : bit := '0';   -- 0: rising edge for pipe B clock - 1: falling edge
    mem_ctxt    : string := ""; -- context initialization
    pipe_ia     : bit := '0';   -- 0: no pipe on port A input  - 1: pipe on port A input
    pipe_ib     : bit := '0';   -- 0: no pipe on port B input  - 1: pipe on port A input
    pipe_oa     : bit := '0';   -- 0: no pipe on port A output - 1: pipe on port B output
    pipe_ob     : bit := '0';   -- 0: no pipe on port B output - 1: pipe on port B output
    raw_config0 : bit_vector( 3 downto 0) := B"0000";			-- PRC
    raw_config1 : bit_vector(15 downto 0) := B"0000000000000000"	-- MOD
);
port (
    ACK   : in  std_logic;
    ACKC  : in  std_logic;
    BCK   : in  std_logic;
    BCKC  : in  std_logic;

    AI1   : in  std_logic;
    AI2   : in  std_logic;
    AI3   : in  std_logic;
    AI4   : in  std_logic;
    AI5   : in  std_logic;
    AI6   : in  std_logic;
    AI7   : in  std_logic;
    AI8   : in  std_logic;
    AI9   : in  std_logic;
    AI10  : in  std_logic;
    AI11  : in  std_logic;
    AI12  : in  std_logic;
    AI13  : in  std_logic;
    AI14  : in  std_logic;
    AI15  : in  std_logic;
    AI16  : in  std_logic;

    AI17  : in  std_logic;
    AI18  : in  std_logic;
    AI19  : in  std_logic;
    AI20  : in  std_logic;
    AI21  : in  std_logic;
    AI22  : in  std_logic;
    AI23  : in  std_logic;
    AI24  : in  std_logic;

    BI1   : in  std_logic;
    BI2   : in  std_logic;
    BI3   : in  std_logic;
    BI4   : in  std_logic;
    BI5   : in  std_logic;
    BI6   : in  std_logic;
    BI7   : in  std_logic;
    BI8   : in  std_logic;
    BI9   : in  std_logic;
    BI10  : in  std_logic;
    BI11  : in  std_logic;
    BI12  : in  std_logic;
    BI13  : in  std_logic;
    BI14  : in  std_logic;
    BI15  : in  std_logic;
    BI16  : in  std_logic;

    BI17  : in  std_logic;
    BI18  : in  std_logic;
    BI19  : in  std_logic;
    BI20  : in  std_logic;
    BI21  : in  std_logic;
    BI22  : in  std_logic;
    BI23  : in  std_logic;
    BI24  : in  std_logic;

    ACOR  : out std_logic;
    AERR  : out std_logic;
    BCOR  : out std_logic;
    BERR  : out std_logic;

    AO1   : out std_logic;
    AO2   : out std_logic;
    AO3   : out std_logic;
    AO4   : out std_logic;
    AO5   : out std_logic;
    AO6   : out std_logic;
    AO7   : out std_logic;
    AO8   : out std_logic;
    AO9   : out std_logic;
    AO10  : out std_logic;
    AO11  : out std_logic;
    AO12  : out std_logic;
    AO13  : out std_logic;
    AO14  : out std_logic;
    AO15  : out std_logic;
    AO16  : out std_logic;

    AO17  : out std_logic;
    AO18  : out std_logic;
    AO19  : out std_logic;
    AO20  : out std_logic;
    AO21  : out std_logic;
    AO22  : out std_logic;
    AO23  : out std_logic;
    AO24  : out std_logic;

    BO1   : out std_logic;
    BO2   : out std_logic;
    BO3   : out std_logic;
    BO4   : out std_logic;
    BO5   : out std_logic;
    BO6   : out std_logic;
    BO7   : out std_logic;
    BO8   : out std_logic;
    BO9   : out std_logic;
    BO10  : out std_logic;
    BO11  : out std_logic;
    BO12  : out std_logic;
    BO13  : out std_logic;
    BO14  : out std_logic;
    BO15  : out std_logic;
    BO16  : out std_logic;

    BO17  : out std_logic;
    BO18  : out std_logic;
    BO19  : out std_logic;
    BO20  : out std_logic;
    BO21  : out std_logic;
    BO22  : out std_logic;
    BO23  : out std_logic;
    BO24  : out std_logic;

    AA1   : in  std_logic;
    AA2   : in  std_logic;
    AA3   : in  std_logic;
    AA4   : in  std_logic;
    AA5   : in  std_logic;
    AA6   : in  std_logic;

    AA7   : in  std_logic;
    AA8   : in  std_logic;
    AA9   : in  std_logic;
    AA10  : in  std_logic;
    AA11  : in  std_logic;
    AA12  : in  std_logic;
    AA13  : in  std_logic;
    AA14  : in  std_logic;
    AA15  : in  std_logic;
    AA16  : in  std_logic;

    ACS   : in  std_logic;
    AWE   : in  std_logic;
    AR    : in  std_logic;

    BA1   : in  std_logic;
    BA2   : in  std_logic;
    BA3   : in  std_logic;
    BA4   : in  std_logic;
    BA5   : in  std_logic;
    BA6   : in  std_logic;

    BA7   : in  std_logic;
    BA8   : in  std_logic;
    BA9   : in  std_logic;
    BA10  : in  std_logic;
    BA11  : in  std_logic;
    BA12  : in  std_logic;
    BA13  : in  std_logic;
    BA14  : in  std_logic;
    BA15  : in  std_logic;
    BA16  : in  std_logic;

    BCS   : in  std_logic;
    BWE   : in  std_logic;
    BR    : in  std_logic
);
end NX_RAM_U;

architecture NX_RTL of NX_RAM_U is
    attribute NX_TYPE :string;
    attribute NX_TYPE of NX_RTL: architecture is "PHY";

    attribute NX_USE :string;
    attribute NX_USE of NX_RTL: architecture is "NX_RAM_U";
begin
end NX_RTL;

----------------------------------------------------------------------------------------------------

-- =================================================================================================
--   NX_RAM_U_WRAP definition                                                             2017/09/25
-- =================================================================================================

library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;

entity NX_RAM_U_WRAP is
generic (
    std_mode    : string := ""; -- standard mode [FAST_2kx18, SLOW_2kx18, NOECNOECC24, ...] empty for raw
    mcka_edge   : bit := '0';   -- 0: rising edge for port A clock - 1: falling edge
    mckb_edge   : bit := '0';   -- 0: rising edge for port B clock - 1: falling edge
    pcka_edge   : bit := '0';   -- 0: rising edge for pipe A clock - 1: falling edge
    pckb_edge   : bit := '0';   -- 0: rising edge for pipe B clock - 1: falling edge
    mem_ctxt    : string := ""; -- context initialization
    pipe_ia     : bit := '0';   -- 0: no pipe on port A input  - 1: pipe on port A input
    pipe_ib     : bit := '0';   -- 0: no pipe on port B input  - 1: pipe on port A input
    pipe_oa     : bit := '0';   -- 0: no pipe on port A output - 1: pipe on port B output
    pipe_ob     : bit := '0';   -- 0: no pipe on port B output - 1: pipe on port B output
    raw_config0 : bit_vector( 3 downto 0) := B"0000";			-- PRC
    raw_config1 : bit_vector(15 downto 0) := B"0000000000000000"	-- MOD
);
port (
    ACK  : in  std_logic;
    BCK  : in  std_logic;

    AI   : in  std_logic_vector(23 downto 0);
    BI   : in  std_logic_vector(23 downto 0);

    ACOR : out std_logic;
    AERR : out std_logic;
    BCOR : out std_logic;
    BERR : out std_logic;

    AO   : out std_logic_vector(23 downto 0);
    BO   : out std_logic_vector(23 downto 0);
    AA   : in  std_logic_vector(15 downto 0);

    ACS  : in  std_logic;
    AWE  : in  std_logic;
    AR   : in  std_logic;

    BA   : in  std_logic_vector(15 downto 0);

    BCS  : in  std_logic;
    BWE  : in  std_logic;
    BR   : in  std_logic
);
end NX_RAM_U_WRAP;

architecture NX_RTL of NX_RAM_U_WRAP is
    attribute NX_TYPE :string;
    attribute NX_TYPE of NX_RTL: architecture is "WRAPPER";

component NX_RAM_U
generic (
    std_mode    : string := ""; -- standard mode [FAST_2kx18, SLOW_2kx18, NOECNOECC24, ...] empty for raw
    mcka_edge   : bit := '0';   -- 0: rising edge for port A clock - 1: falling edge
    mckb_edge   : bit := '0';   -- 0: rising edge for port B clock - 1: falling edge
    pcka_edge   : bit := '0';   -- 0: rising edge for pipe A clock - 1: falling edge
    pckb_edge   : bit := '0';   -- 0: rising edge for pipe B clock - 1: falling edge
    mem_ctxt    : string := ""; -- context initialization
    pipe_ia     : bit := '0';   -- 0: no pipe on port A input  - 1: pipe on port A input
    pipe_ib     : bit := '0';   -- 0: no pipe on port B input  - 1: pipe on port A input
    pipe_oa     : bit := '0';   -- 0: no pipe on port A output - 1: pipe on port B output
    pipe_ob     : bit := '0';   -- 0: no pipe on port B output - 1: pipe on port B output
    raw_config0 : bit_vector( 3 downto 0) := B"0000";			-- PRC
    raw_config1 : bit_vector(15 downto 0) := B"0000000000000000"	-- MOD
);
port (
    ACK   : in  std_logic;
    ACKC  : in  std_logic;
    BCK   : in  std_logic;
    BCKC  : in  std_logic;

    AI1   : in  std_logic;
    AI2   : in  std_logic;
    AI3   : in  std_logic;
    AI4   : in  std_logic;
    AI5   : in  std_logic;
    AI6   : in  std_logic;
    AI7   : in  std_logic;
    AI8   : in  std_logic;
    AI9   : in  std_logic;
    AI10  : in  std_logic;
    AI11  : in  std_logic;
    AI12  : in  std_logic;
    AI13  : in  std_logic;
    AI14  : in  std_logic;
    AI15  : in  std_logic;
    AI16  : in  std_logic;

    AI17  : in  std_logic;
    AI18  : in  std_logic;
    AI19  : in  std_logic;
    AI20  : in  std_logic;
    AI21  : in  std_logic;
    AI22  : in  std_logic;
    AI23  : in  std_logic;
    AI24  : in  std_logic;

    BI1   : in  std_logic;
    BI2   : in  std_logic;
    BI3   : in  std_logic;
    BI4   : in  std_logic;
    BI5   : in  std_logic;
    BI6   : in  std_logic;
    BI7   : in  std_logic;
    BI8   : in  std_logic;
    BI9   : in  std_logic;
    BI10  : in  std_logic;
    BI11  : in  std_logic;
    BI12  : in  std_logic;
    BI13  : in  std_logic;
    BI14  : in  std_logic;
    BI15  : in  std_logic;
    BI16  : in  std_logic;

    BI17  : in  std_logic;
    BI18  : in  std_logic;
    BI19  : in  std_logic;
    BI20  : in  std_logic;
    BI21  : in  std_logic;
    BI22  : in  std_logic;
    BI23  : in  std_logic;
    BI24  : in  std_logic;

    ACOR  : out std_logic;
    AERR  : out std_logic;
    BCOR  : out std_logic;
    BERR  : out std_logic;

    AO1   : out std_logic;
    AO2   : out std_logic;
    AO3   : out std_logic;
    AO4   : out std_logic;
    AO5   : out std_logic;
    AO6   : out std_logic;
    AO7   : out std_logic;
    AO8   : out std_logic;
    AO9   : out std_logic;
    AO10  : out std_logic;
    AO11  : out std_logic;
    AO12  : out std_logic;
    AO13  : out std_logic;
    AO14  : out std_logic;
    AO15  : out std_logic;
    AO16  : out std_logic;

    AO17  : out std_logic;
    AO18  : out std_logic;
    AO19  : out std_logic;
    AO20  : out std_logic;
    AO21  : out std_logic;
    AO22  : out std_logic;
    AO23  : out std_logic;
    AO24  : out std_logic;

    BO1   : out std_logic;
    BO2   : out std_logic;
    BO3   : out std_logic;
    BO4   : out std_logic;
    BO5   : out std_logic;
    BO6   : out std_logic;
    BO7   : out std_logic;
    BO8   : out std_logic;
    BO9   : out std_logic;
    BO10  : out std_logic;
    BO11  : out std_logic;
    BO12  : out std_logic;
    BO13  : out std_logic;
    BO14  : out std_logic;
    BO15  : out std_logic;
    BO16  : out std_logic;

    BO17  : out std_logic;
    BO18  : out std_logic;
    BO19  : out std_logic;
    BO20  : out std_logic;
    BO21  : out std_logic;
    BO22  : out std_logic;
    BO23  : out std_logic;
    BO24  : out std_logic;

    AA1   : in  std_logic;
    AA2   : in  std_logic;
    AA3   : in  std_logic;
    AA4   : in  std_logic;
    AA5   : in  std_logic;
    AA6   : in  std_logic;

    AA7   : in  std_logic;
    AA8   : in  std_logic;
    AA9   : in  std_logic;
    AA10  : in  std_logic;
    AA11  : in  std_logic;
    AA12  : in  std_logic;
    AA13  : in  std_logic;
    AA14  : in  std_logic;
    AA15  : in  std_logic;
    AA16  : in  std_logic;

    ACS   : in  std_logic;
    AWE   : in  std_logic;
    AR    : in  std_logic;

    BA1   : in  std_logic;
    BA2   : in  std_logic;
    BA3   : in  std_logic;
    BA4   : in  std_logic;
    BA5   : in  std_logic;
    BA6   : in  std_logic;

    BA7   : in  std_logic;
    BA8   : in  std_logic;
    BA9   : in  std_logic;
    BA10  : in  std_logic;
    BA11  : in  std_logic;
    BA12  : in  std_logic;
    BA13  : in  std_logic;
    BA14  : in  std_logic;
    BA15  : in  std_logic;
    BA16  : in  std_logic;

    BCS   : in  std_logic;
    BWE   : in  std_logic;
    BR    : in  std_logic
);
end component;

begin

ram: NX_RAM_U generic map (
    std_mode    => std_mode,
    mcka_edge   => mcka_edge,
    mckb_edge   => mckb_edge,
    pcka_edge   => pcka_edge,
    pckb_edge   => pckb_edge,
    mem_ctxt    => mem_ctxt,
    pipe_ia     => pipe_ia,
    pipe_ib     => pipe_ib,
    pipe_oa     => pipe_oa,
    pipe_ob     => pipe_ob,
    raw_config0 => raw_config0,
    raw_config1 => raw_config1)
port map(
    ACK   => ACK,
    ACKC  => ACK,
    BCK   => BCK,
    BCKC  => BCK,

    AI1   => AI(0),
    AI2   => AI(1),
    AI3   => AI(2),
    AI4   => AI(3),
    AI5   => AI(4),
    AI6   => AI(5),
    AI7   => AI(6),
    AI8   => AI(7),
    AI9   => AI(8),
    AI10  => AI(9),
    AI11  => AI(10),
    AI12  => AI(11),
    AI13  => AI(12),
    AI14  => AI(13),
    AI15  => AI(14),
    AI16  => AI(15),

    AI17  => AI(16),
    AI18  => AI(17),
    AI19  => AI(18),
    AI20  => AI(19),
    AI21  => AI(20),
    AI22  => AI(21),
    AI23  => AI(22),
    AI24  => AI(23),

    BI1   => BI(0),
    BI2   => BI(1),
    BI3   => BI(2),
    BI4   => BI(3),
    BI5   => BI(4),
    BI6   => BI(5),
    BI7   => BI(6),
    BI8   => BI(7),
    BI9   => BI(8),
    BI10  => BI(9),
    BI11  => BI(10),
    BI12  => BI(11),
    BI13  => BI(12),
    BI14  => BI(13),
    BI15  => BI(14),
    BI16  => BI(15),

    BI17  => BI(16),
    BI18  => BI(17),
    BI19  => BI(18),
    BI20  => BI(19),
    BI21  => BI(20),
    BI22  => BI(21),
    BI23  => BI(22),
    BI24  => BI(23),

    ACOR  => ACOR,
    AERR  => AERR,
    BCOR  => BCOR,
    BERR  => BERR,

    AO1   => AO(0),
    AO2   => AO(1),
    AO3   => AO(2),
    AO4   => AO(3),
    AO5   => AO(4),
    AO6   => AO(5),
    AO7   => AO(6),
    AO8   => AO(7),
    AO9   => AO(8),
    AO10  => AO(9),
    AO11  => AO(10),
    AO12  => AO(11),
    AO13  => AO(12),
    AO14  => AO(13),
    AO15  => AO(14),
    AO16  => AO(15),

    AO17  => AO(16),
    AO18  => AO(17),
    AO19  => AO(18),
    AO20  => AO(19),
    AO21  => AO(20),
    AO22  => AO(21),
    AO23  => AO(22),
    AO24  => AO(23),

    BO1   => BO(0),
    BO2   => BO(1),
    BO3   => BO(2),
    BO4   => BO(3),
    BO5   => BO(4),
    BO6   => BO(5),
    BO7   => BO(6),
    BO8   => BO(7),
    BO9   => BO(8),
    BO10  => BO(9),
    BO11  => BO(10),
    BO12  => BO(11),
    BO13  => BO(12),
    BO14  => BO(13),
    BO15  => BO(14),
    BO16  => BO(15),

    BO17  => BO(16),
    BO18  => BO(17),
    BO19  => BO(18),
    BO20  => BO(19),
    BO21  => BO(20),
    BO22  => BO(21),
    BO23  => BO(22),
    BO24  => BO(23),

    AA1   => AA(0),
    AA2   => AA(1),
    AA3   => AA(2),
    AA4   => AA(3),
    AA5   => AA(4),
    AA6   => AA(5),

    AA7   => AA(6),
    AA8   => AA(7),
    AA9   => AA(8),
    AA10  => AA(9),
    AA11  => AA(10),
    AA12  => AA(11),
    AA13  => AA(12),
    AA14  => AA(13),
    AA15  => AA(14),
    AA16  => AA(15),

    ACS   => ACS,
    AWE   => AWE,
    AR    => AR,

    BA1   => BA(0),
    BA2   => BA(1),
    BA3   => BA(2),
    BA4   => BA(3),
    BA5   => BA(4),
    BA6   => BA(5),

    BA7   => BA(6),
    BA8   => BA(7),
    BA9   => BA(8),
    BA10  => BA(9),
    BA11  => BA(10),
    BA12  => BA(11),
    BA13  => BA(12),
    BA14  => BA(13),
    BA15  => BA(14),
    BA16  => BA(15),

    BCS   => BCS,
    BWE   => BWE,
    BR    => BR);

end NX_RTL;

----------------------------------------------------------------------------------------------------
library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;
use ieee.std_logic_unsigned.all;

entity NX_ECC is
    port(
	CKD : in std_logic;
	CHK : in std_logic;
	COR : out std_logic;
	ERR : out std_logic
    );
end NX_ECC;

architecture NX_RTL of NX_ECC is
    attribute NX_TYPE :string;
    attribute NX_TYPE of NX_RTL: architecture is "PHY";

    attribute NX_USE :string;
    attribute NX_USE of NX_RTL: architecture is "NX_ECC";
begin
end NX_RTL;

----------------------------------------------------------------------------------------------------

`protect begin_protected
`protect version = 1
`protect encrypt_agent = "NanoXplore"
`protect key_keyowner = "Mentor Graphics Corporation", key_keyname = "MGC-VERIF-SIM-RSA-2", key_method = "rsa"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 256)
`protect key_block
F5rmTLY4ikhTBi+K7S4jSKpTMO44ILknZ7v0B5HJMiKouvn+bZeK5QoS0movcVTM
l0GQyCd6mzcLhVW1q5In0v3GBKIQBN1xf5LBMVWNaHWCc0+psfJ5nI900qrXkyrg
2UMgQug85wJCYV+tWK1jTA0am+vrPz7NqG+nRCJMtBcca11oAoD0TZBE/oQG1AT/
YK/ZD5F4Yb3sDzDJHAs/oY6pMD7Gwl0MkXtuYQxI9Nes+U19fr5Rr2NZhRdPFtFS
PxJ+r3uZUQI73QMsHChJR26lzb+2KtCcsqafZSz8sw1+KRSUXrhYvnX+d0tkVIc7
2MEGWPfV6TApGuKRSBsR8w==
`protect data_method = "aes256-cbc"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 113600)
`protect data_block
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
`protect end_protected

-- beware following components are only intended for internal use. Do not try to instantiate them.

-- =================================================================================================
--   NX_BUFFER definition                                                               2017/09/11
-- =================================================================================================

-- NX_BUFFER#{{{#
----------------------------------------------------------------------------------------------------
library ieee;
use ieee.std_logic_1164.all;

entity NX_BUFFER is
port (
    I : in  std_logic;
    O : out std_logic
);
end NX_BUFFER;

`protect begin_protected
`protect version = 1
`protect encrypt_agent = "NanoXplore"
`protect key_keyowner = "Mentor Graphics Corporation", key_keyname = "MGC-VERIF-SIM-RSA-2", key_method = "rsa"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 256)
`protect key_block
qhr3QKNzPFcJonKUjmt/7VAhDTxySBTWSa1q96S5fCrEqCz23b2q+Av+bT6c9alv
UGQHRxfd+rsjUHOLS4gfn9o3bk6gLS67DRL3SAdbliLUdvcNDabIpgQrPzNqBdVq
rfVoekUrGI7CswzNHsJcEU4pWJtUa0BWvnjG8RtYRxALziwuvy9ybFkmBnHeCllr
PLcrzFnX2I5AU0iMEszjVaM7NohRqPdN2ZBpxYb7mx9OxPHS+F8l1rgHrIVH9Sxl
XLVqygDRpAzqMSdhwnwj7925MqNwgBUdzSZC2PmxhyB4YZ+S+Fs7+IFjLeBicT1i
1klpGf/NE4M/Vu8YbKHRdg==
`protect data_method = "aes256-cbc"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 240)
`protect data_block
Zv7uFzVjRZZv/ITH5PKKyivH+zXbpRskEG7I8YRcLT/22EICD/m2beJq4NyspFto
q45SKPbfsa5qvcUwp0rOnrP/5hvDWOOJmvGsLbDHLaboOu/5I0eCTU/LESqnCEYa
Yt3W38Z08wIEIuxsj79nMkz3aD4uDyRVymStUfu8Y4bzmwteLOqPM/OJ0Q8nwJtd
NuXe+5oWs8NH5Hci2Q2hiC2GqZ6HjNOF8i2wXDAiOG+Ki/b1+KDOvplSscZbwE+C
51ElvZ4OPDZqo4j7qGUNG80iVu6UO/Q5TX7V/YyXKY9U6FMjtzBX+w6JrZ3qJ7R0
`protect end_protected

-- #}}}#

-- =================================================================================================
--   NX_CSC definition                                                                  2017/09/26
-- =================================================================================================

-- NX_CSC#{{{#
----------------------------------------------------------------------------------------------------
library ieee;
use ieee.std_logic_1164.all;

entity NX_CSC is
port (
    I  : in  std_logic;
    O  : out std_logic
);
end NX_CSC;

`protect begin_protected
`protect version = 1
`protect encrypt_agent = "NanoXplore"
`protect key_keyowner = "Mentor Graphics Corporation", key_keyname = "MGC-VERIF-SIM-RSA-2", key_method = "rsa"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 256)
`protect key_block
NogT1gYlBsbv4BAwqEN+tWJ7BtElVGIYebR86wNDnQ+2ptebxVKwi5Lnx0gecBbd
8cimP8juHBordLe9/aST0OXzpBE1pL2NnLtR7rMOEL7yb3ALs28INueWtjjlGJS8
g5ULopdY25Ac+q2NZ9nZKIT7MuGUIXpnesDLNVc7NMrz0qsZeG8jyk+fLhx5KrmQ
UiK7kC/PBt6iM9HQCqR/WqLrXezCpWarSCA00SDWUJMNwpNsotSyL9fi+2WrPRao
QMoFOf68Hjkic9EpXNNI1KKyXViX8h3o5v9J1zHawqnUvxyJQQFYq6gNlTJMCqaT
n30Zp+WdKMg+ZlcC2XFSmw==
`protect data_method = "aes256-cbc"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 240)
`protect data_block
o//NIbh9iuD5KnYcdPk0Fr1jytV2T9wgEKsJXh/R7quTYUNGAcAaN+BsUUawRECF
NNGWi8/9EHwMp45itj25VkRgoQ6Z72uS7eOlIRtIb3Roo8vAiSOApUqkU6RplDEJ
/LRyk39nE3A1O3oWtkMm8rfpia/redK3PEEPlY8KuKp87WHHR5suWNYpHll27dgv
GQIGVkGOGrOKa52EY2OfGq+JfRY7RpXmztbQj4pqhtZOUDj0eUzSDO7NIbK4V418
HzYLH8LphAD3Wf9/4OHmSLo54dbVJ1c5m2sYpiY1TJqHVOAOPuFVhQPh4XqLByi/
`protect end_protected

-- #}}}#

-- =================================================================================================
--   NX_SCC definition                                                                  2017/09/26
-- =================================================================================================

-- NX_SCC#{{{#
----------------------------------------------------------------------------------------------------
library ieee;
use ieee.std_logic_1164.all;

entity NX_SCC is
port (
    I : in  std_logic;
    O : out std_logic
);
end NX_SCC;

`protect begin_protected
`protect version = 1
`protect encrypt_agent = "NanoXplore"
`protect key_keyowner = "Mentor Graphics Corporation", key_keyname = "MGC-VERIF-SIM-RSA-2", key_method = "rsa"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 256)
`protect key_block
Oq4x52xPvwoRu9IWGzKkVIKm9F0KAQkSr1rSae7jOLVpKKMYPTUf9qS/h2/ToX9W
bZ26NJbGQaSiDob1RqstgidLNS67fspKJZVKxf6TkguPdYUmdEo0gdGYH83qSEyh
rEPgEVNDSUs725bPEqcr8Mknd4AXgIX4tdkTCVfdqGOMOarAAZhgcG4X7dt0GKSq
cb5vqBCb5351rSYPPtK58i4nUpxFnetxHJ+35Nh+WIiMEwQqdTNEtdNU/qfihWoE
SIF7RjHzNljQIP8pjEbJnnCTBWs7CXTS7r46elvgvpVCeLYZJiR2ySCsQ1Ip+MrB
vtrlwDh20ibhhTMkhKgftw==
`protect data_method = "aes256-cbc"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 240)
`protect data_block
MZ8cjxzrimFpU9o7k96WUBbMEaEVSebL2XHh5N/Su/pjsM73/buXpnFkRdudQsey
Mgt/2NriBkZopfnPQPAZZs3m7DNRO1F+B4fQY1PBKkkGuhYG1DpSQX8MFwY8cMqU
Jv9Om9xjABhxJ4NVzsFH1A0h1BzQ3HHlt5p4zX67NTXJrM1BzzLG4t5t0rR+nyMg
nahYYXZVdCwgVeSkfnEb+HVgDV8VcdkVF6QXnJIoNGesnkcavzKM1ab4mItTdQHO
kF4gOWfTm0dr2l3Mt4I4vB1aDjvsQd5IKUuDgsJ7JpFxhNj8eKWLs9ahyoKrxan1
`protect end_protected

-- #}}}#

-- =================================================================================================
--   NX_syn_tp definition                                                               2017/09/11
-- =================================================================================================

-- NX_syn_tp#{{{#
----------------------------------------------------------------------------------------------------
library ieee;
use ieee.std_logic_1164.all;

entity NX_syn_tp is
port (
    I : in  std_logic
);
end NX_syn_tp;

architecture NX_RTL of NX_syn_tp is
    attribute NX_TYPE :string;
    attribute NX_TYPE of NX_RTL: architecture is "PHY";

    attribute NX_USE :string;
    attribute NX_USE of NX_RTL: architecture is "NX_syn_tp";
begin
end NX_RTL;

`protect begin_protected
`protect version = 1
`protect encrypt_agent = "NanoXplore"
`protect key_keyowner = "Mentor Graphics Corporation", key_keyname = "MGC-VERIF-SIM-RSA-2", key_method = "rsa"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 256)
`protect key_block
gzVEpV2YmRVSp+29xNSd9h2qHzUatP1ICh4ksjxG4+QqPqCY62ipCBL4aHp43dzc
SDwose9h1ghZyzOsqZ9nKcxIJ9vYhwu1i/1V9LlvzIeD0VBe09WrY1wkMJEUKGR7
BsXYaVhn02kMKo67WsBoqdmpQNDxkOmw/j5GjFu+6OI4kfRsflsmYeO643XBsE2l
32hQ2BneffLxFmDDqSO7OvLfiBZjxZKk6mmGUbj8VlhWgTc4AYj3jE2AAE1/Q2FK
fZ+NECf1CLGywKhR4uFToAYr4846izwSrC//bZo7qmtJPc9/yRTO3BY3vAa/53Nl
V8tEOYVhLrp4fwE6Zn8HjQ==
`protect data_method = "aes256-cbc"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 208)
`protect data_block
sbeHN3wQp5ohtUGD93ZO3Isfe3iwGOGQEiikqkrr2qWvddShcFGxpgAW5BNxdz5R
A8iCcPqphHmbduM2b6PMCgSj+yjYXcXTGu8MdypukExLVMgM650rIXj+zoeYMhKu
UvnQcPux31lSUydRd+teh8MOwTWBWkPBac3eNhIoGdqrc7OYjIuZ/5fjFySIO3Tu
PnnsRtmG+kHzrwqbKk6OCGHOzcjf6M5OAe/lwwpo5noXccqW/EniF9GdI/j0Gg4L
LLFAEakp6VbbXB9SP8sOOg==
`protect end_protected

-- #}}}#

-- =================================================================================================
--   NX_RB definition                                                                   2020/04/08
-- =================================================================================================

library ieee;
use ieee.std_logic_1164.all;

entity NX_RB is
generic (
    -- input : EI to FO
    inputClk    : bit_vector( 1 downto 0) := B"00"; -- 00 = CK1, 01 = CK2, 10 = CK3 and 11 = CK4
    inputBypass : bit_vector(23 downto 0) := B"000000000000000000000000"; -- 1 bypass active, LSB is bypass registers 1 to 8 ... MSB is bypass registers 184 to 192
    -- output : FI to EO
    outputClk   : bit_vector( 1 downto 0) := B"00"; -- 00 = CK1, 01 = CK2, 10 = CK3 and 11 = CK4
    outputBypass: bit_vector(23 downto 0) := B"000000000000000000000000"  -- 1 bypass active, LSB is bypass registers 1 to 8 ... MSB is bypass registers 184 to 192
);
port (
    CK1   : in  std_logic;
    CK2   : in  std_logic;
    CK3   : in  std_logic;
    CK4   : in  std_logic;
    EI1   : in  std_logic;
    EI2   : in  std_logic;
    EI3   : in  std_logic;
    EI4   : in  std_logic;
    EI5   : in  std_logic;
    EI6   : in  std_logic;
    EI7   : in  std_logic;
    EI8   : in  std_logic;
    EI9   : in  std_logic;
    EI10  : in  std_logic;
    EI11  : in  std_logic;
    EI12  : in  std_logic;
    EI13  : in  std_logic;
    EI14  : in  std_logic;
    EI15  : in  std_logic;
    EI16  : in  std_logic;
    EI17  : in  std_logic;
    EI18  : in  std_logic;
    EI19  : in  std_logic;
    EI20  : in  std_logic;
    EI21  : in  std_logic;
    EI22  : in  std_logic;
    EI23  : in  std_logic;
    EI24  : in  std_logic;
    EI25  : in  std_logic;
    EI26  : in  std_logic;
    EI27  : in  std_logic;
    EI28  : in  std_logic;
    EI29  : in  std_logic;
    EI30  : in  std_logic;
    EI31  : in  std_logic;
    EI32  : in  std_logic;
    EI33  : in  std_logic;
    EI34  : in  std_logic;
    EI35  : in  std_logic;
    EI36  : in  std_logic;
    EI37  : in  std_logic;
    EI38  : in  std_logic;
    EI39  : in  std_logic;
    EI40  : in  std_logic;
    EI41  : in  std_logic;
    EI42  : in  std_logic;
    EI43  : in  std_logic;
    EI44  : in  std_logic;
    EI45  : in  std_logic;
    EI46  : in  std_logic;
    EI47  : in  std_logic;
    EI48  : in  std_logic;
    EI49  : in  std_logic;
    EI50  : in  std_logic;
    EI51  : in  std_logic;
    EI52  : in  std_logic;
    EI53  : in  std_logic;
    EI54  : in  std_logic;
    EI55  : in  std_logic;
    EI56  : in  std_logic;
    EI57  : in  std_logic;
    EI58  : in  std_logic;
    EI59  : in  std_logic;
    EI60  : in  std_logic;
    EI61  : in  std_logic;
    EI62  : in  std_logic;
    EI63  : in  std_logic;
    EI64  : in  std_logic;
    EI65  : in  std_logic;
    EI66  : in  std_logic;
    EI67  : in  std_logic;
    EI68  : in  std_logic;
    EI69  : in  std_logic;
    EI70  : in  std_logic;
    EI71  : in  std_logic;
    EI72  : in  std_logic;
    EI73  : in  std_logic;
    EI74  : in  std_logic;
    EI75  : in  std_logic;
    EI76  : in  std_logic;
    EI77  : in  std_logic;
    EI78  : in  std_logic;
    EI79  : in  std_logic;
    EI80  : in  std_logic;
    EI81  : in  std_logic;
    EI82  : in  std_logic;
    EI83  : in  std_logic;
    EI84  : in  std_logic;
    EI85  : in  std_logic;
    EI86  : in  std_logic;
    EI87  : in  std_logic;
    EI88  : in  std_logic;
    EI89  : in  std_logic;
    EI90  : in  std_logic;
    EI91  : in  std_logic;
    EI92  : in  std_logic;
    EI93  : in  std_logic;
    EI94  : in  std_logic;
    EI95  : in  std_logic;
    EI96  : in  std_logic;
    EI97  : in  std_logic;
    EI98  : in  std_logic;
    EI99  : in  std_logic;
    EI100 : in  std_logic;
    EI101 : in  std_logic;
    EI102 : in  std_logic;
    EI103 : in  std_logic;
    EI104 : in  std_logic;
    EI105 : in  std_logic;
    EI106 : in  std_logic;
    EI107 : in  std_logic;
    EI108 : in  std_logic;
    EI109 : in  std_logic;
    EI110 : in  std_logic;
    EI111 : in  std_logic;
    EI112 : in  std_logic;
    EI113 : in  std_logic;
    EI114 : in  std_logic;
    EI115 : in  std_logic;
    EI116 : in  std_logic;
    EI117 : in  std_logic;
    EI118 : in  std_logic;
    EI119 : in  std_logic;
    EI120 : in  std_logic;
    EI121 : in  std_logic;
    EI122 : in  std_logic;
    EI123 : in  std_logic;
    EI124 : in  std_logic;
    EI125 : in  std_logic;
    EI126 : in  std_logic;
    EI127 : in  std_logic;
    EI128 : in  std_logic;
    EI129 : in  std_logic;
    EI130 : in  std_logic;
    EI131 : in  std_logic;
    EI132 : in  std_logic;
    EI133 : in  std_logic;
    EI134 : in  std_logic;
    EI135 : in  std_logic;
    EI136 : in  std_logic;
    EI137 : in  std_logic;
    EI138 : in  std_logic;
    EI139 : in  std_logic;
    EI140 : in  std_logic;
    EI141 : in  std_logic;
    EI142 : in  std_logic;
    EI143 : in  std_logic;
    EI144 : in  std_logic;
    EI145 : in  std_logic;
    EI146 : in  std_logic;
    EI147 : in  std_logic;
    EI148 : in  std_logic;
    EI149 : in  std_logic;
    EI150 : in  std_logic;
    EI151 : in  std_logic;
    EI152 : in  std_logic;
    EI153 : in  std_logic;
    EI154 : in  std_logic;
    EI155 : in  std_logic;
    EI156 : in  std_logic;
    EI157 : in  std_logic;
    EI158 : in  std_logic;
    EI159 : in  std_logic;
    EI160 : in  std_logic;
    EI161 : in  std_logic;
    EI162 : in  std_logic;
    EI163 : in  std_logic;
    EI164 : in  std_logic;
    EI165 : in  std_logic;
    EI166 : in  std_logic;
    EI167 : in  std_logic;
    EI168 : in  std_logic;
    EI169 : in  std_logic;
    EI170 : in  std_logic;
    EI171 : in  std_logic;
    EI172 : in  std_logic;
    EI173 : in  std_logic;
    EI174 : in  std_logic;
    EI175 : in  std_logic;
    EI176 : in  std_logic;
    EI177 : in  std_logic;
    EI178 : in  std_logic;
    EI179 : in  std_logic;
    EI180 : in  std_logic;
    EI181 : in  std_logic;
    EI182 : in  std_logic;
    EI183 : in  std_logic;
    EI184 : in  std_logic;
    EI185 : in  std_logic;
    EI186 : in  std_logic;
    EI187 : in  std_logic;
    EI188 : in  std_logic;
    EI189 : in  std_logic;
    EI190 : in  std_logic;
    EI191 : in  std_logic;
    EI192 : in  std_logic;
    EO1   : out std_logic;
    EO2   : out std_logic;
    EO3   : out std_logic;
    EO4   : out std_logic;
    EO5   : out std_logic;
    EO6   : out std_logic;
    EO7   : out std_logic;
    EO8   : out std_logic;
    EO9   : out std_logic;
    EO10  : out std_logic;
    EO11  : out std_logic;
    EO12  : out std_logic;
    EO13  : out std_logic;
    EO14  : out std_logic;
    EO15  : out std_logic;
    EO16  : out std_logic;
    EO17  : out std_logic;
    EO18  : out std_logic;
    EO19  : out std_logic;
    EO20  : out std_logic;
    EO21  : out std_logic;
    EO22  : out std_logic;
    EO23  : out std_logic;
    EO24  : out std_logic;
    EO25  : out std_logic;
    EO26  : out std_logic;
    EO27  : out std_logic;
    EO28  : out std_logic;
    EO29  : out std_logic;
    EO30  : out std_logic;
    EO31  : out std_logic;
    EO32  : out std_logic;
    EO33  : out std_logic;
    EO34  : out std_logic;
    EO35  : out std_logic;
    EO36  : out std_logic;
    EO37  : out std_logic;
    EO38  : out std_logic;
    EO39  : out std_logic;
    EO40  : out std_logic;
    EO41  : out std_logic;
    EO42  : out std_logic;
    EO43  : out std_logic;
    EO44  : out std_logic;
    EO45  : out std_logic;
    EO46  : out std_logic;
    EO47  : out std_logic;
    EO48  : out std_logic;
    EO49  : out std_logic;
    EO50  : out std_logic;
    EO51  : out std_logic;
    EO52  : out std_logic;
    EO53  : out std_logic;
    EO54  : out std_logic;
    EO55  : out std_logic;
    EO56  : out std_logic;
    EO57  : out std_logic;
    EO58  : out std_logic;
    EO59  : out std_logic;
    EO60  : out std_logic;
    EO61  : out std_logic;
    EO62  : out std_logic;
    EO63  : out std_logic;
    EO64  : out std_logic;
    EO65  : out std_logic;
    EO66  : out std_logic;
    EO67  : out std_logic;
    EO68  : out std_logic;
    EO69  : out std_logic;
    EO70  : out std_logic;
    EO71  : out std_logic;
    EO72  : out std_logic;
    EO73  : out std_logic;
    EO74  : out std_logic;
    EO75  : out std_logic;
    EO76  : out std_logic;
    EO77  : out std_logic;
    EO78  : out std_logic;
    EO79  : out std_logic;
    EO80  : out std_logic;
    EO81  : out std_logic;
    EO82  : out std_logic;
    EO83  : out std_logic;
    EO84  : out std_logic;
    EO85  : out std_logic;
    EO86  : out std_logic;
    EO87  : out std_logic;
    EO88  : out std_logic;
    EO89  : out std_logic;
    EO90  : out std_logic;
    EO91  : out std_logic;
    EO92  : out std_logic;
    EO93  : out std_logic;
    EO94  : out std_logic;
    EO95  : out std_logic;
    EO96  : out std_logic;
    EO97  : out std_logic;
    EO98  : out std_logic;
    EO99  : out std_logic;
    EO100 : out std_logic;
    EO101 : out std_logic;
    EO102 : out std_logic;
    EO103 : out std_logic;
    EO104 : out std_logic;
    EO105 : out std_logic;
    EO106 : out std_logic;
    EO107 : out std_logic;
    EO108 : out std_logic;
    EO109 : out std_logic;
    EO110 : out std_logic;
    EO111 : out std_logic;
    EO112 : out std_logic;
    EO113 : out std_logic;
    EO114 : out std_logic;
    EO115 : out std_logic;
    EO116 : out std_logic;
    EO117 : out std_logic;
    EO118 : out std_logic;
    EO119 : out std_logic;
    EO120 : out std_logic;
    EO121 : out std_logic;
    EO122 : out std_logic;
    EO123 : out std_logic;
    EO124 : out std_logic;
    EO125 : out std_logic;
    EO126 : out std_logic;
    EO127 : out std_logic;
    EO128 : out std_logic;
    EO129 : out std_logic;
    EO130 : out std_logic;
    EO131 : out std_logic;
    EO132 : out std_logic;
    EO133 : out std_logic;
    EO134 : out std_logic;
    EO135 : out std_logic;
    EO136 : out std_logic;
    EO137 : out std_logic;
    EO138 : out std_logic;
    EO139 : out std_logic;
    EO140 : out std_logic;
    EO141 : out std_logic;
    EO142 : out std_logic;
    EO143 : out std_logic;
    EO144 : out std_logic;
    EO145 : out std_logic;
    EO146 : out std_logic;
    EO147 : out std_logic;
    EO148 : out std_logic;
    EO149 : out std_logic;
    EO150 : out std_logic;
    EO151 : out std_logic;
    EO152 : out std_logic;
    EO153 : out std_logic;
    EO154 : out std_logic;
    EO155 : out std_logic;
    EO156 : out std_logic;
    EO157 : out std_logic;
    EO158 : out std_logic;
    EO159 : out std_logic;
    EO160 : out std_logic;
    EO161 : out std_logic;
    EO162 : out std_logic;
    EO163 : out std_logic;
    EO164 : out std_logic;
    EO165 : out std_logic;
    EO166 : out std_logic;
    EO167 : out std_logic;
    EO168 : out std_logic;
    EO169 : out std_logic;
    EO170 : out std_logic;
    EO171 : out std_logic;
    EO172 : out std_logic;
    EO173 : out std_logic;
    EO174 : out std_logic;
    EO175 : out std_logic;
    EO176 : out std_logic;
    EO177 : out std_logic;
    EO178 : out std_logic;
    EO179 : out std_logic;
    EO180 : out std_logic;
    EO181 : out std_logic;
    EO182 : out std_logic;
    EO183 : out std_logic;
    EO184 : out std_logic;
    EO185 : out std_logic;
    EO186 : out std_logic;
    EO187 : out std_logic;
    EO188 : out std_logic;
    EO189 : out std_logic;
    EO190 : out std_logic;
    EO191 : out std_logic;
    EO192 : out std_logic;
    FI1   : in  std_logic;
    FI2   : in  std_logic;
    FI3   : in  std_logic;
    FI4   : in  std_logic;
    FI5   : in  std_logic;
    FI6   : in  std_logic;
    FI7   : in  std_logic;
    FI8   : in  std_logic;
    FI9   : in  std_logic;
    FI10  : in  std_logic;
    FI11  : in  std_logic;
    FI12  : in  std_logic;
    FI13  : in  std_logic;
    FI14  : in  std_logic;
    FI15  : in  std_logic;
    FI16  : in  std_logic;
    FI17  : in  std_logic;
    FI18  : in  std_logic;
    FI19  : in  std_logic;
    FI20  : in  std_logic;
    FI21  : in  std_logic;
    FI22  : in  std_logic;
    FI23  : in  std_logic;
    FI24  : in  std_logic;
    FI25  : in  std_logic;
    FI26  : in  std_logic;
    FI27  : in  std_logic;
    FI28  : in  std_logic;
    FI29  : in  std_logic;
    FI30  : in  std_logic;
    FI31  : in  std_logic;
    FI32  : in  std_logic;
    FI33  : in  std_logic;
    FI34  : in  std_logic;
    FI35  : in  std_logic;
    FI36  : in  std_logic;
    FI37  : in  std_logic;
    FI38  : in  std_logic;
    FI39  : in  std_logic;
    FI40  : in  std_logic;
    FI41  : in  std_logic;
    FI42  : in  std_logic;
    FI43  : in  std_logic;
    FI44  : in  std_logic;
    FI45  : in  std_logic;
    FI46  : in  std_logic;
    FI47  : in  std_logic;
    FI48  : in  std_logic;
    FI49  : in  std_logic;
    FI50  : in  std_logic;
    FI51  : in  std_logic;
    FI52  : in  std_logic;
    FI53  : in  std_logic;
    FI54  : in  std_logic;
    FI55  : in  std_logic;
    FI56  : in  std_logic;
    FI57  : in  std_logic;
    FI58  : in  std_logic;
    FI59  : in  std_logic;
    FI60  : in  std_logic;
    FI61  : in  std_logic;
    FI62  : in  std_logic;
    FI63  : in  std_logic;
    FI64  : in  std_logic;
    FI65  : in  std_logic;
    FI66  : in  std_logic;
    FI67  : in  std_logic;
    FI68  : in  std_logic;
    FI69  : in  std_logic;
    FI70  : in  std_logic;
    FI71  : in  std_logic;
    FI72  : in  std_logic;
    FI73  : in  std_logic;
    FI74  : in  std_logic;
    FI75  : in  std_logic;
    FI76  : in  std_logic;
    FI77  : in  std_logic;
    FI78  : in  std_logic;
    FI79  : in  std_logic;
    FI80  : in  std_logic;
    FI81  : in  std_logic;
    FI82  : in  std_logic;
    FI83  : in  std_logic;
    FI84  : in  std_logic;
    FI85  : in  std_logic;
    FI86  : in  std_logic;
    FI87  : in  std_logic;
    FI88  : in  std_logic;
    FI89  : in  std_logic;
    FI90  : in  std_logic;
    FI91  : in  std_logic;
    FI92  : in  std_logic;
    FI93  : in  std_logic;
    FI94  : in  std_logic;
    FI95  : in  std_logic;
    FI96  : in  std_logic;
    FI97  : in  std_logic;
    FI98  : in  std_logic;
    FI99  : in  std_logic;
    FI100 : in  std_logic;
    FI101 : in  std_logic;
    FI102 : in  std_logic;
    FI103 : in  std_logic;
    FI104 : in  std_logic;
    FI105 : in  std_logic;
    FI106 : in  std_logic;
    FI107 : in  std_logic;
    FI108 : in  std_logic;
    FI109 : in  std_logic;
    FI110 : in  std_logic;
    FI111 : in  std_logic;
    FI112 : in  std_logic;
    FI113 : in  std_logic;
    FI114 : in  std_logic;
    FI115 : in  std_logic;
    FI116 : in  std_logic;
    FI117 : in  std_logic;
    FI118 : in  std_logic;
    FI119 : in  std_logic;
    FI120 : in  std_logic;
    FI121 : in  std_logic;
    FI122 : in  std_logic;
    FI123 : in  std_logic;
    FI124 : in  std_logic;
    FI125 : in  std_logic;
    FI126 : in  std_logic;
    FI127 : in  std_logic;
    FI128 : in  std_logic;
    FI129 : in  std_logic;
    FI130 : in  std_logic;
    FI131 : in  std_logic;
    FI132 : in  std_logic;
    FI133 : in  std_logic;
    FI134 : in  std_logic;
    FI135 : in  std_logic;
    FI136 : in  std_logic;
    FI137 : in  std_logic;
    FI138 : in  std_logic;
    FI139 : in  std_logic;
    FI140 : in  std_logic;
    FI141 : in  std_logic;
    FI142 : in  std_logic;
    FI143 : in  std_logic;
    FI144 : in  std_logic;
    FI145 : in  std_logic;
    FI146 : in  std_logic;
    FI147 : in  std_logic;
    FI148 : in  std_logic;
    FI149 : in  std_logic;
    FI150 : in  std_logic;
    FI151 : in  std_logic;
    FI152 : in  std_logic;
    FI153 : in  std_logic;
    FI154 : in  std_logic;
    FI155 : in  std_logic;
    FI156 : in  std_logic;
    FI157 : in  std_logic;
    FI158 : in  std_logic;
    FI159 : in  std_logic;
    FI160 : in  std_logic;
    FI161 : in  std_logic;
    FI162 : in  std_logic;
    FI163 : in  std_logic;
    FI164 : in  std_logic;
    FI165 : in  std_logic;
    FI166 : in  std_logic;
    FI167 : in  std_logic;
    FI168 : in  std_logic;
    FI169 : in  std_logic;
    FI170 : in  std_logic;
    FI171 : in  std_logic;
    FI172 : in  std_logic;
    FI173 : in  std_logic;
    FI174 : in  std_logic;
    FI175 : in  std_logic;
    FI176 : in  std_logic;
    FI177 : in  std_logic;
    FI178 : in  std_logic;
    FI179 : in  std_logic;
    FI180 : in  std_logic;
    FI181 : in  std_logic;
    FI182 : in  std_logic;
    FI183 : in  std_logic;
    FI184 : in  std_logic;
    FI185 : in  std_logic;
    FI186 : in  std_logic;
    FI187 : in  std_logic;
    FI188 : in  std_logic;
    FI189 : in  std_logic;
    FI190 : in  std_logic;
    FI191 : in  std_logic;
    FI192 : in  std_logic;
    FO1   : out std_logic;
    FO2   : out std_logic;
    FO3   : out std_logic;
    FO4   : out std_logic;
    FO5   : out std_logic;
    FO6   : out std_logic;
    FO7   : out std_logic;
    FO8   : out std_logic;
    FO9   : out std_logic;
    FO10  : out std_logic;
    FO11  : out std_logic;
    FO12  : out std_logic;
    FO13  : out std_logic;
    FO14  : out std_logic;
    FO15  : out std_logic;
    FO16  : out std_logic;
    FO17  : out std_logic;
    FO18  : out std_logic;
    FO19  : out std_logic;
    FO20  : out std_logic;
    FO21  : out std_logic;
    FO22  : out std_logic;
    FO23  : out std_logic;
    FO24  : out std_logic;
    FO25  : out std_logic;
    FO26  : out std_logic;
    FO27  : out std_logic;
    FO28  : out std_logic;
    FO29  : out std_logic;
    FO30  : out std_logic;
    FO31  : out std_logic;
    FO32  : out std_logic;
    FO33  : out std_logic;
    FO34  : out std_logic;
    FO35  : out std_logic;
    FO36  : out std_logic;
    FO37  : out std_logic;
    FO38  : out std_logic;
    FO39  : out std_logic;
    FO40  : out std_logic;
    FO41  : out std_logic;
    FO42  : out std_logic;
    FO43  : out std_logic;
    FO44  : out std_logic;
    FO45  : out std_logic;
    FO46  : out std_logic;
    FO47  : out std_logic;
    FO48  : out std_logic;
    FO49  : out std_logic;
    FO50  : out std_logic;
    FO51  : out std_logic;
    FO52  : out std_logic;
    FO53  : out std_logic;
    FO54  : out std_logic;
    FO55  : out std_logic;
    FO56  : out std_logic;
    FO57  : out std_logic;
    FO58  : out std_logic;
    FO59  : out std_logic;
    FO60  : out std_logic;
    FO61  : out std_logic;
    FO62  : out std_logic;
    FO63  : out std_logic;
    FO64  : out std_logic;
    FO65  : out std_logic;
    FO66  : out std_logic;
    FO67  : out std_logic;
    FO68  : out std_logic;
    FO69  : out std_logic;
    FO70  : out std_logic;
    FO71  : out std_logic;
    FO72  : out std_logic;
    FO73  : out std_logic;
    FO74  : out std_logic;
    FO75  : out std_logic;
    FO76  : out std_logic;
    FO77  : out std_logic;
    FO78  : out std_logic;
    FO79  : out std_logic;
    FO80  : out std_logic;
    FO81  : out std_logic;
    FO82  : out std_logic;
    FO83  : out std_logic;
    FO84  : out std_logic;
    FO85  : out std_logic;
    FO86  : out std_logic;
    FO87  : out std_logic;
    FO88  : out std_logic;
    FO89  : out std_logic;
    FO90  : out std_logic;
    FO91  : out std_logic;
    FO92  : out std_logic;
    FO93  : out std_logic;
    FO94  : out std_logic;
    FO95  : out std_logic;
    FO96  : out std_logic;
    FO97  : out std_logic;
    FO98  : out std_logic;
    FO99  : out std_logic;
    FO100 : out std_logic;
    FO101 : out std_logic;
    FO102 : out std_logic;
    FO103 : out std_logic;
    FO104 : out std_logic;
    FO105 : out std_logic;
    FO106 : out std_logic;
    FO107 : out std_logic;
    FO108 : out std_logic;
    FO109 : out std_logic;
    FO110 : out std_logic;
    FO111 : out std_logic;
    FO112 : out std_logic;
    FO113 : out std_logic;
    FO114 : out std_logic;
    FO115 : out std_logic;
    FO116 : out std_logic;
    FO117 : out std_logic;
    FO118 : out std_logic;
    FO119 : out std_logic;
    FO120 : out std_logic;
    FO121 : out std_logic;
    FO122 : out std_logic;
    FO123 : out std_logic;
    FO124 : out std_logic;
    FO125 : out std_logic;
    FO126 : out std_logic;
    FO127 : out std_logic;
    FO128 : out std_logic;
    FO129 : out std_logic;
    FO130 : out std_logic;
    FO131 : out std_logic;
    FO132 : out std_logic;
    FO133 : out std_logic;
    FO134 : out std_logic;
    FO135 : out std_logic;
    FO136 : out std_logic;
    FO137 : out std_logic;
    FO138 : out std_logic;
    FO139 : out std_logic;
    FO140 : out std_logic;
    FO141 : out std_logic;
    FO142 : out std_logic;
    FO143 : out std_logic;
    FO144 : out std_logic;
    FO145 : out std_logic;
    FO146 : out std_logic;
    FO147 : out std_logic;
    FO148 : out std_logic;
    FO149 : out std_logic;
    FO150 : out std_logic;
    FO151 : out std_logic;
    FO152 : out std_logic;
    FO153 : out std_logic;
    FO154 : out std_logic;
    FO155 : out std_logic;
    FO156 : out std_logic;
    FO157 : out std_logic;
    FO158 : out std_logic;
    FO159 : out std_logic;
    FO160 : out std_logic;
    FO161 : out std_logic;
    FO162 : out std_logic;
    FO163 : out std_logic;
    FO164 : out std_logic;
    FO165 : out std_logic;
    FO166 : out std_logic;
    FO167 : out std_logic;
    FO168 : out std_logic;
    FO169 : out std_logic;
    FO170 : out std_logic;
    FO171 : out std_logic;
    FO172 : out std_logic;
    FO173 : out std_logic;
    FO174 : out std_logic;
    FO175 : out std_logic;
    FO176 : out std_logic;
    FO177 : out std_logic;
    FO178 : out std_logic;
    FO179 : out std_logic;
    FO180 : out std_logic;
    FO181 : out std_logic;
    FO182 : out std_logic;
    FO183 : out std_logic;
    FO184 : out std_logic;
    FO185 : out std_logic;
    FO186 : out std_logic;
    FO187 : out std_logic;
    FO188 : out std_logic;
    FO189 : out std_logic;
    FO190 : out std_logic;
    FO191 : out std_logic;
    FO192 : out std_logic
);
end NX_RB;

architecture NX_RTL of NX_RB is
    attribute NX_TYPE :string;
    attribute NX_TYPE of NX_RTL: architecture is "PHY";

    attribute NX_USE :string;
    attribute NX_USE of NX_RTL: architecture is "NX_RB";
begin
end NX_RTL;

----------------------------------------------------------------------------------------------------

-- =================================================================================================
--   NX_RB_WRAP definition                                                              2017/06/18
-- =================================================================================================

library ieee;
use ieee.std_logic_1164.all;

entity NX_RB_WRAP is
generic (
    -- input : EI to FO
    inputClk    : bit_vector( 1 downto 0) := B"00"; -- 00 = CK[0], 01 = CK[1], 10 = CK[2] and 11 = CK[3]
    inputBypass : bit_vector(23 downto 0) := B"000000000000000000000000"; -- 1 bypass active, LSB is bypass registers 0 to 7 ... MSB is bypass registers 183 to 191
    -- output : FI to EO
    outputClk   : bit_vector( 1 downto 0) := B"00"; -- 00 = CK[0], 01 = CK[1], 10 = CK[2] and 11 = CK[3]
    outputBypass: bit_vector(23 downto 0) := B"000000000000000000000000"  -- 1 bypass active, LSB is bypass registers 1 to 8 ... MSB is bypass registers 184 to 192
);
port (
    CK  : in  std_logic_vector(  3 downto 0);
    EI  : in  std_logic_vector(191 downto 0);
    EO  : out std_logic_vector(191 downto 0);
    FI  : in  std_logic_vector(191 downto 0);
    FO  : out std_logic_vector(191 downto 0)
);
end NX_RB_WRAP;

architecture NX_RTL of NX_RB_WRAP is
    attribute NX_TYPE :string;
    attribute NX_TYPE of NX_RTL: architecture is "WRAPPER";

component NX_RB
generic (
    inputClk    : bit_vector( 1 downto 0) := B"00";
    inputBypass : bit_vector(23 downto 0) := B"000000000000000000000000";
    outputClk   : bit_vector( 1 downto 0) := B"00";
    outputBypass: bit_vector(23 downto 0) := B"000000000000000000000000"
);
port (
    CK1   : in  std_logic;
    CK2   : in  std_logic;
    CK3   : in  std_logic;
    CK4   : in  std_logic;
    EI1   : in  std_logic;
    EI2   : in  std_logic;
    EI3   : in  std_logic;
    EI4   : in  std_logic;
    EI5   : in  std_logic;
    EI6   : in  std_logic;
    EI7   : in  std_logic;
    EI8   : in  std_logic;
    EI9   : in  std_logic;
    EI10  : in  std_logic;
    EI11  : in  std_logic;
    EI12  : in  std_logic;
    EI13  : in  std_logic;
    EI14  : in  std_logic;
    EI15  : in  std_logic;
    EI16  : in  std_logic;
    EI17  : in  std_logic;
    EI18  : in  std_logic;
    EI19  : in  std_logic;
    EI20  : in  std_logic;
    EI21  : in  std_logic;
    EI22  : in  std_logic;
    EI23  : in  std_logic;
    EI24  : in  std_logic;
    EI25  : in  std_logic;
    EI26  : in  std_logic;
    EI27  : in  std_logic;
    EI28  : in  std_logic;
    EI29  : in  std_logic;
    EI30  : in  std_logic;
    EI31  : in  std_logic;
    EI32  : in  std_logic;
    EI33  : in  std_logic;
    EI34  : in  std_logic;
    EI35  : in  std_logic;
    EI36  : in  std_logic;
    EI37  : in  std_logic;
    EI38  : in  std_logic;
    EI39  : in  std_logic;
    EI40  : in  std_logic;
    EI41  : in  std_logic;
    EI42  : in  std_logic;
    EI43  : in  std_logic;
    EI44  : in  std_logic;
    EI45  : in  std_logic;
    EI46  : in  std_logic;
    EI47  : in  std_logic;
    EI48  : in  std_logic;
    EI49  : in  std_logic;
    EI50  : in  std_logic;
    EI51  : in  std_logic;
    EI52  : in  std_logic;
    EI53  : in  std_logic;
    EI54  : in  std_logic;
    EI55  : in  std_logic;
    EI56  : in  std_logic;
    EI57  : in  std_logic;
    EI58  : in  std_logic;
    EI59  : in  std_logic;
    EI60  : in  std_logic;
    EI61  : in  std_logic;
    EI62  : in  std_logic;
    EI63  : in  std_logic;
    EI64  : in  std_logic;
    EI65  : in  std_logic;
    EI66  : in  std_logic;
    EI67  : in  std_logic;
    EI68  : in  std_logic;
    EI69  : in  std_logic;
    EI70  : in  std_logic;
    EI71  : in  std_logic;
    EI72  : in  std_logic;
    EI73  : in  std_logic;
    EI74  : in  std_logic;
    EI75  : in  std_logic;
    EI76  : in  std_logic;
    EI77  : in  std_logic;
    EI78  : in  std_logic;
    EI79  : in  std_logic;
    EI80  : in  std_logic;
    EI81  : in  std_logic;
    EI82  : in  std_logic;
    EI83  : in  std_logic;
    EI84  : in  std_logic;
    EI85  : in  std_logic;
    EI86  : in  std_logic;
    EI87  : in  std_logic;
    EI88  : in  std_logic;
    EI89  : in  std_logic;
    EI90  : in  std_logic;
    EI91  : in  std_logic;
    EI92  : in  std_logic;
    EI93  : in  std_logic;
    EI94  : in  std_logic;
    EI95  : in  std_logic;
    EI96  : in  std_logic;
    EI97  : in  std_logic;
    EI98  : in  std_logic;
    EI99  : in  std_logic;
    EI100 : in  std_logic;
    EI101 : in  std_logic;
    EI102 : in  std_logic;
    EI103 : in  std_logic;
    EI104 : in  std_logic;
    EI105 : in  std_logic;
    EI106 : in  std_logic;
    EI107 : in  std_logic;
    EI108 : in  std_logic;
    EI109 : in  std_logic;
    EI110 : in  std_logic;
    EI111 : in  std_logic;
    EI112 : in  std_logic;
    EI113 : in  std_logic;
    EI114 : in  std_logic;
    EI115 : in  std_logic;
    EI116 : in  std_logic;
    EI117 : in  std_logic;
    EI118 : in  std_logic;
    EI119 : in  std_logic;
    EI120 : in  std_logic;
    EI121 : in  std_logic;
    EI122 : in  std_logic;
    EI123 : in  std_logic;
    EI124 : in  std_logic;
    EI125 : in  std_logic;
    EI126 : in  std_logic;
    EI127 : in  std_logic;
    EI128 : in  std_logic;
    EI129 : in  std_logic;
    EI130 : in  std_logic;
    EI131 : in  std_logic;
    EI132 : in  std_logic;
    EI133 : in  std_logic;
    EI134 : in  std_logic;
    EI135 : in  std_logic;
    EI136 : in  std_logic;
    EI137 : in  std_logic;
    EI138 : in  std_logic;
    EI139 : in  std_logic;
    EI140 : in  std_logic;
    EI141 : in  std_logic;
    EI142 : in  std_logic;
    EI143 : in  std_logic;
    EI144 : in  std_logic;
    EI145 : in  std_logic;
    EI146 : in  std_logic;
    EI147 : in  std_logic;
    EI148 : in  std_logic;
    EI149 : in  std_logic;
    EI150 : in  std_logic;
    EI151 : in  std_logic;
    EI152 : in  std_logic;
    EI153 : in  std_logic;
    EI154 : in  std_logic;
    EI155 : in  std_logic;
    EI156 : in  std_logic;
    EI157 : in  std_logic;
    EI158 : in  std_logic;
    EI159 : in  std_logic;
    EI160 : in  std_logic;
    EI161 : in  std_logic;
    EI162 : in  std_logic;
    EI163 : in  std_logic;
    EI164 : in  std_logic;
    EI165 : in  std_logic;
    EI166 : in  std_logic;
    EI167 : in  std_logic;
    EI168 : in  std_logic;
    EI169 : in  std_logic;
    EI170 : in  std_logic;
    EI171 : in  std_logic;
    EI172 : in  std_logic;
    EI173 : in  std_logic;
    EI174 : in  std_logic;
    EI175 : in  std_logic;
    EI176 : in  std_logic;
    EI177 : in  std_logic;
    EI178 : in  std_logic;
    EI179 : in  std_logic;
    EI180 : in  std_logic;
    EI181 : in  std_logic;
    EI182 : in  std_logic;
    EI183 : in  std_logic;
    EI184 : in  std_logic;
    EI185 : in  std_logic;
    EI186 : in  std_logic;
    EI187 : in  std_logic;
    EI188 : in  std_logic;
    EI189 : in  std_logic;
    EI190 : in  std_logic;
    EI191 : in  std_logic;
    EI192 : in  std_logic;
    EO1   : out std_logic;
    EO2   : out std_logic;
    EO3   : out std_logic;
    EO4   : out std_logic;
    EO5   : out std_logic;
    EO6   : out std_logic;
    EO7   : out std_logic;
    EO8   : out std_logic;
    EO9   : out std_logic;
    EO10  : out std_logic;
    EO11  : out std_logic;
    EO12  : out std_logic;
    EO13  : out std_logic;
    EO14  : out std_logic;
    EO15  : out std_logic;
    EO16  : out std_logic;
    EO17  : out std_logic;
    EO18  : out std_logic;
    EO19  : out std_logic;
    EO20  : out std_logic;
    EO21  : out std_logic;
    EO22  : out std_logic;
    EO23  : out std_logic;
    EO24  : out std_logic;
    EO25  : out std_logic;
    EO26  : out std_logic;
    EO27  : out std_logic;
    EO28  : out std_logic;
    EO29  : out std_logic;
    EO30  : out std_logic;
    EO31  : out std_logic;
    EO32  : out std_logic;
    EO33  : out std_logic;
    EO34  : out std_logic;
    EO35  : out std_logic;
    EO36  : out std_logic;
    EO37  : out std_logic;
    EO38  : out std_logic;
    EO39  : out std_logic;
    EO40  : out std_logic;
    EO41  : out std_logic;
    EO42  : out std_logic;
    EO43  : out std_logic;
    EO44  : out std_logic;
    EO45  : out std_logic;
    EO46  : out std_logic;
    EO47  : out std_logic;
    EO48  : out std_logic;
    EO49  : out std_logic;
    EO50  : out std_logic;
    EO51  : out std_logic;
    EO52  : out std_logic;
    EO53  : out std_logic;
    EO54  : out std_logic;
    EO55  : out std_logic;
    EO56  : out std_logic;
    EO57  : out std_logic;
    EO58  : out std_logic;
    EO59  : out std_logic;
    EO60  : out std_logic;
    EO61  : out std_logic;
    EO62  : out std_logic;
    EO63  : out std_logic;
    EO64  : out std_logic;
    EO65  : out std_logic;
    EO66  : out std_logic;
    EO67  : out std_logic;
    EO68  : out std_logic;
    EO69  : out std_logic;
    EO70  : out std_logic;
    EO71  : out std_logic;
    EO72  : out std_logic;
    EO73  : out std_logic;
    EO74  : out std_logic;
    EO75  : out std_logic;
    EO76  : out std_logic;
    EO77  : out std_logic;
    EO78  : out std_logic;
    EO79  : out std_logic;
    EO80  : out std_logic;
    EO81  : out std_logic;
    EO82  : out std_logic;
    EO83  : out std_logic;
    EO84  : out std_logic;
    EO85  : out std_logic;
    EO86  : out std_logic;
    EO87  : out std_logic;
    EO88  : out std_logic;
    EO89  : out std_logic;
    EO90  : out std_logic;
    EO91  : out std_logic;
    EO92  : out std_logic;
    EO93  : out std_logic;
    EO94  : out std_logic;
    EO95  : out std_logic;
    EO96  : out std_logic;
    EO97  : out std_logic;
    EO98  : out std_logic;
    EO99  : out std_logic;
    EO100 : out std_logic;
    EO101 : out std_logic;
    EO102 : out std_logic;
    EO103 : out std_logic;
    EO104 : out std_logic;
    EO105 : out std_logic;
    EO106 : out std_logic;
    EO107 : out std_logic;
    EO108 : out std_logic;
    EO109 : out std_logic;
    EO110 : out std_logic;
    EO111 : out std_logic;
    EO112 : out std_logic;
    EO113 : out std_logic;
    EO114 : out std_logic;
    EO115 : out std_logic;
    EO116 : out std_logic;
    EO117 : out std_logic;
    EO118 : out std_logic;
    EO119 : out std_logic;
    EO120 : out std_logic;
    EO121 : out std_logic;
    EO122 : out std_logic;
    EO123 : out std_logic;
    EO124 : out std_logic;
    EO125 : out std_logic;
    EO126 : out std_logic;
    EO127 : out std_logic;
    EO128 : out std_logic;
    EO129 : out std_logic;
    EO130 : out std_logic;
    EO131 : out std_logic;
    EO132 : out std_logic;
    EO133 : out std_logic;
    EO134 : out std_logic;
    EO135 : out std_logic;
    EO136 : out std_logic;
    EO137 : out std_logic;
    EO138 : out std_logic;
    EO139 : out std_logic;
    EO140 : out std_logic;
    EO141 : out std_logic;
    EO142 : out std_logic;
    EO143 : out std_logic;
    EO144 : out std_logic;
    EO145 : out std_logic;
    EO146 : out std_logic;
    EO147 : out std_logic;
    EO148 : out std_logic;
    EO149 : out std_logic;
    EO150 : out std_logic;
    EO151 : out std_logic;
    EO152 : out std_logic;
    EO153 : out std_logic;
    EO154 : out std_logic;
    EO155 : out std_logic;
    EO156 : out std_logic;
    EO157 : out std_logic;
    EO158 : out std_logic;
    EO159 : out std_logic;
    EO160 : out std_logic;
    EO161 : out std_logic;
    EO162 : out std_logic;
    EO163 : out std_logic;
    EO164 : out std_logic;
    EO165 : out std_logic;
    EO166 : out std_logic;
    EO167 : out std_logic;
    EO168 : out std_logic;
    EO169 : out std_logic;
    EO170 : out std_logic;
    EO171 : out std_logic;
    EO172 : out std_logic;
    EO173 : out std_logic;
    EO174 : out std_logic;
    EO175 : out std_logic;
    EO176 : out std_logic;
    EO177 : out std_logic;
    EO178 : out std_logic;
    EO179 : out std_logic;
    EO180 : out std_logic;
    EO181 : out std_logic;
    EO182 : out std_logic;
    EO183 : out std_logic;
    EO184 : out std_logic;
    EO185 : out std_logic;
    EO186 : out std_logic;
    EO187 : out std_logic;
    EO188 : out std_logic;
    EO189 : out std_logic;
    EO190 : out std_logic;
    EO191 : out std_logic;
    EO192 : out std_logic;
    FI1   : in  std_logic;
    FI2   : in  std_logic;
    FI3   : in  std_logic;
    FI4   : in  std_logic;
    FI5   : in  std_logic;
    FI6   : in  std_logic;
    FI7   : in  std_logic;
    FI8   : in  std_logic;
    FI9   : in  std_logic;
    FI10  : in  std_logic;
    FI11  : in  std_logic;
    FI12  : in  std_logic;
    FI13  : in  std_logic;
    FI14  : in  std_logic;
    FI15  : in  std_logic;
    FI16  : in  std_logic;
    FI17  : in  std_logic;
    FI18  : in  std_logic;
    FI19  : in  std_logic;
    FI20  : in  std_logic;
    FI21  : in  std_logic;
    FI22  : in  std_logic;
    FI23  : in  std_logic;
    FI24  : in  std_logic;
    FI25  : in  std_logic;
    FI26  : in  std_logic;
    FI27  : in  std_logic;
    FI28  : in  std_logic;
    FI29  : in  std_logic;
    FI30  : in  std_logic;
    FI31  : in  std_logic;
    FI32  : in  std_logic;
    FI33  : in  std_logic;
    FI34  : in  std_logic;
    FI35  : in  std_logic;
    FI36  : in  std_logic;
    FI37  : in  std_logic;
    FI38  : in  std_logic;
    FI39  : in  std_logic;
    FI40  : in  std_logic;
    FI41  : in  std_logic;
    FI42  : in  std_logic;
    FI43  : in  std_logic;
    FI44  : in  std_logic;
    FI45  : in  std_logic;
    FI46  : in  std_logic;
    FI47  : in  std_logic;
    FI48  : in  std_logic;
    FI49  : in  std_logic;
    FI50  : in  std_logic;
    FI51  : in  std_logic;
    FI52  : in  std_logic;
    FI53  : in  std_logic;
    FI54  : in  std_logic;
    FI55  : in  std_logic;
    FI56  : in  std_logic;
    FI57  : in  std_logic;
    FI58  : in  std_logic;
    FI59  : in  std_logic;
    FI60  : in  std_logic;
    FI61  : in  std_logic;
    FI62  : in  std_logic;
    FI63  : in  std_logic;
    FI64  : in  std_logic;
    FI65  : in  std_logic;
    FI66  : in  std_logic;
    FI67  : in  std_logic;
    FI68  : in  std_logic;
    FI69  : in  std_logic;
    FI70  : in  std_logic;
    FI71  : in  std_logic;
    FI72  : in  std_logic;
    FI73  : in  std_logic;
    FI74  : in  std_logic;
    FI75  : in  std_logic;
    FI76  : in  std_logic;
    FI77  : in  std_logic;
    FI78  : in  std_logic;
    FI79  : in  std_logic;
    FI80  : in  std_logic;
    FI81  : in  std_logic;
    FI82  : in  std_logic;
    FI83  : in  std_logic;
    FI84  : in  std_logic;
    FI85  : in  std_logic;
    FI86  : in  std_logic;
    FI87  : in  std_logic;
    FI88  : in  std_logic;
    FI89  : in  std_logic;
    FI90  : in  std_logic;
    FI91  : in  std_logic;
    FI92  : in  std_logic;
    FI93  : in  std_logic;
    FI94  : in  std_logic;
    FI95  : in  std_logic;
    FI96  : in  std_logic;
    FI97  : in  std_logic;
    FI98  : in  std_logic;
    FI99  : in  std_logic;
    FI100 : in  std_logic;
    FI101 : in  std_logic;
    FI102 : in  std_logic;
    FI103 : in  std_logic;
    FI104 : in  std_logic;
    FI105 : in  std_logic;
    FI106 : in  std_logic;
    FI107 : in  std_logic;
    FI108 : in  std_logic;
    FI109 : in  std_logic;
    FI110 : in  std_logic;
    FI111 : in  std_logic;
    FI112 : in  std_logic;
    FI113 : in  std_logic;
    FI114 : in  std_logic;
    FI115 : in  std_logic;
    FI116 : in  std_logic;
    FI117 : in  std_logic;
    FI118 : in  std_logic;
    FI119 : in  std_logic;
    FI120 : in  std_logic;
    FI121 : in  std_logic;
    FI122 : in  std_logic;
    FI123 : in  std_logic;
    FI124 : in  std_logic;
    FI125 : in  std_logic;
    FI126 : in  std_logic;
    FI127 : in  std_logic;
    FI128 : in  std_logic;
    FI129 : in  std_logic;
    FI130 : in  std_logic;
    FI131 : in  std_logic;
    FI132 : in  std_logic;
    FI133 : in  std_logic;
    FI134 : in  std_logic;
    FI135 : in  std_logic;
    FI136 : in  std_logic;
    FI137 : in  std_logic;
    FI138 : in  std_logic;
    FI139 : in  std_logic;
    FI140 : in  std_logic;
    FI141 : in  std_logic;
    FI142 : in  std_logic;
    FI143 : in  std_logic;
    FI144 : in  std_logic;
    FI145 : in  std_logic;
    FI146 : in  std_logic;
    FI147 : in  std_logic;
    FI148 : in  std_logic;
    FI149 : in  std_logic;
    FI150 : in  std_logic;
    FI151 : in  std_logic;
    FI152 : in  std_logic;
    FI153 : in  std_logic;
    FI154 : in  std_logic;
    FI155 : in  std_logic;
    FI156 : in  std_logic;
    FI157 : in  std_logic;
    FI158 : in  std_logic;
    FI159 : in  std_logic;
    FI160 : in  std_logic;
    FI161 : in  std_logic;
    FI162 : in  std_logic;
    FI163 : in  std_logic;
    FI164 : in  std_logic;
    FI165 : in  std_logic;
    FI166 : in  std_logic;
    FI167 : in  std_logic;
    FI168 : in  std_logic;
    FI169 : in  std_logic;
    FI170 : in  std_logic;
    FI171 : in  std_logic;
    FI172 : in  std_logic;
    FI173 : in  std_logic;
    FI174 : in  std_logic;
    FI175 : in  std_logic;
    FI176 : in  std_logic;
    FI177 : in  std_logic;
    FI178 : in  std_logic;
    FI179 : in  std_logic;
    FI180 : in  std_logic;
    FI181 : in  std_logic;
    FI182 : in  std_logic;
    FI183 : in  std_logic;
    FI184 : in  std_logic;
    FI185 : in  std_logic;
    FI186 : in  std_logic;
    FI187 : in  std_logic;
    FI188 : in  std_logic;
    FI189 : in  std_logic;
    FI190 : in  std_logic;
    FI191 : in  std_logic;
    FI192 : in  std_logic;
    FO1   : out std_logic;
    FO2   : out std_logic;
    FO3   : out std_logic;
    FO4   : out std_logic;
    FO5   : out std_logic;
    FO6   : out std_logic;
    FO7   : out std_logic;
    FO8   : out std_logic;
    FO9   : out std_logic;
    FO10  : out std_logic;
    FO11  : out std_logic;
    FO12  : out std_logic;
    FO13  : out std_logic;
    FO14  : out std_logic;
    FO15  : out std_logic;
    FO16  : out std_logic;
    FO17  : out std_logic;
    FO18  : out std_logic;
    FO19  : out std_logic;
    FO20  : out std_logic;
    FO21  : out std_logic;
    FO22  : out std_logic;
    FO23  : out std_logic;
    FO24  : out std_logic;
    FO25  : out std_logic;
    FO26  : out std_logic;
    FO27  : out std_logic;
    FO28  : out std_logic;
    FO29  : out std_logic;
    FO30  : out std_logic;
    FO31  : out std_logic;
    FO32  : out std_logic;
    FO33  : out std_logic;
    FO34  : out std_logic;
    FO35  : out std_logic;
    FO36  : out std_logic;
    FO37  : out std_logic;
    FO38  : out std_logic;
    FO39  : out std_logic;
    FO40  : out std_logic;
    FO41  : out std_logic;
    FO42  : out std_logic;
    FO43  : out std_logic;
    FO44  : out std_logic;
    FO45  : out std_logic;
    FO46  : out std_logic;
    FO47  : out std_logic;
    FO48  : out std_logic;
    FO49  : out std_logic;
    FO50  : out std_logic;
    FO51  : out std_logic;
    FO52  : out std_logic;
    FO53  : out std_logic;
    FO54  : out std_logic;
    FO55  : out std_logic;
    FO56  : out std_logic;
    FO57  : out std_logic;
    FO58  : out std_logic;
    FO59  : out std_logic;
    FO60  : out std_logic;
    FO61  : out std_logic;
    FO62  : out std_logic;
    FO63  : out std_logic;
    FO64  : out std_logic;
    FO65  : out std_logic;
    FO66  : out std_logic;
    FO67  : out std_logic;
    FO68  : out std_logic;
    FO69  : out std_logic;
    FO70  : out std_logic;
    FO71  : out std_logic;
    FO72  : out std_logic;
    FO73  : out std_logic;
    FO74  : out std_logic;
    FO75  : out std_logic;
    FO76  : out std_logic;
    FO77  : out std_logic;
    FO78  : out std_logic;
    FO79  : out std_logic;
    FO80  : out std_logic;
    FO81  : out std_logic;
    FO82  : out std_logic;
    FO83  : out std_logic;
    FO84  : out std_logic;
    FO85  : out std_logic;
    FO86  : out std_logic;
    FO87  : out std_logic;
    FO88  : out std_logic;
    FO89  : out std_logic;
    FO90  : out std_logic;
    FO91  : out std_logic;
    FO92  : out std_logic;
    FO93  : out std_logic;
    FO94  : out std_logic;
    FO95  : out std_logic;
    FO96  : out std_logic;
    FO97  : out std_logic;
    FO98  : out std_logic;
    FO99  : out std_logic;
    FO100 : out std_logic;
    FO101 : out std_logic;
    FO102 : out std_logic;
    FO103 : out std_logic;
    FO104 : out std_logic;
    FO105 : out std_logic;
    FO106 : out std_logic;
    FO107 : out std_logic;
    FO108 : out std_logic;
    FO109 : out std_logic;
    FO110 : out std_logic;
    FO111 : out std_logic;
    FO112 : out std_logic;
    FO113 : out std_logic;
    FO114 : out std_logic;
    FO115 : out std_logic;
    FO116 : out std_logic;
    FO117 : out std_logic;
    FO118 : out std_logic;
    FO119 : out std_logic;
    FO120 : out std_logic;
    FO121 : out std_logic;
    FO122 : out std_logic;
    FO123 : out std_logic;
    FO124 : out std_logic;
    FO125 : out std_logic;
    FO126 : out std_logic;
    FO127 : out std_logic;
    FO128 : out std_logic;
    FO129 : out std_logic;
    FO130 : out std_logic;
    FO131 : out std_logic;
    FO132 : out std_logic;
    FO133 : out std_logic;
    FO134 : out std_logic;
    FO135 : out std_logic;
    FO136 : out std_logic;
    FO137 : out std_logic;
    FO138 : out std_logic;
    FO139 : out std_logic;
    FO140 : out std_logic;
    FO141 : out std_logic;
    FO142 : out std_logic;
    FO143 : out std_logic;
    FO144 : out std_logic;
    FO145 : out std_logic;
    FO146 : out std_logic;
    FO147 : out std_logic;
    FO148 : out std_logic;
    FO149 : out std_logic;
    FO150 : out std_logic;
    FO151 : out std_logic;
    FO152 : out std_logic;
    FO153 : out std_logic;
    FO154 : out std_logic;
    FO155 : out std_logic;
    FO156 : out std_logic;
    FO157 : out std_logic;
    FO158 : out std_logic;
    FO159 : out std_logic;
    FO160 : out std_logic;
    FO161 : out std_logic;
    FO162 : out std_logic;
    FO163 : out std_logic;
    FO164 : out std_logic;
    FO165 : out std_logic;
    FO166 : out std_logic;
    FO167 : out std_logic;
    FO168 : out std_logic;
    FO169 : out std_logic;
    FO170 : out std_logic;
    FO171 : out std_logic;
    FO172 : out std_logic;
    FO173 : out std_logic;
    FO174 : out std_logic;
    FO175 : out std_logic;
    FO176 : out std_logic;
    FO177 : out std_logic;
    FO178 : out std_logic;
    FO179 : out std_logic;
    FO180 : out std_logic;
    FO181 : out std_logic;
    FO182 : out std_logic;
    FO183 : out std_logic;
    FO184 : out std_logic;
    FO185 : out std_logic;
    FO186 : out std_logic;
    FO187 : out std_logic;
    FO188 : out std_logic;
    FO189 : out std_logic;
    FO190 : out std_logic;
    FO191 : out std_logic;
    FO192 : out std_logic
);
end component NX_RB;

begin

rb: NX_RB
generic map (
    inputClk     => inputClk,
    inputBypass  => inputBypass,
    outputClk    => outputClk,
    outputBypass => outputBypass
)
port map (
    CK1   => CK(0),
    CK2   => CK(1),
    CK3   => CK(2),
    CK4   => CK(3),
    EI1   => EI(0),
    EI2   => EI(1),
    EI3   => EI(2),
    EI4   => EI(3),
    EI5   => EI(4),
    EI6   => EI(5),
    EI7   => EI(6),
    EI8   => EI(7),
    EI9   => EI(8),
    EI10  => EI(9),
    EI11  => EI(10),
    EI12  => EI(11),
    EI13  => EI(12),
    EI14  => EI(13),
    EI15  => EI(14),
    EI16  => EI(15),
    EI17  => EI(16),
    EI18  => EI(17),
    EI19  => EI(18),
    EI20  => EI(19),
    EI21  => EI(20),
    EI22  => EI(21),
    EI23  => EI(22),
    EI24  => EI(23),
    EI25  => EI(24),
    EI26  => EI(25),
    EI27  => EI(26),
    EI28  => EI(27),
    EI29  => EI(28),
    EI30  => EI(29),
    EI31  => EI(30),
    EI32  => EI(31),
    EI33  => EI(32),
    EI34  => EI(33),
    EI35  => EI(34),
    EI36  => EI(35),
    EI37  => EI(36),
    EI38  => EI(37),
    EI39  => EI(38),
    EI40  => EI(39),
    EI41  => EI(40),
    EI42  => EI(41),
    EI43  => EI(42),
    EI44  => EI(43),
    EI45  => EI(44),
    EI46  => EI(45),
    EI47  => EI(46),
    EI48  => EI(47),
    EI49  => EI(48),
    EI50  => EI(49),
    EI51  => EI(50),
    EI52  => EI(51),
    EI53  => EI(52),
    EI54  => EI(53),
    EI55  => EI(54),
    EI56  => EI(55),
    EI57  => EI(56),
    EI58  => EI(57),
    EI59  => EI(58),
    EI60  => EI(59),
    EI61  => EI(60),
    EI62  => EI(61),
    EI63  => EI(62),
    EI64  => EI(63),
    EI65  => EI(64),
    EI66  => EI(65),
    EI67  => EI(66),
    EI68  => EI(67),
    EI69  => EI(68),
    EI70  => EI(69),
    EI71  => EI(70),
    EI72  => EI(71),
    EI73  => EI(72),
    EI74  => EI(73),
    EI75  => EI(74),
    EI76  => EI(75),
    EI77  => EI(76),
    EI78  => EI(77),
    EI79  => EI(78),
    EI80  => EI(79),
    EI81  => EI(80),
    EI82  => EI(81),
    EI83  => EI(82),
    EI84  => EI(83),
    EI85  => EI(84),
    EI86  => EI(85),
    EI87  => EI(86),
    EI88  => EI(87),
    EI89  => EI(88),
    EI90  => EI(89),
    EI91  => EI(90),
    EI92  => EI(91),
    EI93  => EI(92),
    EI94  => EI(93),
    EI95  => EI(94),
    EI96  => EI(95),
    EI97  => EI(96),
    EI98  => EI(97),
    EI99  => EI(98),
    EI100 => EI(99),
    EI101 => EI(100),
    EI102 => EI(101),
    EI103 => EI(102),
    EI104 => EI(103),
    EI105 => EI(104),
    EI106 => EI(105),
    EI107 => EI(106),
    EI108 => EI(107),
    EI109 => EI(108),
    EI110 => EI(109),
    EI111 => EI(110),
    EI112 => EI(111),
    EI113 => EI(112),
    EI114 => EI(113),
    EI115 => EI(114),
    EI116 => EI(115),
    EI117 => EI(116),
    EI118 => EI(117),
    EI119 => EI(118),
    EI120 => EI(119),
    EI121 => EI(120),
    EI122 => EI(121),
    EI123 => EI(122),
    EI124 => EI(123),
    EI125 => EI(124),
    EI126 => EI(125),
    EI127 => EI(126),
    EI128 => EI(127),
    EI129 => EI(128),
    EI130 => EI(129),
    EI131 => EI(130),
    EI132 => EI(131),
    EI133 => EI(132),
    EI134 => EI(133),
    EI135 => EI(134),
    EI136 => EI(135),
    EI137 => EI(136),
    EI138 => EI(137),
    EI139 => EI(138),
    EI140 => EI(139),
    EI141 => EI(140),
    EI142 => EI(141),
    EI143 => EI(142),
    EI144 => EI(143),
    EI145 => EI(144),
    EI146 => EI(145),
    EI147 => EI(146),
    EI148 => EI(147),
    EI149 => EI(148),
    EI150 => EI(149),
    EI151 => EI(150),
    EI152 => EI(151),
    EI153 => EI(152),
    EI154 => EI(153),
    EI155 => EI(154),
    EI156 => EI(155),
    EI157 => EI(156),
    EI158 => EI(157),
    EI159 => EI(158),
    EI160 => EI(159),
    EI161 => EI(160),
    EI162 => EI(161),
    EI163 => EI(162),
    EI164 => EI(163),
    EI165 => EI(164),
    EI166 => EI(165),
    EI167 => EI(166),
    EI168 => EI(167),
    EI169 => EI(168),
    EI170 => EI(169),
    EI171 => EI(170),
    EI172 => EI(171),
    EI173 => EI(172),
    EI174 => EI(173),
    EI175 => EI(174),
    EI176 => EI(175),
    EI177 => EI(176),
    EI178 => EI(177),
    EI179 => EI(178),
    EI180 => EI(179),
    EI181 => EI(180),
    EI182 => EI(181),
    EI183 => EI(182),
    EI184 => EI(183),
    EI185 => EI(184),
    EI186 => EI(185),
    EI187 => EI(186),
    EI188 => EI(187),
    EI189 => EI(188),
    EI190 => EI(189),
    EI191 => EI(190),
    EI192 => EI(191),
    EO1   => EO(0),
    EO2   => EO(1),
    EO3   => EO(2),
    EO4   => EO(3),
    EO5   => EO(4),
    EO6   => EO(5),
    EO7   => EO(6),
    EO8   => EO(7),
    EO9   => EO(8),
    EO10  => EO(9),
    EO11  => EO(10),
    EO12  => EO(11),
    EO13  => EO(12),
    EO14  => EO(13),
    EO15  => EO(14),
    EO16  => EO(15),
    EO17  => EO(16),
    EO18  => EO(17),
    EO19  => EO(18),
    EO20  => EO(19),
    EO21  => EO(20),
    EO22  => EO(21),
    EO23  => EO(22),
    EO24  => EO(23),
    EO25  => EO(24),
    EO26  => EO(25),
    EO27  => EO(26),
    EO28  => EO(27),
    EO29  => EO(28),
    EO30  => EO(29),
    EO31  => EO(30),
    EO32  => EO(31),
    EO33  => EO(32),
    EO34  => EO(33),
    EO35  => EO(34),
    EO36  => EO(35),
    EO37  => EO(36),
    EO38  => EO(37),
    EO39  => EO(38),
    EO40  => EO(39),
    EO41  => EO(40),
    EO42  => EO(41),
    EO43  => EO(42),
    EO44  => EO(43),
    EO45  => EO(44),
    EO46  => EO(45),
    EO47  => EO(46),
    EO48  => EO(47),
    EO49  => EO(48),
    EO50  => EO(49),
    EO51  => EO(50),
    EO52  => EO(51),
    EO53  => EO(52),
    EO54  => EO(53),
    EO55  => EO(54),
    EO56  => EO(55),
    EO57  => EO(56),
    EO58  => EO(57),
    EO59  => EO(58),
    EO60  => EO(59),
    EO61  => EO(60),
    EO62  => EO(61),
    EO63  => EO(62),
    EO64  => EO(63),
    EO65  => EO(64),
    EO66  => EO(65),
    EO67  => EO(66),
    EO68  => EO(67),
    EO69  => EO(68),
    EO70  => EO(69),
    EO71  => EO(70),
    EO72  => EO(71),
    EO73  => EO(72),
    EO74  => EO(73),
    EO75  => EO(74),
    EO76  => EO(75),
    EO77  => EO(76),
    EO78  => EO(77),
    EO79  => EO(78),
    EO80  => EO(79),
    EO81  => EO(80),
    EO82  => EO(81),
    EO83  => EO(82),
    EO84  => EO(83),
    EO85  => EO(84),
    EO86  => EO(85),
    EO87  => EO(86),
    EO88  => EO(87),
    EO89  => EO(88),
    EO90  => EO(89),
    EO91  => EO(90),
    EO92  => EO(91),
    EO93  => EO(92),
    EO94  => EO(93),
    EO95  => EO(94),
    EO96  => EO(95),
    EO97  => EO(96),
    EO98  => EO(97),
    EO99  => EO(98),
    EO100 => EO(99),
    EO101 => EO(100),
    EO102 => EO(101),
    EO103 => EO(102),
    EO104 => EO(103),
    EO105 => EO(104),
    EO106 => EO(105),
    EO107 => EO(106),
    EO108 => EO(107),
    EO109 => EO(108),
    EO110 => EO(109),
    EO111 => EO(110),
    EO112 => EO(111),
    EO113 => EO(112),
    EO114 => EO(113),
    EO115 => EO(114),
    EO116 => EO(115),
    EO117 => EO(116),
    EO118 => EO(117),
    EO119 => EO(118),
    EO120 => EO(119),
    EO121 => EO(120),
    EO122 => EO(121),
    EO123 => EO(122),
    EO124 => EO(123),
    EO125 => EO(124),
    EO126 => EO(125),
    EO127 => EO(126),
    EO128 => EO(127),
    EO129 => EO(128),
    EO130 => EO(129),
    EO131 => EO(130),
    EO132 => EO(131),
    EO133 => EO(132),
    EO134 => EO(133),
    EO135 => EO(134),
    EO136 => EO(135),
    EO137 => EO(136),
    EO138 => EO(137),
    EO139 => EO(138),
    EO140 => EO(139),
    EO141 => EO(140),
    EO142 => EO(141),
    EO143 => EO(142),
    EO144 => EO(143),
    EO145 => EO(144),
    EO146 => EO(145),
    EO147 => EO(146),
    EO148 => EO(147),
    EO149 => EO(148),
    EO150 => EO(149),
    EO151 => EO(150),
    EO152 => EO(151),
    EO153 => EO(152),
    EO154 => EO(153),
    EO155 => EO(154),
    EO156 => EO(155),
    EO157 => EO(156),
    EO158 => EO(157),
    EO159 => EO(158),
    EO160 => EO(159),
    EO161 => EO(160),
    EO162 => EO(161),
    EO163 => EO(162),
    EO164 => EO(163),
    EO165 => EO(164),
    EO166 => EO(165),
    EO167 => EO(166),
    EO168 => EO(167),
    EO169 => EO(168),
    EO170 => EO(169),
    EO171 => EO(170),
    EO172 => EO(171),
    EO173 => EO(172),
    EO174 => EO(173),
    EO175 => EO(174),
    EO176 => EO(175),
    EO177 => EO(176),
    EO178 => EO(177),
    EO179 => EO(178),
    EO180 => EO(179),
    EO181 => EO(180),
    EO182 => EO(181),
    EO183 => EO(182),
    EO184 => EO(183),
    EO185 => EO(184),
    EO186 => EO(185),
    EO187 => EO(186),
    EO188 => EO(187),
    EO189 => EO(188),
    EO190 => EO(189),
    EO191 => EO(190),
    EO192 => EO(191),
    FI1   => FI(0),
    FI2   => FI(1),
    FI3   => FI(2),
    FI4   => FI(3),
    FI5   => FI(4),
    FI6   => FI(5),
    FI7   => FI(6),
    FI8   => FI(7),
    FI9   => FI(8),
    FI10  => FI(9),
    FI11  => FI(10),
    FI12  => FI(11),
    FI13  => FI(12),
    FI14  => FI(13),
    FI15  => FI(14),
    FI16  => FI(15),
    FI17  => FI(16),
    FI18  => FI(17),
    FI19  => FI(18),
    FI20  => FI(19),
    FI21  => FI(20),
    FI22  => FI(21),
    FI23  => FI(22),
    FI24  => FI(23),
    FI25  => FI(24),
    FI26  => FI(25),
    FI27  => FI(26),
    FI28  => FI(27),
    FI29  => FI(28),
    FI30  => FI(29),
    FI31  => FI(30),
    FI32  => FI(31),
    FI33  => FI(32),
    FI34  => FI(33),
    FI35  => FI(34),
    FI36  => FI(35),
    FI37  => FI(36),
    FI38  => FI(37),
    FI39  => FI(38),
    FI40  => FI(39),
    FI41  => FI(40),
    FI42  => FI(41),
    FI43  => FI(42),
    FI44  => FI(43),
    FI45  => FI(44),
    FI46  => FI(45),
    FI47  => FI(46),
    FI48  => FI(47),
    FI49  => FI(48),
    FI50  => FI(49),
    FI51  => FI(50),
    FI52  => FI(51),
    FI53  => FI(52),
    FI54  => FI(53),
    FI55  => FI(54),
    FI56  => FI(55),
    FI57  => FI(56),
    FI58  => FI(57),
    FI59  => FI(58),
    FI60  => FI(59),
    FI61  => FI(60),
    FI62  => FI(61),
    FI63  => FI(62),
    FI64  => FI(63),
    FI65  => FI(64),
    FI66  => FI(65),
    FI67  => FI(66),
    FI68  => FI(67),
    FI69  => FI(68),
    FI70  => FI(69),
    FI71  => FI(70),
    FI72  => FI(71),
    FI73  => FI(72),
    FI74  => FI(73),
    FI75  => FI(74),
    FI76  => FI(75),
    FI77  => FI(76),
    FI78  => FI(77),
    FI79  => FI(78),
    FI80  => FI(79),
    FI81  => FI(80),
    FI82  => FI(81),
    FI83  => FI(82),
    FI84  => FI(83),
    FI85  => FI(84),
    FI86  => FI(85),
    FI87  => FI(86),
    FI88  => FI(87),
    FI89  => FI(88),
    FI90  => FI(89),
    FI91  => FI(90),
    FI92  => FI(91),
    FI93  => FI(92),
    FI94  => FI(93),
    FI95  => FI(94),
    FI96  => FI(95),
    FI97  => FI(96),
    FI98  => FI(97),
    FI99  => FI(98),
    FI100 => FI(99),
    FI101 => FI(100),
    FI102 => FI(101),
    FI103 => FI(102),
    FI104 => FI(103),
    FI105 => FI(104),
    FI106 => FI(105),
    FI107 => FI(106),
    FI108 => FI(107),
    FI109 => FI(108),
    FI110 => FI(109),
    FI111 => FI(110),
    FI112 => FI(111),
    FI113 => FI(112),
    FI114 => FI(113),
    FI115 => FI(114),
    FI116 => FI(115),
    FI117 => FI(116),
    FI118 => FI(117),
    FI119 => FI(118),
    FI120 => FI(119),
    FI121 => FI(120),
    FI122 => FI(121),
    FI123 => FI(122),
    FI124 => FI(123),
    FI125 => FI(124),
    FI126 => FI(125),
    FI127 => FI(126),
    FI128 => FI(127),
    FI129 => FI(128),
    FI130 => FI(129),
    FI131 => FI(130),
    FI132 => FI(131),
    FI133 => FI(132),
    FI134 => FI(133),
    FI135 => FI(134),
    FI136 => FI(135),
    FI137 => FI(136),
    FI138 => FI(137),
    FI139 => FI(138),
    FI140 => FI(139),
    FI141 => FI(140),
    FI142 => FI(141),
    FI143 => FI(142),
    FI144 => FI(143),
    FI145 => FI(144),
    FI146 => FI(145),
    FI147 => FI(146),
    FI148 => FI(147),
    FI149 => FI(148),
    FI150 => FI(149),
    FI151 => FI(150),
    FI152 => FI(151),
    FI153 => FI(152),
    FI154 => FI(153),
    FI155 => FI(154),
    FI156 => FI(155),
    FI157 => FI(156),
    FI158 => FI(157),
    FI159 => FI(158),
    FI160 => FI(159),
    FI161 => FI(160),
    FI162 => FI(161),
    FI163 => FI(162),
    FI164 => FI(163),
    FI165 => FI(164),
    FI166 => FI(165),
    FI167 => FI(166),
    FI168 => FI(167),
    FI169 => FI(168),
    FI170 => FI(169),
    FI171 => FI(170),
    FI172 => FI(171),
    FI173 => FI(172),
    FI174 => FI(173),
    FI175 => FI(174),
    FI176 => FI(175),
    FI177 => FI(176),
    FI178 => FI(177),
    FI179 => FI(178),
    FI180 => FI(179),
    FI181 => FI(180),
    FI182 => FI(181),
    FI183 => FI(182),
    FI184 => FI(183),
    FI185 => FI(184),
    FI186 => FI(185),
    FI187 => FI(186),
    FI188 => FI(187),
    FI189 => FI(188),
    FI190 => FI(189),
    FI191 => FI(190),
    FI192 => FI(191),
    FO1   => FO(0),
    FO2   => FO(1),
    FO3   => FO(2),
    FO4   => FO(3),
    FO5   => FO(4),
    FO6   => FO(5),
    FO7   => FO(6),
    FO8   => FO(7),
    FO9   => FO(8),
    FO10  => FO(9),
    FO11  => FO(10),
    FO12  => FO(11),
    FO13  => FO(12),
    FO14  => FO(13),
    FO15  => FO(14),
    FO16  => FO(15),
    FO17  => FO(16),
    FO18  => FO(17),
    FO19  => FO(18),
    FO20  => FO(19),
    FO21  => FO(20),
    FO22  => FO(21),
    FO23  => FO(22),
    FO24  => FO(23),
    FO25  => FO(24),
    FO26  => FO(25),
    FO27  => FO(26),
    FO28  => FO(27),
    FO29  => FO(28),
    FO30  => FO(29),
    FO31  => FO(30),
    FO32  => FO(31),
    FO33  => FO(32),
    FO34  => FO(33),
    FO35  => FO(34),
    FO36  => FO(35),
    FO37  => FO(36),
    FO38  => FO(37),
    FO39  => FO(38),
    FO40  => FO(39),
    FO41  => FO(40),
    FO42  => FO(41),
    FO43  => FO(42),
    FO44  => FO(43),
    FO45  => FO(44),
    FO46  => FO(45),
    FO47  => FO(46),
    FO48  => FO(47),
    FO49  => FO(48),
    FO50  => FO(49),
    FO51  => FO(50),
    FO52  => FO(51),
    FO53  => FO(52),
    FO54  => FO(53),
    FO55  => FO(54),
    FO56  => FO(55),
    FO57  => FO(56),
    FO58  => FO(57),
    FO59  => FO(58),
    FO60  => FO(59),
    FO61  => FO(60),
    FO62  => FO(61),
    FO63  => FO(62),
    FO64  => FO(63),
    FO65  => FO(64),
    FO66  => FO(65),
    FO67  => FO(66),
    FO68  => FO(67),
    FO69  => FO(68),
    FO70  => FO(69),
    FO71  => FO(70),
    FO72  => FO(71),
    FO73  => FO(72),
    FO74  => FO(73),
    FO75  => FO(74),
    FO76  => FO(75),
    FO77  => FO(76),
    FO78  => FO(77),
    FO79  => FO(78),
    FO80  => FO(79),
    FO81  => FO(80),
    FO82  => FO(81),
    FO83  => FO(82),
    FO84  => FO(83),
    FO85  => FO(84),
    FO86  => FO(85),
    FO87  => FO(86),
    FO88  => FO(87),
    FO89  => FO(88),
    FO90  => FO(89),
    FO91  => FO(90),
    FO92  => FO(91),
    FO93  => FO(92),
    FO94  => FO(93),
    FO95  => FO(94),
    FO96  => FO(95),
    FO97  => FO(96),
    FO98  => FO(97),
    FO99  => FO(98),
    FO100 => FO(99),
    FO101 => FO(100),
    FO102 => FO(101),
    FO103 => FO(102),
    FO104 => FO(103),
    FO105 => FO(104),
    FO106 => FO(105),
    FO107 => FO(106),
    FO108 => FO(107),
    FO109 => FO(108),
    FO110 => FO(109),
    FO111 => FO(110),
    FO112 => FO(111),
    FO113 => FO(112),
    FO114 => FO(113),
    FO115 => FO(114),
    FO116 => FO(115),
    FO117 => FO(116),
    FO118 => FO(117),
    FO119 => FO(118),
    FO120 => FO(119),
    FO121 => FO(120),
    FO122 => FO(121),
    FO123 => FO(122),
    FO124 => FO(123),
    FO125 => FO(124),
    FO126 => FO(125),
    FO127 => FO(126),
    FO128 => FO(127),
    FO129 => FO(128),
    FO130 => FO(129),
    FO131 => FO(130),
    FO132 => FO(131),
    FO133 => FO(132),
    FO134 => FO(133),
    FO135 => FO(134),
    FO136 => FO(135),
    FO137 => FO(136),
    FO138 => FO(137),
    FO139 => FO(138),
    FO140 => FO(139),
    FO141 => FO(140),
    FO142 => FO(141),
    FO143 => FO(142),
    FO144 => FO(143),
    FO145 => FO(144),
    FO146 => FO(145),
    FO147 => FO(146),
    FO148 => FO(147),
    FO149 => FO(148),
    FO150 => FO(149),
    FO151 => FO(150),
    FO152 => FO(151),
    FO153 => FO(152),
    FO154 => FO(153),
    FO155 => FO(154),
    FO156 => FO(155),
    FO157 => FO(156),
    FO158 => FO(157),
    FO159 => FO(158),
    FO160 => FO(159),
    FO161 => FO(160),
    FO162 => FO(161),
    FO163 => FO(162),
    FO164 => FO(163),
    FO165 => FO(164),
    FO166 => FO(165),
    FO167 => FO(166),
    FO168 => FO(167),
    FO169 => FO(168),
    FO170 => FO(169),
    FO171 => FO(170),
    FO172 => FO(171),
    FO173 => FO(172),
    FO174 => FO(173),
    FO175 => FO(174),
    FO176 => FO(175),
    FO177 => FO(176),
    FO178 => FO(177),
    FO179 => FO(178),
    FO180 => FO(179),
    FO181 => FO(180),
    FO182 => FO(181),
    FO183 => FO(182),
    FO184 => FO(183),
    FO185 => FO(184),
    FO186 => FO(185),
    FO187 => FO(186),
    FO188 => FO(187),
    FO189 => FO(188),
    FO190 => FO(189),
    FO191 => FO(190),
    FO192 => FO(191)
);
end NX_RTL;

----------------------------------------------------------------------------------------------------

`protect begin_protected
`protect version = 1
`protect encrypt_agent = "NanoXplore"
`protect key_keyowner = "Mentor Graphics Corporation", key_keyname = "MGC-VERIF-SIM-RSA-2", key_method = "rsa"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 256)
`protect key_block
gFh4QCdE11J8Y2jMbtpOSVHC8/moRl6rr8ZOMG5LVzTLqt8+KPWpu0IUYv7afz/U
mR73asoQlgbqK2eegeoSBkOtCLJSf/xmjoNcoGxWDUp98kUr9jy7ykpQiqQUTWac
tprAL7IgHHE3NW6giQJf09VmBXzDSg9HexUTzxMaDU9kdBoP0FvALLcltQiI7LBX
M4K6lxPEz3pl7DVsa/d8IdUVWdByHyoa/fcMuPsSen0sboMBP6TrYfRAIRZa3MIm
5VkZt9cNjhbv5u96khwZAep8dEicKGlz8QWp4lMtDLhJpzbRRm3qFSlxGczGgqhh
ll2hmS+PPHmJGtCUpDQ2vA==
`protect data_method = "aes256-cbc"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 10368)
`protect data_block
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
`protect end_protected

-- =================================================================================================
--   NX_BD definition                                                                   2018/06/19
-- =================================================================================================

library ieee;
use ieee.std_logic_1164.all;

entity NX_BD is
generic (
    system: bit := '1'
);
port (
    I : in  std_logic;
    O : out std_logic
);
end NX_BD;

architecture NX_RTL of NX_BD is
    attribute NX_TYPE :string;
    attribute NX_TYPE of NX_RTL: architecture is "PHY";

    attribute NX_USE :string;
    attribute NX_USE of NX_RTL: architecture is "NX_BD";
begin
end NX_RTL;

----------------------------------------------------------------------------------------------------

`protect begin_protected
`protect version = 1
`protect encrypt_agent = "NanoXplore"
`protect key_keyowner = "Mentor Graphics Corporation", key_keyname = "MGC-VERIF-SIM-RSA-2", key_method = "rsa"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 256)
`protect key_block
cVIAGGTl+lUx4M5+ZeynnR9iYiV/ZEz4gA1cbFbBDNgk81ryi0bRek+ym9ZiHPb4
P1x6SMaZF0Vb0zoXxa35WHn/rosCNGNlsbmkVKEjDKdLsiH/b+4gDgTPCLeMScLZ
qyp293J3yRWxWqBxuzh9Cth8vxGBhKCJfIIz/sPMkyg25sejDYDbHCLurjtInfLm
q+z2my4DuhX/mKBd5vECuvJ5rp2Cdftph52V7bA7lz22rwtJdM0RbI/n2YwMxDLM
Mimy/hK3xK+lU14BBddtGPoMLyj/+jN0R81OkJYd+IgqKZdzP+QFOoHKnLZFl6X3
pQqMIYHOJVakP74nEYWxWw==
`protect data_method = "aes256-cbc"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 240)
`protect data_block
rQzvCrmJL+r5P0TeWAVMSQqT+FWqFB2qH3Y+3KW4/X5mNLIlJUn7sUS6zTgu7CQO
E5iWpDv8z2zDT+3owjH+T5aGOkS2pg4VaBLY6MgrpI2aOqhBHvE9paCEoMFd8pbt
DHiv4Zo9XsKhCTWgOCIlEnPwy4DTsSIEziQDABzNYE5omPns7Ze1lCLpJOWaBJMc
BFlzCNPDfvdWpMW/Gce+SV525xsxUGPP0GTE9r3YYg9h5Y0fkKLBjTtPRsrtJgvw
usHql/rCzgMZ7B+fi2lWMWTbjf81f+WQQORCsfEUvM+QtUTTQNV0TMheYpQBvDG6
`protect end_protected

