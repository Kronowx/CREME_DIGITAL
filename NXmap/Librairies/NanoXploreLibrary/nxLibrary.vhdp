library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;

package nxPackage is

-- IOM

constant IOM_LINK_SPW_TX_DO             : integer := 0;
constant IOM_LINK_SPW_RX_DATA           : integer := 1;
constant IOM_LINK_DES_CHAIN_OUT         : integer := 2;
constant IOM_LINK_DELAY_VALUE_OUT_LAST  : integer := 3;
constant IOM_LINK_DELAY_VALUE_OUT_FIRST : integer := 8;
constant IOM_LINK_FLD                   : integer := 9;
constant IOM_LINK_SER_CHAIN_OUT         : integer := 10;
constant IOM_LINK_FLG                   : integer := 11;
constant IOM_LINK_DES_CHAIN_IN          : integer := 12;
constant IOM_LINK_SER_FCK_FABRIC        : integer := 13;
constant IOM_LINK_CTCK_FABRIC           : integer := 14;
constant IOM_LINK_SPW_TX_SO             : integer := 15;
constant IOM_LINK_DES_FCK_FABRIC        : integer := 16;
constant IOM_LINK_SPW_TX_OUT_CONFIG     : integer := 17;
constant IOM_LINK_SER_WPTR              : integer := 18;
constant IOM_LINK_SER_SCK_IOM           : integer := 19;
constant IOM_LINK_FZ                    : integer := 20;
constant IOM_LINK_SPW_RX_RCK            : integer := 21;
constant IOM_LINK_SER_CHAIN_IN          : integer := 22;
constant IOM_LINK_SER_RPTR              : integer := 23;
constant IOM_LINK_DES_SCK_IOM           : integer := 24;
constant IOM_LINK_DELAY_VALUE_IN_LAST   : integer := 25;
constant IOM_LINK_DELAY_VALUE_IN_FIRST  : integer := 30;
constant IOM_LINK_SPW_RX_DI             : integer := 31;
constant IOM_LINK_DCK                   : integer := 32;
constant IOM_LINK_DWR                   : integer := 33;
constant IOM_LINK_DES_RPTR              : integer := 34;
constant IOM_LINK_SER_SCK_FABRIC        : integer := 35;
constant IOM_LINK_DELAY_SELECT_LAST     : integer := 36;
constant IOM_LINK_DELAY_SELECT_FIRST    : integer := 37;
constant IOM_LINK_SPW_RX_IN_CONFIG      : integer := 38;
constant IOM_LINK_DES_WPTR              : integer := 39;
constant IOM_LINK_DES_SCK_FABRIC        : integer := 40;
constant IOM_LINK_SIZE                  : integer := 41;
constant IOM_LINK_OUTPUT_MAX            : integer := 29;

-- HSSL

constant CRX_LINK_SIZE                  : integer := 10;

constant CTX_LINK_SIZE                  : integer := 20;

component NX_IOB_I is
generic (
    location             : string := "";
    standard             : string := "";
    drive                : string := "";
    differential         : string := "";
    slewRate             : string := "";
    termination          : string := "";
    terminationReference : string := "";
    turbo                : string := "";
    weakTermination      : string := "";
    inputDelayLine       : string := "";
    outputDelayLine      : string := "";
    inputSignalSlope     : string := "";
    outputCapacity       : string := "";
    locked               : bit    := '0'
);
port (
    I	: in std_logic := '0';
    C	: in std_logic := '0';
    T	: in std_logic := '0';
    IO	: in std_logic := '0';
    O	: out std_logic := '0'
);
end component NX_IOB_I;

component NX_IOB_O is
generic (
    location             : string := "";
    standard             : string := "";
    drive                : string := "";
    differential         : string := "";
    slewRate             : string := "";
    termination          : string := "";
    terminationReference : string := "";
    turbo                : string := "";
    weakTermination      : string := "";
    inputDelayLine       : string := "";
    outputDelayLine      : string := "";
    inputSignalSlope     : string := "";
    outputCapacity       : string := "";
    locked               : bit    := '0'
);
port (
    I	: in std_logic := '0';
    C	: in std_logic := '0';
    T	: in std_logic := '0';
    O	: out std_logic := '0';
    IO	: out std_logic := '0'
);
end component NX_IOB_O;

component NX_IOB is
generic (
    location             : string := "";
    standard             : string := "";
    drive                : string := "";
    differential         : string := "";
    slewRate             : string := "";
    termination          : string := "";
    terminationReference : string := "";
    turbo                : string := "";
    weakTermination      : string := "";
    inputDelayLine       : string := "";
    outputDelayLine      : string := "";
    inputSignalSlope     : string := "";
    outputCapacity       : string := "";
    locked               : bit    := '0'
);
port (
    I	: in std_logic := '0';
    C	: in std_logic := '0';
    T	: in std_logic := '0';
    O	: out std_logic := '0';
    IO	: inout std_logic := '0'
);
end component NX_IOB;

component NX_IOM is
generic (
    mode_side1   : integer := 0;
    sel_clkw_rx1 : bit_vector(1 downto 0) := "00";
    sel_clkr_rx1 : bit := '0';
    div_tx1      : bit_vector(3 downto 0) := "0000";
    div_rx1      : bit_vector(3 downto 0) := "0000";
--  inv_di_fclk1 : bit := '0';
--  latency1     : bit := '0';
    mode_side2   : integer := 0;
    sel_clkw_rx2 : bit_vector(1 downto 0) := "00";
    sel_clkr_rx2 : bit := '0';
    div_tx2      : bit_vector(3 downto 0) := "0000";
    div_rx2      : bit_vector(3 downto 0) := "0000";
--  inv_di_fclk2 : bit := '0';
--  latency2     : bit := '0';
--  sel_clk_out2 : bit_vector(1 downto 0) := "00";
--  sel_clk_out3 : bit_vector(1 downto 0) := "00";
    sel_clk_out1 : bit := '0';
    sel_clk_out2 : bit := '0';
    mode_io_cal  : bit := '0';
    pads_dict    : string := "";
    pads_path    : string := ""
);
port (
    RTCK1	: in std_logic := '0';
    RRCK1	: in std_logic := '0';
    WTCK1	: in std_logic := '0';
    WRCK1	: in std_logic := '0';
    RTCK2	: in std_logic := '0';
    RRCK2	: in std_logic := '0';
    WTCK2	: in std_logic := '0';
    WRCK2	: in std_logic := '0';
    CTCK	: in std_logic := '0';
    CCK	: in std_logic := '0';
    DCK	: in std_logic := '0';

    C1TW	: in std_logic := '0';
    C1TS	: in std_logic := '0';
    C1RW1	: in std_logic := '0';
    C1RW2	: in std_logic := '0';
    C1RW3	: in std_logic := '0';
    C1RNE	: in std_logic := '0';
    C1RS	: in std_logic := '0';
    C2TW	: in std_logic := '0';
    C2TS	: in std_logic := '0';
    C2RW1	: in std_logic := '0';
    C2RW2	: in std_logic := '0';
    C2RW3	: in std_logic := '0';
    C2RNE	: in std_logic := '0';
    C2RS	: in std_logic := '0';
    FA1	: in std_logic := '0';
    FA2	: in std_logic := '0';
    FA3	: in std_logic := '0';
    FA4	: in std_logic := '0';
    FA5	: in std_logic := '0';
    FZ	: in std_logic := '0';
    DC	: in std_logic := '0';
    SE	: in std_logic := '0';
    SCI	: in std_logic := '0';
    SPI1	: in std_logic := '0';
    SPI2	: in std_logic := '0';
    SPI3	: in std_logic := '0';
    SPI4	: in std_logic := '0';
    SPI5	: in std_logic := '0';
    SPI6	: in std_logic := '0';
    DRI1	: in std_logic := '0';
    DRI2	: in std_logic := '0';
    DRI3	: in std_logic := '0';
    DRI4	: in std_logic := '0';
    DRI5	: in std_logic := '0';
    DRI6	: in std_logic := '0';
    DRA1	: in std_logic := '0';
    DRA2	: in std_logic := '0';
    DRA3	: in std_logic := '0';
    DRA4	: in std_logic := '0';
    DRA5	: in std_logic := '0';
    DRL	: in std_logic := '0';
    DOS	: in std_logic := '0';
    DOG	: in std_logic := '0';
    DIS	: in std_logic := '0';
    DIG	: in std_logic := '0';
    DPAS	: in std_logic := '0';
    DPAG	: in std_logic := '0';
    DQSS	: in std_logic := '0';
    DQSG	: in std_logic := '0';
    DS1	: in std_logic := '0';
    DS2	: in std_logic := '0';
    CAD1	: in std_logic := '0';
    CAD2	: in std_logic := '0';
    CAD3	: in std_logic := '0';
    CAD4	: in std_logic := '0';
    CAD5	: in std_logic := '0';
    CAD6	: in std_logic := '0';
    CAP1	: in std_logic := '0';
    CAP2	: in std_logic := '0';
    CAP3	: in std_logic := '0';
    CAP4	: in std_logic := '0';
    CAN1	: in std_logic := '0';
    CAN2	: in std_logic := '0';
    CAN3	: in std_logic := '0';
    CAN4	: in std_logic := '0';
    CAT1	: in std_logic := '0';
    CAT2	: in std_logic := '0';
    CAT3	: in std_logic := '0';
    CAT4	: in std_logic := '0';

    FLD	: out std_logic := '0';
    FLG	: out std_logic := '0';
    C1RED	: out std_logic := '0';
    C2RED	: out std_logic := '0';
    DRO1	: out std_logic := '0';
    DRO2	: out std_logic := '0';
    DRO3	: out std_logic := '0';
    DRO4	: out std_logic := '0';
    DRO5	: out std_logic := '0';
    DRO6	: out std_logic := '0';
    DRE	: out std_logic := '0';
    DRR	: out std_logic := '0';
    SCO	: out std_logic := '0';
    SPO1	: out std_logic := '0';
    SPO2	: out std_logic := '0';
    SPO3	: out std_logic := '0';
    SPO4	: out std_logic := '0';
    SPO5	: out std_logic := '0';

    P1CI1	: in std_logic := '0';
    P1CL	: in std_logic := '0';
    P1CR	: in std_logic := '0';
    P1CO	: out std_logic := '0';
    P1EI1	: in std_logic := '0';
    P1EI2	: in std_logic := '0';
    P1EI3	: in std_logic := '0';
    P1EI4	: in std_logic := '0';
    P1EI5	: in std_logic := '0';
    P1EL	: in std_logic := '0';
    P1ER	: in std_logic := '0';
    P1EO	: out std_logic := '0';
    P1RI	: in std_logic := '0';
    P1RL	: in std_logic := '0';
    P1RR	: in std_logic := '0';
    P1RO1	: out std_logic := '0';
    P1RO2	: out std_logic := '0';
    P1RO3	: out std_logic := '0';
    P1RO4	: out std_logic := '0';
    P1RO5	: out std_logic := '0';

    P2CI1	: in std_logic := '0';
    P2CL	: in std_logic := '0';
    P2CR	: in std_logic := '0';
    P2CO	: out std_logic := '0';
    P2EI1	: in std_logic := '0';
    P2EI2	: in std_logic := '0';
    P2EI3	: in std_logic := '0';
    P2EI4	: in std_logic := '0';
    P2EI5	: in std_logic := '0';
    P2EL	: in std_logic := '0';
    P2ER	: in std_logic := '0';
    P2EO	: out std_logic := '0';
    P2RI	: in std_logic := '0';
    P2RL	: in std_logic := '0';
    P2RR	: in std_logic := '0';
    P2RO1	: out std_logic := '0';
    P2RO2	: out std_logic := '0';
    P2RO3	: out std_logic := '0';
    P2RO4	: out std_logic := '0';
    P2RO5	: out std_logic := '0';

    P3CI1	: in std_logic := '0';
    P3CL	: in std_logic := '0';
    P3CR	: in std_logic := '0';
    P3CO	: out std_logic := '0';
    P3EI1	: in std_logic := '0';
    P3EI2	: in std_logic := '0';
    P3EI3	: in std_logic := '0';
    P3EI4	: in std_logic := '0';
    P3EI5	: in std_logic := '0';
    P3EL	: in std_logic := '0';
    P3ER	: in std_logic := '0';
    P3EO	: out std_logic := '0';
    P3RI	: in std_logic := '0';
    P3RL	: in std_logic := '0';
    P3RR	: in std_logic := '0';
    P3RO1	: out std_logic := '0';
    P3RO2	: out std_logic := '0';
    P3RO3	: out std_logic := '0';
    P3RO4	: out std_logic := '0';
    P3RO5	: out std_logic := '0';

    P4CI1	: in std_logic := '0';
    P4CL	: in std_logic := '0';
    P4CR	: in std_logic := '0';
    P4CO	: out std_logic := '0';
    P4EI1	: in std_logic := '0';
    P4EI2	: in std_logic := '0';
    P4EI3	: in std_logic := '0';
    P4EI4	: in std_logic := '0';
    P4EI5	: in std_logic := '0';
    P4EL	: in std_logic := '0';
    P4ER	: in std_logic := '0';
    P4EO	: out std_logic := '0';
    P4RI	: in std_logic := '0';
    P4RL	: in std_logic := '0';
    P4RR	: in std_logic := '0';
    P4RO1	: out std_logic := '0';
    P4RO2	: out std_logic := '0';
    P4RO3	: out std_logic := '0';
    P4RO4	: out std_logic := '0';
    P4RO5	: out std_logic := '0';

    P5CI1	: in std_logic := '0';
    P5CI2	: in std_logic := '0';
    P5CI3	: in std_logic := '0';
    P5CI4	: in std_logic := '0';
    P5CI5	: in std_logic := '0';
    P5CL	: in std_logic := '0';
    P5CR	: in std_logic := '0';
    P5CO	: out std_logic := '0';
    P5EI1	: in std_logic := '0';
    P5EI2	: in std_logic := '0';
    P5EI3	: in std_logic := '0';
    P5EI4	: in std_logic := '0';
    P5EI5	: in std_logic := '0';
    P5EL	: in std_logic := '0';
    P5ER	: in std_logic := '0';
    P5EO	: out std_logic := '0';
    P5RI	: in std_logic := '0';
    P5RL	: in std_logic := '0';
    P5RR	: in std_logic := '0';
    P5RO1	: out std_logic := '0';
    P5RO2	: out std_logic := '0';
    P5RO3	: out std_logic := '0';
    P5RO4	: out std_logic := '0';
    P5RO5	: out std_logic := '0';

    P6CI1	: in std_logic := '0';
    P6CL	: in std_logic := '0';
    P6CR	: in std_logic := '0';
    P6CO	: out std_logic := '0';
    P6EI1	: in std_logic := '0';
    P6EI2	: in std_logic := '0';
    P6EI3	: in std_logic := '0';
    P6EI4	: in std_logic := '0';
    P6EI5	: in std_logic := '0';
    P6EL	: in std_logic := '0';
    P6ER	: in std_logic := '0';
    P6EO	: out std_logic := '0';
    P6RI	: in std_logic := '0';
    P6RL	: in std_logic := '0';
    P6RR	: in std_logic := '0';
    P6RO1	: out std_logic := '0';
    P6RO2	: out std_logic := '0';
    P6RO3	: out std_logic := '0';
    P6RO4	: out std_logic := '0';
    P6RO5	: out std_logic := '0';

    P7CI1	: in std_logic := '0';
    P7CL	: in std_logic := '0';
    P7CR	: in std_logic := '0';
    P7CO	: out std_logic := '0';
    P7EI1	: in std_logic := '0';
    P7EI2	: in std_logic := '0';
    P7EI3	: in std_logic := '0';
    P7EI4	: in std_logic := '0';
    P7EI5	: in std_logic := '0';
    P7EL	: in std_logic := '0';
    P7ER	: in std_logic := '0';
    P7EO	: out std_logic := '0';
    P7RI	: in std_logic := '0';
    P7RL	: in std_logic := '0';
    P7RR	: in std_logic := '0';
    P7RO1	: out std_logic := '0';
    P7RO2	: out std_logic := '0';
    P7RO3	: out std_logic := '0';
    P7RO4	: out std_logic := '0';
    P7RO5	: out std_logic := '0';

    P8CI1	: in std_logic := '0';
    P8CL	: in std_logic := '0';
    P8CR	: in std_logic := '0';
    P8CO	: out std_logic := '0';
    P8EI1	: in std_logic := '0';
    P8EI2	: in std_logic := '0';
    P8EI3	: in std_logic := '0';
    P8EI4	: in std_logic := '0';
    P8EI5	: in std_logic := '0';
    P8EL	: in std_logic := '0';
    P8ER	: in std_logic := '0';
    P8EO	: out std_logic := '0';
    P8RI	: in std_logic := '0';
    P8RL	: in std_logic := '0';
    P8RR	: in std_logic := '0';
    P8RO1	: out std_logic := '0';
    P8RO2	: out std_logic := '0';
    P8RO3	: out std_logic := '0';
    P8RO4	: out std_logic := '0';
    P8RO5	: out std_logic := '0';

    P9CI1	: in std_logic := '0';
    P9CL	: in std_logic := '0';
    P9CR	: in std_logic := '0';
    P9CO	: out std_logic := '0';
    P9EI1	: in std_logic := '0';
    P9EI2	: in std_logic := '0';
    P9EI3	: in std_logic := '0';
    P9EI4	: in std_logic := '0';
    P9EI5	: in std_logic := '0';
    P9EL	: in std_logic := '0';
    P9ER	: in std_logic := '0';
    P9EO	: out std_logic := '0';
    P9RI	: in std_logic := '0';
    P9RL	: in std_logic := '0';
    P9RR	: in std_logic := '0';
    P9RO1	: out std_logic := '0';
    P9RO2	: out std_logic := '0';
    P9RO3	: out std_logic := '0';
    P9RO4	: out std_logic := '0';
    P9RO5	: out std_logic := '0';

    P10CI1	: in std_logic := '0';
    P10CL	: in std_logic := '0';
    P10CR	: in std_logic := '0';
    P10CO	: out std_logic := '0';
    P10EI1	: in std_logic := '0';
    P10EI2	: in std_logic := '0';
    P10EI3	: in std_logic := '0';
    P10EI4	: in std_logic := '0';
    P10EI5	: in std_logic := '0';
    P10EL	: in std_logic := '0';
    P10ER	: in std_logic := '0';
    P10EO	: out std_logic := '0';
    P10RI	: in std_logic := '0';
    P10RL	: in std_logic := '0';
    P10RR	: in std_logic := '0';
    P10RO1	: out std_logic := '0';
    P10RO2	: out std_logic := '0';
    P10RO3	: out std_logic := '0';
    P10RO4	: out std_logic := '0';
    P10RO5	: out std_logic := '0';

    P11CI1	: in std_logic := '0';
    P11CL	: in std_logic := '0';
    P11CR	: in std_logic := '0';
    P11CO	: out std_logic := '0';
    P11EI1	: in std_logic := '0';
    P11EI2	: in std_logic := '0';
    P11EI3	: in std_logic := '0';
    P11EI4	: in std_logic := '0';
    P11EI5	: in std_logic := '0';
    P11EL	: in std_logic := '0';
    P11ER	: in std_logic := '0';
    P11EO	: out std_logic := '0';
    P11RI	: in std_logic := '0';
    P11RL	: in std_logic := '0';
    P11RR	: in std_logic := '0';
    P11RO1	: out std_logic := '0';
    P11RO2	: out std_logic := '0';
    P11RO3	: out std_logic := '0';
    P11RO4	: out std_logic := '0';
    P11RO5	: out std_logic := '0';

    P12CI1	: in std_logic := '0';
    P12CL	: in std_logic := '0';
    P12CR	: in std_logic := '0';
    P12CO	: out std_logic := '0';
    P12EI1	: in std_logic := '0';
    P12EI2	: in std_logic := '0';
    P12EI3	: in std_logic := '0';
    P12EI4	: in std_logic := '0';
    P12EI5	: in std_logic := '0';
    P12EL	: in std_logic := '0';
    P12ER	: in std_logic := '0';
    P12EO	: out std_logic := '0';
    P12RI	: in std_logic := '0';
    P12RL	: in std_logic := '0';
    P12RR	: in std_logic := '0';
    P12RO1	: out std_logic := '0';
    P12RO2	: out std_logic := '0';
    P12RO3	: out std_logic := '0';
    P12RO4	: out std_logic := '0';
    P12RO5	: out std_logic := '0';

    P13CI1	: in std_logic := '0';
    P13CL	: in std_logic := '0';
    P13CR	: in std_logic := '0';
    P13CO	: out std_logic := '0';
    P13EI1	: in std_logic := '0';
    P13EI2	: in std_logic := '0';
    P13EI3	: in std_logic := '0';
    P13EI4	: in std_logic := '0';
    P13EI5	: in std_logic := '0';
    P13EL	: in std_logic := '0';
    P13ER	: in std_logic := '0';
    P13EO	: out std_logic := '0';
    P13RI	: in std_logic := '0';
    P13RL	: in std_logic := '0';
    P13RR	: in std_logic := '0';
    P13RO1	: out std_logic := '0';
    P13RO2	: out std_logic := '0';
    P13RO3	: out std_logic := '0';
    P13RO4	: out std_logic := '0';
    P13RO5	: out std_logic := '0';

    P14CI1	: in std_logic := '0';
    P14CL	: in std_logic := '0';
    P14CR	: in std_logic := '0';
    P14CO	: out std_logic := '0';
    P14EI1	: in std_logic := '0';
    P14EI2	: in std_logic := '0';
    P14EI3	: in std_logic := '0';
    P14EI4	: in std_logic := '0';
    P14EI5	: in std_logic := '0';
    P14EL	: in std_logic := '0';
    P14ER	: in std_logic := '0';
    P14EO	: out std_logic := '0';
    P14RI	: in std_logic := '0';
    P14RL	: in std_logic := '0';
    P14RR	: in std_logic := '0';
    P14RO1	: out std_logic := '0';
    P14RO2	: out std_logic := '0';
    P14RO3	: out std_logic := '0';
    P14RO4	: out std_logic := '0';
    P14RO5	: out std_logic := '0';

    P15CI1	: in std_logic := '0';
    P15CL	: in std_logic := '0';
    P15CR	: in std_logic := '0';
    P15CO	: out std_logic := '0';
    P15EI1	: in std_logic := '0';
    P15EI2	: in std_logic := '0';
    P15EI3	: in std_logic := '0';
    P15EI4	: in std_logic := '0';
    P15EI5	: in std_logic := '0';
    P15EL	: in std_logic := '0';
    P15ER	: in std_logic := '0';
    P15EO	: out std_logic := '0';
    P15RI	: in std_logic := '0';
    P15RL	: in std_logic := '0';
    P15RR	: in std_logic := '0';
    P15RO1	: out std_logic := '0';
    P15RO2	: out std_logic := '0';
    P15RO3	: out std_logic := '0';
    P15RO4	: out std_logic := '0';
    P15RO5	: out std_logic := '0';

    P16CI1	: in std_logic := '0';
    P16CL	: in std_logic := '0';
    P16CR	: in std_logic := '0';
    P16CO	: out std_logic := '0';
    P16EI1	: in std_logic := '0';
    P16EI2	: in std_logic := '0';
    P16EI3	: in std_logic := '0';
    P16EI4	: in std_logic := '0';
    P16EI5	: in std_logic := '0';
    P16EL	: in std_logic := '0';
    P16ER	: in std_logic := '0';
    P16EO	: out std_logic := '0';
    P16RI	: in std_logic := '0';
    P16RL	: in std_logic := '0';
    P16RR	: in std_logic := '0';
    P16RO1	: out std_logic := '0';
    P16RO2	: out std_logic := '0';
    P16RO3	: out std_logic := '0';
    P16RO4	: out std_logic := '0';
    P16RO5	: out std_logic := '0';

    P17CI1	: in std_logic := '0';
    P17CL	: in std_logic := '0';
    P17CR	: in std_logic := '0';
    P17CO	: out std_logic := '0';
    P17EI1	: in std_logic := '0';
    P17EI2	: in std_logic := '0';
    P17EI3	: in std_logic := '0';
    P17EI4	: in std_logic := '0';
    P17EI5	: in std_logic := '0';
    P17EL	: in std_logic := '0';
    P17ER	: in std_logic := '0';
    P17EO	: out std_logic := '0';
    P17RI	: in std_logic := '0';
    P17RL	: in std_logic := '0';
    P17RR	: in std_logic := '0';
    P17RO1	: out std_logic := '0';
    P17RO2	: out std_logic := '0';
    P17RO3	: out std_logic := '0';
    P17RO4	: out std_logic := '0';
    P17RO5	: out std_logic := '0';

    P18CI1	: in std_logic := '0';
    P18CL	: in std_logic := '0';
    P18CR	: in std_logic := '0';
    P18CO	: out std_logic := '0';
    P18EI1	: in std_logic := '0';
    P18EI2	: in std_logic := '0';
    P18EI3	: in std_logic := '0';
    P18EI4	: in std_logic := '0';
    P18EI5	: in std_logic := '0';
    P18EL	: in std_logic := '0';
    P18ER	: in std_logic := '0';
    P18EO	: out std_logic := '0';
    P18RI	: in std_logic := '0';
    P18RL	: in std_logic := '0';
    P18RR	: in std_logic := '0';
    P18RO1	: out std_logic := '0';
    P18RO2	: out std_logic := '0';
    P18RO3	: out std_logic := '0';
    P18RO4	: out std_logic := '0';
    P18RO5	: out std_logic := '0';

    P19CI1	: in std_logic := '0';
    P19CL	: in std_logic := '0';
    P19CR	: in std_logic := '0';
    P19CO	: out std_logic := '0';
    P19EI1	: in std_logic := '0';
    P19EI2	: in std_logic := '0';
    P19EI3	: in std_logic := '0';
    P19EI4	: in std_logic := '0';
    P19EI5	: in std_logic := '0';
    P19EL	: in std_logic := '0';
    P19ER	: in std_logic := '0';
    P19EO	: out std_logic := '0';
    P19RI	: in std_logic := '0';
    P19RL	: in std_logic := '0';
    P19RR	: in std_logic := '0';
    P19RO1	: out std_logic := '0';
    P19RO2	: out std_logic := '0';
    P19RO3	: out std_logic := '0';
    P19RO4	: out std_logic := '0';
    P19RO5	: out std_logic := '0';

    P20CI1	: in std_logic := '0';
    P20CL	: in std_logic := '0';
    P20CR	: in std_logic := '0';
    P20CO	: out std_logic := '0';
    P20EI1	: in std_logic := '0';
    P20EI2	: in std_logic := '0';
    P20EI3	: in std_logic := '0';
    P20EI4	: in std_logic := '0';
    P20EI5	: in std_logic := '0';
    P20EL	: in std_logic := '0';
    P20ER	: in std_logic := '0';
    P20EO	: out std_logic := '0';
    P20RI	: in std_logic := '0';
    P20RL	: in std_logic := '0';
    P20RR	: in std_logic := '0';
    P20RO1	: out std_logic := '0';
    P20RO2	: out std_logic := '0';
    P20RO3	: out std_logic := '0';
    P20RO4	: out std_logic := '0';
    P20RO5	: out std_logic := '0';

    P21CI1	: in std_logic := '0';
    P21CL	: in std_logic := '0';
    P21CR	: in std_logic := '0';
    P21CO	: out std_logic := '0';
    P21EI1	: in std_logic := '0';
    P21EI2	: in std_logic := '0';
    P21EI3	: in std_logic := '0';
    P21EI4	: in std_logic := '0';
    P21EI5	: in std_logic := '0';
    P21EL	: in std_logic := '0';
    P21ER	: in std_logic := '0';
    P21EO	: out std_logic := '0';
    P21RI	: in std_logic := '0';
    P21RL	: in std_logic := '0';
    P21RR	: in std_logic := '0';
    P21RO1	: out std_logic := '0';
    P21RO2	: out std_logic := '0';
    P21RO3	: out std_logic := '0';
    P21RO4	: out std_logic := '0';
    P21RO5	: out std_logic := '0';

    P22CI1	: in std_logic := '0';
    P22CL	: in std_logic := '0';
    P22CR	: in std_logic := '0';
    P22CO	: out std_logic := '0';
    P22EI1	: in std_logic := '0';
    P22EI2	: in std_logic := '0';
    P22EI3	: in std_logic := '0';
    P22EI4	: in std_logic := '0';
    P22EI5	: in std_logic := '0';
    P22EL	: in std_logic := '0';
    P22ER	: in std_logic := '0';
    P22EO	: out std_logic := '0';
    P22RI	: in std_logic := '0';
    P22RL	: in std_logic := '0';
    P22RR	: in std_logic := '0';
    P22RO1	: out std_logic := '0';
    P22RO2	: out std_logic := '0';
    P22RO3	: out std_logic := '0';
    P22RO4	: out std_logic := '0';
    P22RO5	: out std_logic := '0';

    P23CI1	: in std_logic := '0';
    P23CL	: in std_logic := '0';
    P23CR	: in std_logic := '0';
    P23CO	: out std_logic := '0';
    P23EI1	: in std_logic := '0';
    P23EI2	: in std_logic := '0';
    P23EI3	: in std_logic := '0';
    P23EI4	: in std_logic := '0';
    P23EI5	: in std_logic := '0';
    P23EL	: in std_logic := '0';
    P23ER	: in std_logic := '0';
    P23EO	: out std_logic := '0';
    P23RI	: in std_logic := '0';
    P23RL	: in std_logic := '0';
    P23RR	: in std_logic := '0';
    P23RO1	: out std_logic := '0';
    P23RO2	: out std_logic := '0';
    P23RO3	: out std_logic := '0';
    P23RO4	: out std_logic := '0';
    P23RO5	: out std_logic := '0';

    P24CI1	: in std_logic := '0';
    P24CL	: in std_logic := '0';
    P24CR	: in std_logic := '0';
    P24CO	: out std_logic := '0';
    P24EI1	: in std_logic := '0';
    P24EI2	: in std_logic := '0';
    P24EI3	: in std_logic := '0';
    P24EI4	: in std_logic := '0';
    P24EI5	: in std_logic := '0';
    P24EL	: in std_logic := '0';
    P24ER	: in std_logic := '0';
    P24EO	: out std_logic := '0';
    P24RI	: in std_logic := '0';
    P24RL	: in std_logic := '0';
    P24RR	: in std_logic := '0';
    P24RO1	: out std_logic := '0';
    P24RO2	: out std_logic := '0';
    P24RO3	: out std_logic := '0';
    P24RO4	: out std_logic := '0';
    P24RO5	: out std_logic := '0';

    P25CI1	: in std_logic := '0';
    P25CI2	: in std_logic := '0';
    P25CI3	: in std_logic := '0';
    P25CI4	: in std_logic := '0';
    P25CI5	: in std_logic := '0';
    P25CL	: in std_logic := '0';
    P25CR	: in std_logic := '0';
    P25CO	: out std_logic := '0';
    P25EI1	: in std_logic := '0';
    P25EI2	: in std_logic := '0';
    P25EI3	: in std_logic := '0';
    P25EI4	: in std_logic := '0';
    P25EI5	: in std_logic := '0';
    P25EL	: in std_logic := '0';
    P25ER	: in std_logic := '0';
    P25EO	: out std_logic := '0';
    P25RI	: in std_logic := '0';
    P25RL	: in std_logic := '0';
    P25RR	: in std_logic := '0';
    P25RO1	: out std_logic := '0';
    P25RO2	: out std_logic := '0';
    P25RO3	: out std_logic := '0';
    P25RO4	: out std_logic := '0';
    P25RO5	: out std_logic := '0';

    P26CI1	: in std_logic := '0';
    P26CL	: in std_logic := '0';
    P26CR	: in std_logic := '0';
    P26CO	: out std_logic := '0';
    P26EI1	: in std_logic := '0';
    P26EI2	: in std_logic := '0';
    P26EI3	: in std_logic := '0';
    P26EI4	: in std_logic := '0';
    P26EI5	: in std_logic := '0';
    P26EL	: in std_logic := '0';
    P26ER	: in std_logic := '0';
    P26EO	: out std_logic := '0';
    P26RI	: in std_logic := '0';
    P26RL	: in std_logic := '0';
    P26RR	: in std_logic := '0';
    P26RO1	: out std_logic := '0';
    P26RO2	: out std_logic := '0';
    P26RO3	: out std_logic := '0';
    P26RO4	: out std_logic := '0';
    P26RO5	: out std_logic := '0';

    P27CI1	: in std_logic := '0';
    P27CL	: in std_logic := '0';
    P27CR	: in std_logic := '0';
    P27CO	: out std_logic := '0';
    P27EI1	: in std_logic := '0';
    P27EI2	: in std_logic := '0';
    P27EI3	: in std_logic := '0';
    P27EI4	: in std_logic := '0';
    P27EI5	: in std_logic := '0';
    P27EL	: in std_logic := '0';
    P27ER	: in std_logic := '0';
    P27EO	: out std_logic := '0';
    P27RI	: in std_logic := '0';
    P27RL	: in std_logic := '0';
    P27RR	: in std_logic := '0';
    P27RO1	: out std_logic := '0';
    P27RO2	: out std_logic := '0';
    P27RO3	: out std_logic := '0';
    P27RO4	: out std_logic := '0';
    P27RO5	: out std_logic := '0';

    P28CI1	: in std_logic := '0';
    P28CL	: in std_logic := '0';
    P28CR	: in std_logic := '0';
    P28CO	: out std_logic := '0';
    P28EI1	: in std_logic := '0';
    P28EI2	: in std_logic := '0';
    P28EI3	: in std_logic := '0';
    P28EI4	: in std_logic := '0';
    P28EI5	: in std_logic := '0';
    P28EL	: in std_logic := '0';
    P28ER	: in std_logic := '0';
    P28EO	: out std_logic := '0';
    P28RI	: in std_logic := '0';
    P28RL	: in std_logic := '0';
    P28RR	: in std_logic := '0';
    P28RO1	: out std_logic := '0';
    P28RO2	: out std_logic := '0';
    P28RO3	: out std_logic := '0';
    P28RO4	: out std_logic := '0';
    P28RO5	: out std_logic := '0';

    P29CI1	: in std_logic := '0';
    P29CL	: in std_logic := '0';
    P29CR	: in std_logic := '0';
    P29CO	: out std_logic := '0';
    P29EI1	: in std_logic := '0';
    P29EI2	: in std_logic := '0';
    P29EI3	: in std_logic := '0';
    P29EI4	: in std_logic := '0';
    P29EI5	: in std_logic := '0';
    P29EL	: in std_logic := '0';
    P29ER	: in std_logic := '0';
    P29EO	: out std_logic := '0';
    P29RI	: in std_logic := '0';
    P29RL	: in std_logic := '0';
    P29RR	: in std_logic := '0';
    P29RO1	: out std_logic := '0';
    P29RO2	: out std_logic := '0';
    P29RO3	: out std_logic := '0';
    P29RO4	: out std_logic := '0';
    P29RO5	: out std_logic := '0';

    P30CI1	: in std_logic := '0';
    P30CL	: in std_logic := '0';
    P30CR	: in std_logic := '0';
    P30CO	: out std_logic := '0';
    P30EI1	: in std_logic := '0';
    P30EI2	: in std_logic := '0';
    P30EI3	: in std_logic := '0';
    P30EI4	: in std_logic := '0';
    P30EI5	: in std_logic := '0';
    P30EL	: in std_logic := '0';
    P30ER	: in std_logic := '0';
    P30EO	: out std_logic := '0';
    P30RI	: in std_logic := '0';
    P30RL	: in std_logic := '0';
    P30RR	: in std_logic := '0';
    P30RO1	: out std_logic := '0';
    P30RO2	: out std_logic := '0';
    P30RO3	: out std_logic := '0';
    P30RO4	: out std_logic := '0';
    P30RO5	: out std_logic := '0'
);
end component NX_IOM;

component NX_IOM_CONTROL is
generic (
    mode_side1   : integer := 0;
    sel_clkw_rx1 : bit_vector(1 downto 0) := "00";
    sel_clkr_rx1 : bit := '0';
    div_tx1      : bit_vector(3 downto 0) := "0000";
    div_rx1      : bit_vector(3 downto 0) := "0000";
    inv_di_fclk1 : bit := '0';
    latency1     : bit := '0';
    mode_side2   : integer := 0;
    sel_clkw_rx2 : bit_vector(1 downto 0) := "00";
    sel_clkr_rx2 : bit := '0';
    div_tx2      : bit_vector(3 downto 0) := "0000";
    div_rx2      : bit_vector(3 downto 0) := "0000";
    inv_di_fclk2 : bit := '0';
    latency2     : bit := '0';
    sel_clk_out1 : bit := '0';
    sel_clk_out2 : bit := '0';
    mode_rpath   : string := "";
    mode_epath   : string := "";
    mode_cpath   : string := "";
    mode_tpath   : string := "";
    mode_io_cal  : bit    := '0';
    location  : string    := ""
);
port (
    RTCK1	: in std_logic := '0';
    RRCK1	: in std_logic := '0';
    WTCK1	: in std_logic := '0';
    WRCK1	: in std_logic := '0';
    RTCK2	: in std_logic := '0';
    RRCK2	: in std_logic := '0';
    WTCK2	: in std_logic := '0';
    WRCK2	: in std_logic := '0';
    CTCK	: in std_logic := '0';

    C1TW	: in std_logic := '0';
    C1TS	: in std_logic := '0';
    C1RW1	: in std_logic := '0';
    C1RW2	: in std_logic := '0';
    C1RW3	: in std_logic := '0';
    C1RNE	: in std_logic := '0';
    C1RS	: in std_logic := '0';
    C2TW	: in std_logic := '0';
    C2TS	: in std_logic := '0';
    C2RW1	: in std_logic := '0';
    C2RW2	: in std_logic := '0';
    C2RW3	: in std_logic := '0';
    C2RNE	: in std_logic := '0';
    C2RS	: in std_logic := '0';
    FA1	: in std_logic := '0';
    FA2	: in std_logic := '0';
    FA3	: in std_logic := '0';
    FA4	: in std_logic := '0';
    FA5	: in std_logic := '0';
    FA6	: in std_logic := '0';
    FZ	: in std_logic := '0';
    DC	: in std_logic := '0';
    SE	: in std_logic := '0';
    SCI	: in std_logic := '0';
    SPI1	: in std_logic := '0';
    SPI2	: in std_logic := '0';
    SPI3	: in std_logic := '0';
    SPI4	: in std_logic := '0';
    SPI5	: in std_logic := '0';
    SPI6	: in std_logic := '0';
    CCK	: in std_logic := '0';
    DCK	: in std_logic := '0';
    DRI1	: in std_logic := '0';
    DRI2	: in std_logic := '0';
    DRI3	: in std_logic := '0';
    DRI4	: in std_logic := '0';
    DRI5	: in std_logic := '0';
    DRI6	: in std_logic := '0';
    DRA1	: in std_logic := '0';
    DRA2	: in std_logic := '0';
    DRA3	: in std_logic := '0';
    DRA4	: in std_logic := '0';
    DRA5	: in std_logic := '0';
    DRA6	: in std_logic := '0';
    DRL	: in std_logic := '0';
    DOS	: in std_logic := '0';
    DOG	: in std_logic := '0';
    DIS	: in std_logic := '0';
    DIG	: in std_logic := '0';
    DPAS	: in std_logic := '0';
    DPAG	: in std_logic := '0';
    DQSS	: in std_logic := '0';
    DQSG	: in std_logic := '0';
    DS1	: in std_logic := '0';
    DS2	: in std_logic := '0';
    CAD1	: in std_logic := '0';
    CAD2	: in std_logic := '0';
    CAD3	: in std_logic := '0';
    CAD4	: in std_logic := '0';
    CAD5	: in std_logic := '0';
    CAD6	: in std_logic := '0';
    CAP1	: in std_logic := '0';
    CAP2	: in std_logic := '0';
    CAP3	: in std_logic := '0';
    CAP4	: in std_logic := '0';
    CAN1	: in std_logic := '0';
    CAN2	: in std_logic := '0';
    CAN3	: in std_logic := '0';
    CAN4	: in std_logic := '0';
    CAT1	: in std_logic := '0';
    CAT2	: in std_logic := '0';
    CAT3	: in std_logic := '0';
    CAT4	: in std_logic := '0';

    FLD	: out std_logic := '0';
    FLG	: out std_logic := '0';
    C1RED	: out std_logic := '0';
    C2RED	: out std_logic := '0';
    DRO1	: out std_logic := '0';
    DRO2	: out std_logic := '0';
    DRO3	: out std_logic := '0';
    DRO4	: out std_logic := '0';
    DRO5	: out std_logic := '0';
    DRO6	: out std_logic := '0';
    DRE	: out std_logic := '0';
    DRR	: out std_logic := '0';
    SCO	: out std_logic := '0';
    SPO1	: out std_logic := '0';
    SPO2	: out std_logic := '0';
    SPO3	: out std_logic := '0';
    SPO4	: out std_logic := '0';
    SPO5	: out std_logic := '0';

    LINK1	: inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0) := (others => '0');
    LINK2	: inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0) := (others => '0');
    LINK3	: inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0) := (others => '0');
    LINK4	: inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0) := (others => '0');
    LINK5	: inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0) := (others => '0');
    LINK6	: inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0) := (others => '0');
    LINK7	: inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0) := (others => '0');
    LINK8	: inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0) := (others => '0');
    LINK9	: inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0) := (others => '0');
    LINK10	: inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0) := (others => '0');
    LINK11	: inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0) := (others => '0');
    LINK12	: inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0) := (others => '0');
    LINK13	: inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0) := (others => '0');
    LINK14	: inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0) := (others => '0');
    LINK15	: inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0) := (others => '0');
    LINK16	: inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0) := (others => '0');
    LINK17	: inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0) := (others => '0');
    LINK18	: inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0) := (others => '0');
    LINK19	: inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0) := (others => '0');
    LINK20	: inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0) := (others => '0');
    LINK21	: inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0) := (others => '0');
    LINK22	: inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0) := (others => '0');
    LINK23	: inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0) := (others => '0');
    LINK24	: inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0) := (others => '0');
    LINK25	: inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0) := (others => '0');
    LINK26	: inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0) := (others => '0');
    LINK27	: inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0) := (others => '0');
    LINK28	: inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0) := (others => '0');
    LINK29	: inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0) := (others => '0');
    LINK30	: inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0) := (others => '0');
    LINK31	: inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0) := (others => '0');
    LINK32	: inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0) := (others => '0');
    LINK33	: inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0) := (others => '0');
    LINK34	: inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0) := (others => '0')
);
end component NX_IOM_CONTROL;

component NX_IOM_DRIVER is
generic (
    epath_edge      : bit := '0';
    epath_init      : bit := '0';
    epath_load      : bit := '0';
    epath_mode      : bit_vector(3 downto 0) := "0000";
    epath_sync      : bit := '0';
    epath_dynamic   : bit := '0'; --0: off/fixed delay, 1: dynamic delay

    rpath_edge      : bit := '0';
    rpath_init      : bit := '0';
    rpath_load      : bit := '0';
    rpath_mode      : bit_vector(3 downto 0) := "0000";
    rpath_sync      : bit := '0';
    rpath_dynamic   : bit := '0'; --0: off/fixed delay, 1: dynamic delay

    cpath_edge      : bit := '0';
    cpath_init      : bit := '0';
    cpath_load      : bit := '0';
    cpath_mode      : bit_vector(3 downto 0) := "0000";
    cpath_sync      : bit := '0';
    cpath_inv       : bit := '0';

    tpath_mode      : bit_vector(1 downto 0) := "00";

    location        : string := "";
    chained         : bit    := '0';
    symbol          : string := ""
);
port (
    EI1	: in std_logic := '0';
    EI2	: in std_logic := '0';
    EI3	: in std_logic := '0';
    EI4	: in std_logic := '0';
    EI5	: in std_logic := '0';
    EL	: in std_logic := '0';
    ER	: in std_logic := '0';
    CI1	: in std_logic := '0';
    CI2	: in std_logic := '0';
    CI3	: in std_logic := '0';
    CI4	: in std_logic := '0';
    CI5	: in std_logic := '0';
    CL	: in std_logic := '0';
    CR	: in std_logic := '0';
    CT	: in std_logic := '0';
    RI	: in std_logic := '0';
    RL	: in std_logic := '0';
    RR	: in std_logic := '0';
    CO	: out std_logic := '0';
    EO	: out std_logic := '0';
    RO1	: out std_logic := '0';
    RO2	: out std_logic := '0';
    RO3	: out std_logic := '0';
    RO4	: out std_logic := '0';
    RO5	: out std_logic := '0';
    LINK	: inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0) := (others => '0')
);
end component NX_IOM_DRIVER;

component NX_IOM_SERDES is
generic (
    data_size : integer range 2 to 10 := 5;
    location  : string := ""
);
port (
    RTCK	: in std_logic := '0';
    WRCK	: in std_logic := '0';
    WTCK	: in std_logic := '0';
    RRCK	: in std_logic := '0';
    TRST	: in std_logic := '0';
    RRST	: in std_logic := '0';
    CTCK	: in std_logic := '0';
    CL	: in std_logic := '0';
    CR	: in std_logic := '0';
    DCK	: in std_logic := '0';
    DRL	: in std_logic := '0';
    DIG	: in std_logic := '0';
    DS	: in std_logic_vector(1 downto 0) := (others => '0');
    DRA	: in std_logic_vector(5 downto 0) := (others => '0');
    DRI	: in std_logic_vector(5 downto 0) := (others => '0');
    FZ	: in std_logic := '0';
    DRO	: out std_logic_vector(5 downto 0) := (others => '0');
    DID	: out std_logic_vector(5 downto 0) := (others => '0');
    FLD	: out std_logic := '0';
    FLG	: out std_logic := '0';
    LINKN	: inout std_logic_vector(IOM_LINK_SIZE-1 downto 0) := (others => '0');
    LINKP	: inout std_logic_vector(IOM_LINK_SIZE-1 downto 0) := (others => '0')
);
end component NX_IOM_SERDES;

component NX_LUT is
generic (
    lut_table : bit_vector(15 downto 0) := B"0000000000000000" -- truthTable t15 ... t0
);
port (
    I1	: in std_logic := '0';
    I2	: in std_logic := '0';
    I3	: in std_logic := '0';
    I4	: in std_logic := '0';
    O	: out std_logic := '0'
);
end component NX_LUT;

component NX_DFF is
generic (
    dff_edge   : bit := '0';
    dff_init   : bit := '0';
    dff_load   : bit := '0';
    dff_sync   : bit := '0';
    dff_ctxt   : std_logic := 'U'
);
port (
    I	: in std_logic := '0';
    CK	: in std_logic := '0';
    L	: in std_logic := '0';
    R	: in std_logic := '0';
    O	: out std_logic := '0'
);
end component NX_DFF;

component NX_BFF is
port (
    I	: in std_logic := '0';
    O	: out std_logic := '0'
);
end component NX_BFF;

component NX_DFR is
generic (
    location   : string := "";
    path       : integer := 0;
    mode       : integer := 0;
    dff_edge   : bit := '0';
    dff_init   : bit := '0';
    dff_load   : bit := '0';
    dff_sync   : bit := '0'
);
port (
    I	: in std_logic := '0';
    CK	: in std_logic := '0';
    L	: in std_logic := '0';
    R	: in std_logic := '0';
    O	: out std_logic := '0'
);
end component NX_DFR;

component NX_BFR is
generic (
    location   : string := "";
    path       : integer := 0;
    mode       : integer := 0
);
port (
    I	: in std_logic := '0';
    O	: out std_logic := '0'
);
end component NX_BFR;

component NX_CY is
generic (
    add_carry  : integer := 0      -- 0: low - 1: high - 2: propagate
);
port (
    A1	: in std_logic := '0';
    A2	: in std_logic := '0';
    A3	: in std_logic := '0';
    A4	: in std_logic := '0';
    B1	: in std_logic := '0';
    B2	: in std_logic := '0';
    B3	: in std_logic := '0';
    B4	: in std_logic := '0';
    CI	: in std_logic := '0';
    CO	: out std_logic := '0';
    S1	: out std_logic := '0';
    S2	: out std_logic := '0';
    S3	: out std_logic := '0';
    S4	: out std_logic := '0'
);
end component NX_CY;

component NX_RFB is
generic (
    rck_edge  : bit := '0';   -- 0: read clock rising edge - 1: read clock falling edge
    wck_edge  : bit := '0';   -- 0: write clock rising edge - 1: write clock falling edge
    mem_ctxt  : string := "" -- memory initial context
);
port (
    RCK	: in std_logic := '0';
    WCK	: in std_logic := '0';
    I1	: in std_logic := '0';
    I2	: in std_logic := '0';
    I3	: in std_logic := '0';
    I4	: in std_logic := '0';
    I5	: in std_logic := '0';
    I6	: in std_logic := '0';
    I7	: in std_logic := '0';
    I8	: in std_logic := '0';
    I9	: in std_logic := '0';
    I10	: in std_logic := '0';
    I11	: in std_logic := '0';
    I12	: in std_logic := '0';
    I13	: in std_logic := '0';
    I14	: in std_logic := '0';
    I15	: in std_logic := '0';
    I16	: in std_logic := '0';
    COR	: out std_logic := '0';
    ERR	: out std_logic := '0';
    O1	: out std_logic := '0';
    O2	: out std_logic := '0';
    O3	: out std_logic := '0';
    O4	: out std_logic := '0';
    O5	: out std_logic := '0';
    O6	: out std_logic := '0';
    O7	: out std_logic := '0';
    O8	: out std_logic := '0';
    O9	: out std_logic := '0';
    O10	: out std_logic := '0';
    O11	: out std_logic := '0';
    O12	: out std_logic := '0';
    O13	: out std_logic := '0';
    O14	: out std_logic := '0';
    O15	: out std_logic := '0';
    O16	: out std_logic := '0';
    RA1	: in std_logic := '0';
    RA2	: in std_logic := '0';
    RA3	: in std_logic := '0';
    RA4	: in std_logic := '0';
    RA5	: in std_logic := '0';
    RA6	: in std_logic := '0';
    RE	: in std_logic := '0';
    WA1	: in std_logic := '0';
    WA2	: in std_logic := '0';
    WA3	: in std_logic := '0';
    WA4	: in std_logic := '0';
    WA5	: in std_logic := '0';
    WA6	: in std_logic := '0';
    WE	: in std_logic := '0'
);
end component NX_RFB;

component NX_RFB_WRAP is
generic (
    rck_edge  : bit := '0';   -- 0: read clock rising edge - 1: read clock falling edge
    wck_edge  : bit := '0';   -- 0: write clock rising edge - 1: write clock falling edge
    mem_ctxt  : string := "" -- memory initial context
);
port (
    RCK	: in std_logic := '0';
    WCK	: in std_logic := '0';
    I	: in std_logic_vector(15 downto 0) := (others => '0');
    COR	: out std_logic := '0';
    ERR	: out std_logic := '0';
    O	: out std_logic_vector(15 downto 0) := (others => '0');
    RA	: in std_logic_vector(5 downto 0) := (others => '0');
    RE	: in std_logic := '0';
    WA	: in std_logic_vector(5 downto 0) := (others => '0');
    WE	: in std_logic := '0'
);
end component NX_RFB_WRAP;

component NX_CKS is
port (
    CKI	: in std_logic := '0';
    CMD	: in std_logic := '0';
    CKO	: out std_logic := '0'
);
end component NX_CKS;

component NX_DSP is
generic (
    std_mode    : string := ""; -- standard mode [ADD36, SUB36, SMUL18, UMUL18, ...] empty for raw
    raw_config0 : bit_vector(19 downto 0) := B"00000000000000000000";        -- MUX
    raw_config1 : bit_vector(18 downto 0) := B"0000000000000000000";         -- PRC
    raw_config2 : bit_vector(12 downto 0) := B"0000000000000";               -- PRR
    raw_config3 : bit_vector( 6 downto 0) := B"0000000"                      -- ALU
);
port (
    A1	: in std_logic := '0';
    A2	: in std_logic := '0';
    A3	: in std_logic := '0';
    A4	: in std_logic := '0';
    A5	: in std_logic := '0';
    A6	: in std_logic := '0';
    A7	: in std_logic := '0';
    A8	: in std_logic := '0';
    A9	: in std_logic := '0';
    A10	: in std_logic := '0';
    A11	: in std_logic := '0';
    A12	: in std_logic := '0';
    A13	: in std_logic := '0';
    A14	: in std_logic := '0';
    A15	: in std_logic := '0';
    A16	: in std_logic := '0';
    A17	: in std_logic := '0';
    A18	: in std_logic := '0';
    A19	: in std_logic := '0';
    A20	: in std_logic := '0';
    A21	: in std_logic := '0';
    A22	: in std_logic := '0';
    A23	: in std_logic := '0';
    A24	: in std_logic := '0';

    B1	: in std_logic := '0';
    B2	: in std_logic := '0';
    B3	: in std_logic := '0';
    B4	: in std_logic := '0';
    B5	: in std_logic := '0';
    B6	: in std_logic := '0';
    B7	: in std_logic := '0';
    B8	: in std_logic := '0';
    B9	: in std_logic := '0';
    B10	: in std_logic := '0';
    B11	: in std_logic := '0';
    B12	: in std_logic := '0';
    B13	: in std_logic := '0';
    B14	: in std_logic := '0';
    B15	: in std_logic := '0';
    B16	: in std_logic := '0';
    B17	: in std_logic := '0';
    B18	: in std_logic := '0';

    C1	: in std_logic := '0';
    C2	: in std_logic := '0';
    C3	: in std_logic := '0';
    C4	: in std_logic := '0';
    C5	: in std_logic := '0';
    C6	: in std_logic := '0';
    C7	: in std_logic := '0';
    C8	: in std_logic := '0';
    C9	: in std_logic := '0';
    C10	: in std_logic := '0';
    C11	: in std_logic := '0';
    C12	: in std_logic := '0';
    C13	: in std_logic := '0';
    C14	: in std_logic := '0';
    C15	: in std_logic := '0';
    C16	: in std_logic := '0';
    C17	: in std_logic := '0';
    C18	: in std_logic := '0';
    C19	: in std_logic := '0';
    C20	: in std_logic := '0';
    C21	: in std_logic := '0';
    C22	: in std_logic := '0';
    C23	: in std_logic := '0';
    C24	: in std_logic := '0';
    C25	: in std_logic := '0';
    C26	: in std_logic := '0';
    C27	: in std_logic := '0';
    C28	: in std_logic := '0';
    C29	: in std_logic := '0';
    C30	: in std_logic := '0';
    C31	: in std_logic := '0';
    C32	: in std_logic := '0';
    C33	: in std_logic := '0';
    C34	: in std_logic := '0';
    C35	: in std_logic := '0';
    C36	: in std_logic := '0';

    CAI1	: in std_logic := '0';
    CAI2	: in std_logic := '0';
    CAI3	: in std_logic := '0';
    CAI4	: in std_logic := '0';
    CAI5	: in std_logic := '0';
    CAI6	: in std_logic := '0';
    CAI7	: in std_logic := '0';
    CAI8	: in std_logic := '0';
    CAI9	: in std_logic := '0';
    CAI10	: in std_logic := '0';
    CAI11	: in std_logic := '0';
    CAI12	: in std_logic := '0';
    CAI13	: in std_logic := '0';
    CAI14	: in std_logic := '0';
    CAI15	: in std_logic := '0';
    CAI16	: in std_logic := '0';
    CAI17	: in std_logic := '0';
    CAI18	: in std_logic := '0';

    CAO1	: out std_logic := '0';
    CAO2	: out std_logic := '0';
    CAO3	: out std_logic := '0';
    CAO4	: out std_logic := '0';
    CAO5	: out std_logic := '0';
    CAO6	: out std_logic := '0';
    CAO7	: out std_logic := '0';
    CAO8	: out std_logic := '0';
    CAO9	: out std_logic := '0';
    CAO10	: out std_logic := '0';
    CAO11	: out std_logic := '0';
    CAO12	: out std_logic := '0';
    CAO13	: out std_logic := '0';
    CAO14	: out std_logic := '0';
    CAO15	: out std_logic := '0';
    CAO16	: out std_logic := '0';
    CAO17	: out std_logic := '0';
    CAO18	: out std_logic := '0';

    CBI1	: in std_logic := '0';
    CBI2	: in std_logic := '0';
    CBI3	: in std_logic := '0';
    CBI4	: in std_logic := '0';
    CBI5	: in std_logic := '0';
    CBI6	: in std_logic := '0';
    CBI7	: in std_logic := '0';
    CBI8	: in std_logic := '0';
    CBI9	: in std_logic := '0';
    CBI10	: in std_logic := '0';
    CBI11	: in std_logic := '0';
    CBI12	: in std_logic := '0';
    CBI13	: in std_logic := '0';
    CBI14	: in std_logic := '0';
    CBI15	: in std_logic := '0';
    CBI16	: in std_logic := '0';
    CBI17	: in std_logic := '0';
    CBI18	: in std_logic := '0';

    CBO1	: out std_logic := '0';
    CBO2	: out std_logic := '0';
    CBO3	: out std_logic := '0';
    CBO4	: out std_logic := '0';
    CBO5	: out std_logic := '0';
    CBO6	: out std_logic := '0';
    CBO7	: out std_logic := '0';
    CBO8	: out std_logic := '0';
    CBO9	: out std_logic := '0';
    CBO10	: out std_logic := '0';
    CBO11	: out std_logic := '0';
    CBO12	: out std_logic := '0';
    CBO13	: out std_logic := '0';
    CBO14	: out std_logic := '0';
    CBO15	: out std_logic := '0';
    CBO16	: out std_logic := '0';
    CBO17	: out std_logic := '0';
    CBO18	: out std_logic := '0';

    CCI	: in std_logic := '0';
    CCO	: out std_logic := '0';
    CI	: in std_logic := '0';
    CK	: in std_logic := '0';
    CO	: out std_logic := '0';
    CO37	: out std_logic := '0';
    CO49	: out std_logic := '0';

    CZI1	: in std_logic := '0';
    CZI2	: in std_logic := '0';
    CZI3	: in std_logic := '0';
    CZI4	: in std_logic := '0';
    CZI5	: in std_logic := '0';
    CZI6	: in std_logic := '0';
    CZI7	: in std_logic := '0';
    CZI8	: in std_logic := '0';
    CZI9	: in std_logic := '0';
    CZI10	: in std_logic := '0';
    CZI11	: in std_logic := '0';
    CZI12	: in std_logic := '0';
    CZI13	: in std_logic := '0';
    CZI14	: in std_logic := '0';
    CZI15	: in std_logic := '0';
    CZI16	: in std_logic := '0';
    CZI17	: in std_logic := '0';
    CZI18	: in std_logic := '0';
    CZI19	: in std_logic := '0';
    CZI20	: in std_logic := '0';
    CZI21	: in std_logic := '0';
    CZI22	: in std_logic := '0';
    CZI23	: in std_logic := '0';
    CZI24	: in std_logic := '0';
    CZI25	: in std_logic := '0';
    CZI26	: in std_logic := '0';
    CZI27	: in std_logic := '0';
    CZI28	: in std_logic := '0';
    CZI29	: in std_logic := '0';
    CZI30	: in std_logic := '0';
    CZI31	: in std_logic := '0';
    CZI32	: in std_logic := '0';
    CZI33	: in std_logic := '0';
    CZI34	: in std_logic := '0';
    CZI35	: in std_logic := '0';
    CZI36	: in std_logic := '0';
    CZI37	: in std_logic := '0';
    CZI38	: in std_logic := '0';
    CZI39	: in std_logic := '0';
    CZI40	: in std_logic := '0';
    CZI41	: in std_logic := '0';
    CZI42	: in std_logic := '0';
    CZI43	: in std_logic := '0';
    CZI44	: in std_logic := '0';
    CZI45	: in std_logic := '0';
    CZI46	: in std_logic := '0';
    CZI47	: in std_logic := '0';
    CZI48	: in std_logic := '0';
    CZI49	: in std_logic := '0';
    CZI50	: in std_logic := '0';
    CZI51	: in std_logic := '0';
    CZI52	: in std_logic := '0';
    CZI53	: in std_logic := '0';
    CZI54	: in std_logic := '0';
    CZI55	: in std_logic := '0';
    CZI56	: in std_logic := '0';

    CZO1	: out std_logic := '0';
    CZO2	: out std_logic := '0';
    CZO3	: out std_logic := '0';
    CZO4	: out std_logic := '0';
    CZO5	: out std_logic := '0';
    CZO6	: out std_logic := '0';
    CZO7	: out std_logic := '0';
    CZO8	: out std_logic := '0';
    CZO9	: out std_logic := '0';
    CZO10	: out std_logic := '0';
    CZO11	: out std_logic := '0';
    CZO12	: out std_logic := '0';
    CZO13	: out std_logic := '0';
    CZO14	: out std_logic := '0';
    CZO15	: out std_logic := '0';
    CZO16	: out std_logic := '0';
    CZO17	: out std_logic := '0';
    CZO18	: out std_logic := '0';
    CZO19	: out std_logic := '0';
    CZO20	: out std_logic := '0';
    CZO21	: out std_logic := '0';
    CZO22	: out std_logic := '0';
    CZO23	: out std_logic := '0';
    CZO24	: out std_logic := '0';
    CZO25	: out std_logic := '0';
    CZO26	: out std_logic := '0';
    CZO27	: out std_logic := '0';
    CZO28	: out std_logic := '0';
    CZO29	: out std_logic := '0';
    CZO30	: out std_logic := '0';
    CZO31	: out std_logic := '0';
    CZO32	: out std_logic := '0';
    CZO33	: out std_logic := '0';
    CZO34	: out std_logic := '0';
    CZO35	: out std_logic := '0';
    CZO36	: out std_logic := '0';
    CZO37	: out std_logic := '0';
    CZO38	: out std_logic := '0';
    CZO39	: out std_logic := '0';
    CZO40	: out std_logic := '0';
    CZO41	: out std_logic := '0';
    CZO42	: out std_logic := '0';
    CZO43	: out std_logic := '0';
    CZO44	: out std_logic := '0';
    CZO45	: out std_logic := '0';
    CZO46	: out std_logic := '0';
    CZO47	: out std_logic := '0';
    CZO48	: out std_logic := '0';
    CZO49	: out std_logic := '0';
    CZO50	: out std_logic := '0';
    CZO51	: out std_logic := '0';
    CZO52	: out std_logic := '0';
    CZO53	: out std_logic := '0';
    CZO54	: out std_logic := '0';
    CZO55	: out std_logic := '0';
    CZO56	: out std_logic := '0';

    D1	: in std_logic := '0';
    D2	: in std_logic := '0';
    D3	: in std_logic := '0';
    D4	: in std_logic := '0';
    D5	: in std_logic := '0';
    D6	: in std_logic := '0';
    D7	: in std_logic := '0';
    D8	: in std_logic := '0';
    D9	: in std_logic := '0';
    D10	: in std_logic := '0';
    D11	: in std_logic := '0';
    D12	: in std_logic := '0';
    D13	: in std_logic := '0';
    D14	: in std_logic := '0';
    D15	: in std_logic := '0';
    D16	: in std_logic := '0';
    D17	: in std_logic := '0';
    D18	: in std_logic := '0';

    OVF	: out std_logic := '0';
    R	: in std_logic := '0';
    RZ	: in std_logic := '0';
    WE	: in std_logic := '0';

    Z1	: out std_logic := '0';
    Z2	: out std_logic := '0';
    Z3	: out std_logic := '0';
    Z4	: out std_logic := '0';
    Z5	: out std_logic := '0';
    Z6	: out std_logic := '0';
    Z7	: out std_logic := '0';
    Z8	: out std_logic := '0';
    Z9	: out std_logic := '0';
    Z10	: out std_logic := '0';
    Z11	: out std_logic := '0';
    Z12	: out std_logic := '0';
    Z13	: out std_logic := '0';
    Z14	: out std_logic := '0';
    Z15	: out std_logic := '0';
    Z16	: out std_logic := '0';
    Z17	: out std_logic := '0';
    Z18	: out std_logic := '0';
    Z19	: out std_logic := '0';
    Z20	: out std_logic := '0';
    Z21	: out std_logic := '0';
    Z22	: out std_logic := '0';
    Z23	: out std_logic := '0';
    Z24	: out std_logic := '0';
    Z25	: out std_logic := '0';
    Z26	: out std_logic := '0';
    Z27	: out std_logic := '0';
    Z28	: out std_logic := '0';
    Z29	: out std_logic := '0';
    Z30	: out std_logic := '0';
    Z31	: out std_logic := '0';
    Z32	: out std_logic := '0';
    Z33	: out std_logic := '0';
    Z34	: out std_logic := '0';
    Z35	: out std_logic := '0';
    Z36	: out std_logic := '0';
    Z37	: out std_logic := '0';
    Z38	: out std_logic := '0';
    Z39	: out std_logic := '0';
    Z40	: out std_logic := '0';
    Z41	: out std_logic := '0';
    Z42	: out std_logic := '0';
    Z43	: out std_logic := '0';
    Z44	: out std_logic := '0';
    Z45	: out std_logic := '0';
    Z46	: out std_logic := '0';
    Z47	: out std_logic := '0';
    Z48	: out std_logic := '0';
    Z49	: out std_logic := '0';
    Z50	: out std_logic := '0';
    Z51	: out std_logic := '0';
    Z52	: out std_logic := '0';
    Z53	: out std_logic := '0';
    Z54	: out std_logic := '0';
    Z55	: out std_logic := '0';
    Z56	: out std_logic := '0'
);
end component NX_DSP;

component NX_DSP_WRAP is
generic (
    std_mode    : string := "";
    raw_config0 : bit_vector(19 downto 0) := B"00000000000000000000";        -- MUX
    raw_config1 : bit_vector(18 downto 0) := B"0000000000000000000";         -- PRC
    raw_config2 : bit_vector(12 downto 0) := B"0000000000000";               -- PRR
    raw_config3 : bit_vector( 6 downto 0) := B"0000000"                      -- ALU
);
port (
    A	: in std_logic_vector(23 downto 0) := (others => '0');
    B	: in std_logic_vector(17 downto 0) := (others => '0');
    C	: in std_logic_vector(35 downto 0) := (others => '0');

    CAI	: in std_logic_vector(17 downto 0) := (others => '0');
    CAO	: out std_logic_vector(17 downto 0) := (others => '0');
    CBI	: in std_logic_vector(17 downto 0) := (others => '0');
    CBO	: out std_logic_vector(17 downto 0) := (others => '0');

    CCI	: in std_logic := '0';
    CCO	: out std_logic := '0';
    CI	: in std_logic := '0';
    CK	: in std_logic := '0';
    CO	: out std_logic := '0';
    CO37	: out std_logic := '0';
    CO49	: out std_logic := '0';

    CZI	: in std_logic_vector(55 downto 0) := (others => '0');
    CZO	: out std_logic_vector(55 downto 0) := (others => '0');

    D	: in std_logic_vector(17 downto 0) := (others => '0');

    OVF	: out std_logic := '0';
    R	: in std_logic := '0';
    RZ	: in std_logic := '0';
    WE	: in std_logic := '0';

    Z	: out std_logic_vector(55 downto 0) := (others => '0')
);
end component NX_DSP_WRAP;

component NX_DSP_SPLIT is
generic (
-------------------------------------------------------------------------
-- Generic declaration to define the "raw_config0" (cfg_mode). Defines :
------------------------------------------------------------------------- 
   SIGNED_MODE          : bit                    := '0';
   PRE_ADDER_OP         : bit                    := '0';       -- '0' = Additon, '1' = Subraction
   MUX_A                : bit                    := '0';       -- '0' = A input, '1' = CAI input
   MUX_B                : bit                    := '0';       -- '0' = B input, '1' = CBI input
   MUX_P                : bit                    := '0';       -- '0' for PRE_ADDER, '0' for B input
   MUX_X                : bit_vector(1 downto 0) := B"00";     -- Select X operand   "00" = C,
                                                               --                    "01" = CZI,
                                                               --                    "11" = SHFT(CZI) & C(11:0),
                                                               --                    "10" Select Z feedback
   MUX_Y                : bit                    := '0';       -- '0' Select MULT output, '1' for (B & A)
   MUX_CI               : bit                    := '0';       -- Select fabric input (not cascade)
   MUX_Z                : bit                    := '0';       -- Select ALU output
                                                               -- (not ALU input operand coming from PR_Y)

   Z_FEEDBACK_SHL12     : bit                    := '0';       -- '0' for No shift, '1' for 12-bit left shift
   ENABLE_SATURATION    : bit                    := '0';       -- '0' for Disable,  '1' for Enable
   SATURATION_RANK      : bit_vector(5 downto 0) := B"000000"; -- Weight of useful MSB
                                                               --        on Z and CZO result
                                                               --(to define saturation and overflow)

   ALU_DYNAMIC_OP       : bit                    := '0';       -- '0' for Static,
                                                               -- '1' for Dynamic
                                                               -- (D6 ... D1 is not used for dynamic operation)
   CO_SEL               : bit                    := '0';       -- '0' for C0 = ALU(36), '1' for CO = ALU(48)

-------------------------------------------------------------------------
-- Generic declaration to define the "raw_config1" (cfg_pipe_mux)
-------------------------------------------------------------------------
   PR_A_MUX                : bit_vector(1 downto 0) := B"00"; -- Number of pipe reg levels
                                                              --        on A input
   PR_A_CASCADE_MUX        : bit_vector(1 downto 0) := B"00"; -- Number of pipe reg levels
                                                              --        for CAO output
   PR_B_MUX                : bit_vector(1 downto 0) := B"00"; -- Number of pipe reg levels
                                                              --        on B input
   PR_B_CASCADE_MUX        : bit_vector(1 downto 0) := B"00"; -- Number of pipe reg levels
                                                              --        for CAO output

   PR_C_MUX                : bit                    := '0';   -- '0' for No pipe reg, '1' for 1 pipe reg
   PR_D_MUX                : bit                    := '0';   -- '0' for No pipe reg, '1' for 1 pipe reg
   PR_CI_MUX               : bit                    := '0';   -- '0' for No pipe reg, '1' for 1 pipe reg
   PR_P_MUX                : bit                    := '0';   -- '0' for No pipe reg, '1' for 1 pipe reg (Pre-adder)
   PR_X_MUX                : bit                    := '0';   -- '0' for No pipe reg, '1' for 1 pipe reg
   PR_Y_MUX                : bit                    := '0';   -- '0' for No pipe reg, '1' for 1 pipe reg

   PR_MULT_MUX             : bit                    := '0';   -- No pipe reg  -- Register inside MULT
   PR_ALU_MUX              : bit                    := '0';   -- No pipe reg  -- Register inside ALU
   PR_Z_MUX                : bit                    := '0';   -- Registered output

   PR_CO_MUX               : bit                    := '0';   -- '0' for No pipe reg, '1' for 1 pipe reg
   PR_OV_MUX               : bit                    := '0';   -- '0' for No pipe reg, '1' for 1 pipe reg

-------------------------------------------------------------------------
-- Generic declaration to define the "raw_config2" (cfg_pipe_rst)
-------------------------------------------------------------------------
   ENABLE_PR_A_RST         : bit                    := '0';   -- '0' for Disable, '1' for Enable 
   ENABLE_PR_B_RST         : bit                    := '0';   -- '0' for Disable, '1' for Enable 
   ENABLE_PR_C_RST         : bit                    := '0';   -- '0' for Disable, '1' for Enable 
   ENABLE_PR_D_RST         : bit                    := '0';   -- '0' for Disable, '1' for Enable 
   ENABLE_PR_CI_RST        : bit                    := '0';   -- '0' for Disable, '1' for Enable 
   ENABLE_PR_P_RST         : bit                    := '0';   -- '0' for Disable, '1' for Enable 
   ENABLE_PR_X_RST         : bit                    := '0';   -- '0' for Disable, '1' for Enable 
   ENABLE_PR_Y_RST         : bit                    := '0';   -- '0' for Disable, '1' for Enable 
   ENABLE_PR_MULT_RST      : bit                    := '0';   -- '0' for Disable, '1' for Enable 
   ENABLE_PR_ALU_RST       : bit                    := '0';   -- '0' for Disable, '1' for Enable 
   ENABLE_PR_Z_RST         : bit                    := '0';   -- '0' for Disable, '1' for Enable 
   ENABLE_PR_CO_RST        : bit                    := '0';   -- '0' for Disable, '1' for Enable 
   ENABLE_PR_OV_RST        : bit                    := '0';   -- '0' for Disable, '1' for Enable 

-------------------------------------------------------------------------
-- Constants declaration to define the "cfg_pipe_rst" -- raw_config3(6 downto 0)
-------------------------------------------------------------------------
   ALU_OP                  : bit_vector(5 downto 0) := B"000000"; -- Addition = "000000", Subtract = "001010"
   ALU_MUX                 : bit                    := '0'        -- '0' for Don't swap ALU operands,
                                                                  -- '1' for ALU Swap operands
    );
port (
    CK	: IN std_logic := '0';
    R	: IN std_logic := '0';
    RZ	: IN std_logic := '0';
    WE	: IN std_logic := '0';

    CI	: IN std_logic := '0';
    A	: IN std_logic_vector(23 downto 0) := (others => '0');
    B	: IN std_logic_vector(17 downto 0) := (others => '0');
    C	: IN std_logic_vector(35 downto 0) := (others => '0');
    D	: IN std_logic_vector(17 downto 0) := (others => '0');
    CAI	: IN std_logic_vector(17 downto 0) := (others => '0');
    CBI	: IN std_logic_vector(17 downto 0) := (others => '0');
    CZI	: IN std_logic_vector(55 downto 0) := (others => '0');
    CCI	: IN std_logic := '0';

    Z	: out std_logic_vector(55 downto 0) := (others => '0');
    CO	: OUT std_logic := '0';
    CO36	: OUT std_logic := '0';
    CO48	: OUT std_logic := '0';
    OVF	: OUT std_logic := '0';
    CAO	: OUT std_logic_vector(17 downto 0) := (others => '0');
    CBO	: OUT std_logic_vector(17 downto 0) := (others => '0');
    CZO	: OUT std_logic_vector(55 downto 0) := (others => '0');
    CCO	: OUT std_logic := '0'
  );
end component NX_DSP_SPLIT;

component NX_PLL is
generic (
    location     : string := "";

    vco_range    : integer   range 0 to 2 := 0;   -- 0 to 3
    ref_div_on   : bit := '0';                    -- bypass :: %2
    fbk_div_on   : bit := '0';                    -- bypass :: %2
    ext_fbk_on   : bit := '0';                    -- 0: disabled - 1: enabled

    fbk_intdiv   : integer   range 1 to 31 := 2;  -- 0 to 31  (%1 to %32)

    fbk_delay_on : bit := '0';                    -- 0: no delay - 1: delay
    fbk_delay    : integer   range 0 to 63 := 0;  -- 0 to 63

    clk_outdiv1  : integer   range 0 to 7 := 0;   -- 0 to 7   (%1 to %2^7)
    clk_outdiv2  : integer   range 0 to 7 := 0;   -- 0 to 7   (%1 to %2^7)
    clk_outdiv3  : integer   range 0 to 7 := 0    -- 0 to 7   (%1 to %2^7)
);
port (
    REF	: in std_logic := '0';
    FBK	: in std_logic := '0';

    VCO	: out std_logic := '0';

    D1	: out std_logic := '0';
    D2	: out std_logic := '0';
    D3	: out std_logic := '0';
    OSC	: out std_logic := '0';

    RDY	: out std_logic := '0'
);
end component NX_PLL;

component NX_WFG is
generic (
    location    : string := "";

    wfg_edge    : bit := '0';                              -- 0: no invert / Rising
    mode        : bit := '0';                              -- 0: no pattern - 1: pattern

    pattern_end : integer   range 0 to 15 := 1;            -- 0: to 15 (1 step to 16 steps)
    pattern     : bit_vector(0 to 15) := (others => '0');  -- pattern p0 ... p15

    delay_on    : bit := '0';                              -- 0: no delay - 1: delay
    delay       : integer   range 0 to 63 := 0             -- 0 to 63 (1 unit to 64 unit)
);
port (
    SI	: in std_logic := '0';
    ZI	: in std_logic := '0';
    RDY	: in std_logic := '1';
    SO	: out std_logic := '0';
    ZO	: out std_logic := '0'
);
end component NX_WFG;

-- beware following components are only intended for internal use. Do not try to instantiate them.
component NX_BUFFER is
port (
    I	: in std_logic := '0';
    O	: out std_logic := '0'
);
end component NX_BUFFER;

component NX_CSC is
port (
    I	: in std_logic := '0';
    O	: out std_logic := '0'
);
end component NX_CSC;

component NX_SCC is
port (
    I	: in std_logic := '0';
    O	: out std_logic := '0'
);
end component NX_SCC;

component NX_syn_tp is
port (
    I	: in std_logic := '0'
);
end component NX_syn_tp;

component NX_BD is
generic (
    system: bit := '1'
);
port (
    I	: in std_logic := '0';
    O	: out std_logic := '0'
);
end component NX_BD;

component NX_SER is
generic (
    data_size            : integer range 2 to 10 := 5;	-- Number of serialization factor
    location             : string := "";		-- Pad location
    standard             : string := "";		-- Pad electrical standard
    drive                : string := "";		-- Pad electrical drive
    differential         : string := "";		-- Single ended ("0") or differential ("1")
    slewRate             : string := "";		-- Slow, Medium or Fast
    outputDelayLine      : string := "";		-- "0_to_63_delay_value"
    outputCapacity       : string := "";		-- 0 to 40 (value in pF)
    -- Delay Control
    spath_dynamic        : bit := '0'			-- 0: off/fixed delay, 1: dynamic delay

);
port (
    FCK	: in std_logic := '0';
    SCK	: in std_logic := '0';
    R	: in std_logic := '0';
    I	: in std_logic_vector(data_size - 1 downto 0) := (others => '0');
    IO	: out std_logic := '0';
    -- Delay Control
    DCK	: in std_logic := '0';
    DRL	: in std_logic := '0';
    DS	: in std_logic_vector(1 downto 0) := (others => '0');
    DRA	: in std_logic_vector(5 downto 0) := (others => '0');
    DRI	: in std_logic_vector(5 downto 0) := (others => '0');
    DRO	: out std_logic_vector(5 downto 0) := (others => '0');
    DID	: out std_logic_vector(5 downto 0) := (others => '0')
);
end component NX_SER;

component NX_DES is
generic (
    data_size            : integer range 2 to 10 := 5;	-- -- Pad locationNumber of deserialization factor
    location             : string := "";		-- Pad location
    standard             : string := "";		-- Pad electrical standard
    drive                : string := "";		-- Pad electrical drive
    differential         : string := "";		-- Single ended ("0") or differential ("1")
    termination          : string := "";		-- Input impedance adaptatio    terminationReference : string := "";
    terminationReference : string := "";		-- "floating" or "VTT"
    turbo                : string := "";		-- Input impedance adaptation
    weakTermination      : string := "";		-- "floating" or "VTT"
    inputDelayLine       : string := "";		-- "0_to_63_delay_value"
    inputSignalSlope     : string := "";		-- Decimal value "0.5" to "20" (value in V/ns)
    -- Delay Control
    dpath_dynamic        : bit := '0'			-- 0: off/fixed delay, 1: dynamic delay

);
port (
    FCK	: in std_logic := '0';
    SCK	: in std_logic := '0';
    R	: in std_logic := '0';
    IO	: in std_logic := '0';
    O	: out std_logic_vector(data_size - 1 downto 0) := (others => '0');
    -- Delay Control
    DCK	: in std_logic := '0';
    DRL	: in std_logic := '0';
    DIG	: in std_logic := '0';
    DS	: in std_logic_vector(1 downto 0) := (others => '0');
    DRA	: in std_logic_vector(5 downto 0) := (others => '0');
    DRI	: in std_logic_vector(5 downto 0) := (others => '0');
    FZ	: in std_logic := '0';
    DRO	: out std_logic_vector(5 downto 0) := (others => '0');
    DID	: out std_logic_vector(5 downto 0) := (others => '0');
    FLD	: out std_logic := '0';
    FLG	: out std_logic := '0'
);
end component NX_DES;

component NX_SERDES is
generic (
    data_size            : integer range 2 to 10 := 5;	-- Serialiser/deserializer factor 
    location             : string := "";		-- Pad location
    standard             : string := "";		-- Pad electrical standard
    drive                : string := "";		-- Pad electrical drive
    differential         : string := "";		-- Single ended ("0" or differential ("1")
    slewRate             : string := "";		-- Slow, Medium or Fast
    termination          : string := "";		-- Input impedance adaptation
    terminationReference : string := "";		-- "floating" or "VTT"
    turbo                : string := "";		-- "true" or "false"
    weakTermination      : string := "";		-- "PullUp" or "None"
    inputDelayLine       : string := "";		-- "O_to_63_delay_value"
    outputDelayLine      : string := "";		-- "O_to_63_delay_value"
    inputSignalSlope     : string := "";		-- Decimal value "0.5" to "20" (value in V/ns)
    outputCapacity       : string := "";		-- "0" to "40" (value in pF)
    cpath_registered     : bit := '0';			-- Use Register in Enable Path ('1')
    -- Delay Control
    spath_dynamic        : bit := '0';			-- 0: off/fixed delay, 1: dynamic delay
    dpath_dynamic        : bit := '0'			-- 0: off/fixed delay, 1: dynamic delay
);
port (
    FCK	: in std_logic := '0';
    SCK	: in std_logic := '0';
    RTX	: in std_logic := '0';
    RRX	: in std_logic := '0';
    CI	: in std_logic := '0';
    CCK	: in std_logic := '0';
    CL	: in std_logic := '0';
    CR	: in std_logic := '0';
    I	: in std_logic_vector(data_size - 1 downto 0) := (others => '0');
    IO	: inout std_logic := '0';
    O	: out std_logic_vector(data_size - 1 downto 0) := (others => '0');
    -- Delay Control
    DCK	: in std_logic := '0';
    DRL	: in std_logic := '0';
    DIG	: in std_logic := '0';
    DS	: in std_logic_vector(1 downto 0) := (others => '0');
    DRA	: in std_logic_vector(5 downto 0) := (others => '0');
    DRI	: in std_logic_vector(5 downto 0) := (others => '0');
    FZ	: in std_logic := '0';
    DRO	: out std_logic_vector(5 downto 0) := (others => '0');
    DID	: out std_logic_vector(5 downto 0) := (others => '0');
    FLD	: out std_logic := '0';
    FLG	: out std_logic := '0'
);
end component NX_SERDES;

component NX_RAM is
generic (
   std_mode     : string := ""; -- standard mode [FAST_2kx18, SLOW_2kx18, NOECNOECC24, ...] empty for raw
   mcka_edge    : bit := '0';   -- 0: rising edge for port A clock - 1: falling edge
   mckb_edge    : bit := '0';   -- 0: rising edge for port B clock - 1: falling edge
   pcka_edge    : bit := '0';   -- 0: rising edge for pipe A clock - 1: falling edge
   pckb_edge    : bit := '0';   -- 0: rising edge for pipe B clock - 1: falling edge
   pipe_ia      : bit := '0';   -- 0: no pipe on port A input  - 1: pipe on port A input
   pipe_ib      : bit := '0';   -- 0: no pipe on port B input  - 1: pipe on port B input
   pipe_oa      : bit := '0';   -- 0: no pipe on port A output - 1: pipe on port A output
   pipe_ob      : bit := '0';   -- 0: no pipe on port B output - 1: pipe on port B output

   raw_config0  : bit_vector( 3 downto 0) := B"0000";			-- PRC
   raw_config1  : bit_vector(15 downto 0) := B"0000000000000000";	-- MOD

   -- For specific NG_LARGE Extended Features
   raw_l_enable : bit := '0';                         -- '0' for NG-MEDIUM, '1' for NG-LARGE extended modes (NO_ECC x3 & x6) + scrubbing, test...
   raw_l_extend : bit_vector( 3 downto 0) := B"0000"; -- Extended modes for NG-LARGE (Scrubbing, test... )

   mem_ctxt     : string := ""                        -- context initialization
   );
port (
    ACK	: in std_logic := '0';
    ACKC	: in std_logic := '0';
    ACKD	: in std_logic := '0';
    ACKR	: in std_logic := '0';
    BCK	: in std_logic := '0';
    BCKC	: in std_logic := '0';
    BCKD	: in std_logic := '0';
    BCKR	: in std_logic := '0';

    AI1	: in std_logic := '0';
    AI2	: in std_logic := '0';
    AI3	: in std_logic := '0';
    AI4	: in std_logic := '0';
    AI5	: in std_logic := '0';
    AI6	: in std_logic := '0';
    AI7	: in std_logic := '0';
    AI8	: in std_logic := '0';
    AI9	: in std_logic := '0';
    AI10	: in std_logic := '0';
    AI11	: in std_logic := '0';
    AI12	: in std_logic := '0';
    AI13	: in std_logic := '0';
    AI14	: in std_logic := '0';
    AI15	: in std_logic := '0';
    AI16	: in std_logic := '0';

    AI17	: in std_logic := '0';
    AI18	: in std_logic := '0';
    AI19	: in std_logic := '0';
    AI20	: in std_logic := '0';
    AI21	: in std_logic := '0';
    AI22	: in std_logic := '0';
    AI23	: in std_logic := '0';
    AI24	: in std_logic := '0';

    BI1	: in std_logic := '0';
    BI2	: in std_logic := '0';
    BI3	: in std_logic := '0';
    BI4	: in std_logic := '0';
    BI5	: in std_logic := '0';
    BI6	: in std_logic := '0';
    BI7	: in std_logic := '0';
    BI8	: in std_logic := '0';
    BI9	: in std_logic := '0';
    BI10	: in std_logic := '0';
    BI11	: in std_logic := '0';
    BI12	: in std_logic := '0';
    BI13	: in std_logic := '0';
    BI14	: in std_logic := '0';
    BI15	: in std_logic := '0';
    BI16	: in std_logic := '0';

    BI17	: in std_logic := '0';
    BI18	: in std_logic := '0';
    BI19	: in std_logic := '0';
    BI20	: in std_logic := '0';
    BI21	: in std_logic := '0';
    BI22	: in std_logic := '0';
    BI23	: in std_logic := '0';
    BI24	: in std_logic := '0';

    ACOR	: out std_logic := '0';
    AERR	: out std_logic := '0';
    BCOR	: out std_logic := '0';
    BERR	: out std_logic := '0';

    AO1	: out std_logic := '0';
    AO2	: out std_logic := '0';
    AO3	: out std_logic := '0';
    AO4	: out std_logic := '0';
    AO5	: out std_logic := '0';
    AO6	: out std_logic := '0';
    AO7	: out std_logic := '0';
    AO8	: out std_logic := '0';
    AO9	: out std_logic := '0';
    AO10	: out std_logic := '0';
    AO11	: out std_logic := '0';
    AO12	: out std_logic := '0';
    AO13	: out std_logic := '0';
    AO14	: out std_logic := '0';
    AO15	: out std_logic := '0';
    AO16	: out std_logic := '0';

    AO17	: out std_logic := '0';
    AO18	: out std_logic := '0';
    AO19	: out std_logic := '0';
    AO20	: out std_logic := '0';
    AO21	: out std_logic := '0';
    AO22	: out std_logic := '0';
    AO23	: out std_logic := '0';
    AO24	: out std_logic := '0';

    BO1	: out std_logic := '0';
    BO2	: out std_logic := '0';
    BO3	: out std_logic := '0';
    BO4	: out std_logic := '0';
    BO5	: out std_logic := '0';
    BO6	: out std_logic := '0';
    BO7	: out std_logic := '0';
    BO8	: out std_logic := '0';
    BO9	: out std_logic := '0';
    BO10	: out std_logic := '0';
    BO11	: out std_logic := '0';
    BO12	: out std_logic := '0';
    BO13	: out std_logic := '0';
    BO14	: out std_logic := '0';
    BO15	: out std_logic := '0';
    BO16	: out std_logic := '0';

    BO17	: out std_logic := '0';
    BO18	: out std_logic := '0';
    BO19	: out std_logic := '0';
    BO20	: out std_logic := '0';
    BO21	: out std_logic := '0';
    BO22	: out std_logic := '0';
    BO23	: out std_logic := '0';
    BO24	: out std_logic := '0';

    AA1	: in std_logic := '0';
    AA2	: in std_logic := '0';
    AA3	: in std_logic := '0';
    AA4	: in std_logic := '0';
    AA5	: in std_logic := '0';
    AA6	: in std_logic := '0';

    AA7	: in std_logic := '0';
    AA8	: in std_logic := '0';
    AA9	: in std_logic := '0';
    AA10	: in std_logic := '0';
    AA11	: in std_logic := '0';
    AA12	: in std_logic := '0';
    AA13	: in std_logic := '0';
    AA14	: in std_logic := '0';
    AA15	: in std_logic := '0';
    AA16	: in std_logic := '0';

    ACS	: in std_logic := '0';
    AWE	: in std_logic := '0';
    AR	: in std_logic := '0';

    BA1	: in std_logic := '0';
    BA2	: in std_logic := '0';
    BA3	: in std_logic := '0';
    BA4	: in std_logic := '0';
    BA5	: in std_logic := '0';
    BA6	: in std_logic := '0';

    BA7	: in std_logic := '0';
    BA8	: in std_logic := '0';
    BA9	: in std_logic := '0';
    BA10	: in std_logic := '0';
    BA11	: in std_logic := '0';
    BA12	: in std_logic := '0';
    BA13	: in std_logic := '0';
    BA14	: in std_logic := '0';
    BA15	: in std_logic := '0';
    BA16	: in std_logic := '0';

    BCS	: in std_logic := '0';
    BWE	: in std_logic := '0';
    BR	: in std_logic := '0'
);
end component NX_RAM;

component NX_RAM_WRAP is
generic (
   std_mode     : string := ""; -- standard mode [FAST_2kx18, SLOW_2kx18, NOECNOECC24, ...] empty for raw
   mcka_edge    : bit := '0';   -- 0: rising edge for port A clock - 1: falling edge
   mckb_edge    : bit := '0';   -- 0: rising edge for port B clock - 1: falling edge
   pcka_edge    : bit := '0';   -- 0: rising edge for pipe A clock - 1: falling edge
   pckb_edge    : bit := '0';   -- 0: rising edge for pipe B clock - 1: falling edge

   pipe_ia      : bit := '0';   -- 0: no pipe on port A input  - 1: pipe on port A input
   pipe_ib      : bit := '0';   -- 0: no pipe on port B input  - 1: pipe on port B input
   pipe_oa      : bit := '0';   -- 0: no pipe on port A output - 1: pipe on port A output
   pipe_ob      : bit := '0';   -- 0: no pipe on port B output - 1: pipe on port B output

   raw_config0  : bit_vector( 3 downto 0) := B"0000";			-- PRC
   raw_config1  : bit_vector(15 downto 0) := B"0000000000000000";	-- MOD

   -- For specific NG_LARGE Extended Features
   raw_l_enable : bit := '0';                          -- '0' for NG-MEDIUM, '1' for NG-LARGE extended modes (NO_ECC x3 & x6) + scrubbing, test...
   raw_l_extend : bit_vector( 3 downto 0) := B"0000";  -- Extended modes for NG-LARGE (Scrubbing, test... )

   mem_ctxt     : string := ""                         -- context initialization
);
port (
    ACK	: in std_logic := '0';
    ACKD	: in std_logic := '0';
    ACKR	: in std_logic := '0';
    BCK	: in std_logic := '0';
    BCKD	: in std_logic := '0';
    BCKR	: in std_logic := '0';

    AI	: in std_logic_vector(23 downto 0) := (others => '0');
    BI	: in std_logic_vector(23 downto 0) := (others => '0');

    ACOR	: out std_logic := '0';
    AERR	: out std_logic := '0';
    BCOR	: out std_logic := '0';
    BERR	: out std_logic := '0';

    AO	: out std_logic_vector(23 downto 0) := (others => '0');
    BO	: out std_logic_vector(23 downto 0) := (others => '0');
    AA	: in std_logic_vector(15 downto 0) := (others => '0');

    ACS	: in std_logic := '0';
    AWE	: in std_logic := '0';
    AR	: in std_logic := '0';

    BA	: in std_logic_vector(15 downto 0) := (others => '0');

    BCS	: in std_logic := '0';
    BWE	: in std_logic := '0';
    BR	: in std_logic := '0'
);
end component NX_RAM_WRAP;

component NX_ECC is
port (
    CKD	: in std_logic := '0';
    CHK	: in std_logic := '0';
    COR	: out std_logic := '0';
    ERR	: out std_logic := '0'
    );
end component NX_ECC;


end nxPackage;
-- =================================================================================================
--   NX_IOB definition                                                                  2017/09/04
-- =================================================================================================

library ieee;
use ieee.std_logic_1164.all;

entity NX_IOB_I is
generic (
    location             : string := "";
    standard             : string := "";
    drive                : string := "";
    differential         : string := "";
    slewRate             : string := "";
    termination          : string := "";
    terminationReference : string := "";
    turbo                : string := "";
    weakTermination      : string := "";
    inputDelayLine       : string := "";
    outputDelayLine      : string := "";
    inputSignalSlope     : string := "";
    outputCapacity       : string := "";
    locked               : bit    := '0'
);
port (
    I  : in  std_logic;
    C  : in  std_logic;
    T  : in  std_logic;
    IO : in  std_logic;
    O  : out std_logic
);
end NX_IOB_I;

architecture NX_RTL of NX_IOB_I is
    attribute NX_TYPE: string;
    attribute NX_TYPE of NX_RTL: architecture is "PHY";

    attribute NX_USE: string;
    attribute NX_USE of NX_RTL: architecture is "NX_IOB";
begin
end NX_RTL;

----------------------------------------------------------------------------------------------------

library ieee;
use ieee.std_logic_1164.all;

entity NX_IOB_O is
generic (
    location             : string := "";
    standard             : string := "";
    drive                : string := "";
    differential         : string := "";
    slewRate             : string := "";
    termination          : string := "";
    terminationReference : string := "";
    turbo                : string := "";
    weakTermination      : string := "";
    inputDelayLine       : string := "";
    outputDelayLine      : string := "";
    inputSignalSlope     : string := "";
    outputCapacity       : string := "";
    locked               : bit    := '0'
);
port (
    I  : in  std_logic;
    C  : in  std_logic;
    T  : in  std_logic;
    O  : out std_logic;
    IO : out std_logic
);
end NX_IOB_O;

architecture NX_RTL of NX_IOB_O is
    attribute NX_TYPE: string;
    attribute NX_TYPE of NX_RTL: architecture is "PHY";

    attribute NX_USE: string;
    attribute NX_USE of NX_RTL: architecture is "NX_IOB";
begin
end NX_RTL;

----------------------------------------------------------------------------------------------------

library ieee;
use ieee.std_logic_1164.all;

entity NX_IOB is
generic (
    location             : string := "";
    standard             : string := "";
    drive                : string := "";
    differential         : string := "";
    slewRate             : string := "";
    termination          : string := "";
    terminationReference : string := "";
    turbo                : string := "";
    weakTermination      : string := "";
    inputDelayLine       : string := "";
    outputDelayLine      : string := "";
    inputSignalSlope     : string := "";
    outputCapacity       : string := "";
    locked               : bit    := '0'
);
port (
    I  : in    std_logic;
    C  : in    std_logic;
    T  : in    std_logic;
    O  : out   std_logic;
    IO : inout std_logic
);
end NX_IOB;

architecture NX_RTL of NX_IOB is
    attribute NX_TYPE: string;
    attribute NX_TYPE of NX_RTL: architecture is "PHY";

    attribute NX_USE: string;
    attribute NX_USE of NX_RTL: architecture is "NX_IOB";
begin
end NX_RTL;

----------------------------------------------------------------------------------------------------

`protect begin_protected
`protect version = 1
`protect encrypt_agent = "NanoXplore"
`protect key_keyowner = "Mentor Graphics Corporation", key_keyname = "MGC-VERIF-SIM-RSA-2", key_method = "rsa"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 256)
`protect key_block
h8JbdEpCSeGfVerJMQ7VH9LjaO8jqdnuHd+920KPUC93Cxgg4+z0BIJsNA7IKD8l
o4SXTAILrFEnzRA3ayrLOciNoOSdFrDsox9EvNZeOdcwGtmnHwfnE56zMVKn3zpZ
UVwPp4bJeilUJdxNoP33oqvU8N5Rlh3yATrH0IfLe8noPfKF3Nk8joGPxJ4ge16w
IP1Ktj0y6oi313W8rNQExrqaAgFY1FRN+26hljAaRZR3ZkibCLSPQQGiT01rtM/r
bKSEkjvAzs/YJ2N5VBUhtvYynKEtCxDUIMmLSADyuQQexyRRCvWitwyRPGrE5gIg
2+Bct+YLIAOeJDaCPK1kNg==
`protect data_method = "aes256-cbc"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 2624)
`protect data_block
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
`protect end_protected

-- =================================================================================================
--   NX_IOM definition                                                                  2017/09/04
-- =================================================================================================

library ieee;
use ieee.std_logic_1164.all;
use ieee.std_logic_unsigned.all;
use ieee.numeric_std.all;

library NX;
use NX.nxPackage.all;

entity NX_IOM is
generic (
    mode_side1   : integer := 0;
    sel_clkw_rx1 : bit_vector(1 downto 0) := "00";
    sel_clkr_rx1 : bit := '0';
    div_tx1      : bit_vector(3 downto 0) := "0000";
    div_rx1      : bit_vector(3 downto 0) := "0000";
--  inv_di_fclk1 : bit := '0';
--  latency1     : bit := '0';
    mode_side2   : integer := 0;
    sel_clkw_rx2 : bit_vector(1 downto 0) := "00";
    sel_clkr_rx2 : bit := '0';
    div_tx2      : bit_vector(3 downto 0) := "0000";
    div_rx2      : bit_vector(3 downto 0) := "0000";
--  inv_di_fclk2 : bit := '0';
--  latency2     : bit := '0';
--  sel_clk_out2 : bit_vector(1 downto 0) := "00";
--  sel_clk_out3 : bit_vector(1 downto 0) := "00";
    sel_clk_out1 : bit := '0';
    sel_clk_out2 : bit := '0';
    mode_io_cal  : bit := '0';
    pads_dict    : string := "";
    pads_path    : string := ""
);
port(
    RTCK1   : in    std_logic;
    RRCK1   : in    std_logic;
    WTCK1   : in    std_logic;
    WRCK1   : in    std_logic;
    RTCK2   : in    std_logic;
    RRCK2   : in    std_logic;
    WTCK2   : in    std_logic;
    WRCK2   : in    std_logic;
    CTCK    : in    std_logic;
    CCK     : in    std_logic;
    DCK     : in    std_logic;

    C1TW    : in    std_logic;
    C1TS    : in    std_logic;
    C1RW1   : in    std_logic;
    C1RW2   : in    std_logic;
    C1RW3   : in    std_logic;
    C1RNE   : in    std_logic;
    C1RS    : in    std_logic;
    C2TW    : in    std_logic;
    C2TS    : in    std_logic;
    C2RW1   : in    std_logic;
    C2RW2   : in    std_logic;
    C2RW3   : in    std_logic;
    C2RNE   : in    std_logic;
    C2RS    : in    std_logic;
    FA1     : in    std_logic;
    FA2     : in    std_logic;
    FA3     : in    std_logic;
    FA4     : in    std_logic;
    FA5     : in    std_logic;
    FZ      : in    std_logic;
    DC      : in    std_logic;
    SE      : in    std_logic;
    SCI     : in    std_logic;
    SPI1    : in    std_logic;
    SPI2    : in    std_logic;
    SPI3    : in    std_logic;
    SPI4    : in    std_logic;
    SPI5    : in    std_logic;
    SPI6    : in    std_logic;
    DRI1    : in    std_logic;
    DRI2    : in    std_logic;
    DRI3    : in    std_logic;
    DRI4    : in    std_logic;
    DRI5    : in    std_logic;
    DRI6    : in    std_logic;
    DRA1    : in    std_logic;
    DRA2    : in    std_logic;
    DRA3    : in    std_logic;
    DRA4    : in    std_logic;
    DRA5    : in    std_logic;
    DRL     : in    std_logic;
    DOS     : in    std_logic;
    DOG     : in    std_logic;
    DIS     : in    std_logic;
    DIG     : in    std_logic;
    DPAS    : in    std_logic;
    DPAG    : in    std_logic;
    DQSS    : in    std_logic;
    DQSG    : in    std_logic;
    DS1     : in    std_logic;
    DS2     : in    std_logic;
    CAD1    : in    std_logic;
    CAD2    : in    std_logic;
    CAD3    : in    std_logic;
    CAD4    : in    std_logic;
    CAD5    : in    std_logic;
    CAD6    : in    std_logic;
    CAP1    : in    std_logic;
    CAP2    : in    std_logic;
    CAP3    : in    std_logic;
    CAP4    : in    std_logic;
    CAN1    : in    std_logic;
    CAN2    : in    std_logic;
    CAN3    : in    std_logic;
    CAN4    : in    std_logic;
    CAT1    : in    std_logic;
    CAT2    : in    std_logic;
    CAT3    : in    std_logic;
    CAT4    : in    std_logic;

    FLD     : out   std_logic;
    FLG     : out   std_logic;
    C1RED   : out   std_logic;
    C2RED   : out   std_logic;
    DRO1    : out   std_logic;
    DRO2    : out   std_logic;
    DRO3    : out   std_logic;
    DRO4    : out   std_logic;
    DRO5    : out   std_logic;
    DRO6    : out   std_logic;
    DRE     : out   std_logic;
    DRR     : out   std_logic;
    SCO     : out   std_logic;
    SPO1    : out   std_logic;
    SPO2    : out   std_logic;
    SPO3    : out   std_logic;
    SPO4    : out   std_logic;
    SPO5    : out   std_logic;

    P1CI1   : in    std_logic;
    P1CL    : in    std_logic;
    P1CR    : in    std_logic;
    P1CO    : out   std_logic;
    P1EI1   : in    std_logic;
    P1EI2   : in    std_logic;
    P1EI3   : in    std_logic;
    P1EI4   : in    std_logic;
    P1EI5   : in    std_logic;
    P1EL    : in    std_logic;
    P1ER    : in    std_logic;
    P1EO    : out   std_logic;
    P1RI    : in    std_logic;
    P1RL    : in    std_logic;
    P1RR    : in    std_logic;
    P1RO1   : out   std_logic;
    P1RO2   : out   std_logic;
    P1RO3   : out   std_logic;
    P1RO4   : out   std_logic;
    P1RO5   : out   std_logic;

    P2CI1   : in    std_logic;
    P2CL    : in    std_logic;
    P2CR    : in    std_logic;
    P2CO    : out   std_logic;
    P2EI1   : in    std_logic;
    P2EI2   : in    std_logic;
    P2EI3   : in    std_logic;
    P2EI4   : in    std_logic;
    P2EI5   : in    std_logic;
    P2EL    : in    std_logic;
    P2ER    : in    std_logic;
    P2EO    : out   std_logic;
    P2RI    : in    std_logic;
    P2RL    : in    std_logic;
    P2RR    : in    std_logic;
    P2RO1   : out   std_logic;
    P2RO2   : out   std_logic;
    P2RO3   : out   std_logic;
    P2RO4   : out   std_logic;
    P2RO5   : out   std_logic;

    P3CI1   : in    std_logic;
    P3CL    : in    std_logic;
    P3CR    : in    std_logic;
    P3CO    : out   std_logic;
    P3EI1   : in    std_logic;
    P3EI2   : in    std_logic;
    P3EI3   : in    std_logic;
    P3EI4   : in    std_logic;
    P3EI5   : in    std_logic;
    P3EL    : in    std_logic;
    P3ER    : in    std_logic;
    P3EO    : out   std_logic;
    P3RI    : in    std_logic;
    P3RL    : in    std_logic;
    P3RR    : in    std_logic;
    P3RO1   : out   std_logic;
    P3RO2   : out   std_logic;
    P3RO3   : out   std_logic;
    P3RO4   : out   std_logic;
    P3RO5   : out   std_logic;

    P4CI1   : in    std_logic;
    P4CL    : in    std_logic;
    P4CR    : in    std_logic;
    P4CO    : out   std_logic;
    P4EI1   : in    std_logic;
    P4EI2   : in    std_logic;
    P4EI3   : in    std_logic;
    P4EI4   : in    std_logic;
    P4EI5   : in    std_logic;
    P4EL    : in    std_logic;
    P4ER    : in    std_logic;
    P4EO    : out   std_logic;
    P4RI    : in    std_logic;
    P4RL    : in    std_logic;
    P4RR    : in    std_logic;
    P4RO1   : out   std_logic;
    P4RO2   : out   std_logic;
    P4RO3   : out   std_logic;
    P4RO4   : out   std_logic;
    P4RO5   : out   std_logic;

    P5CI1   : in    std_logic;
    P5CI2   : in    std_logic;	-- DQS
    P5CI3   : in    std_logic;	-- DQS
    P5CI4   : in    std_logic;	-- DQS
    P5CI5   : in    std_logic;	-- DQS
    P5CL    : in    std_logic;
    P5CR    : in    std_logic;
    P5CO    : out   std_logic;
    P5EI1   : in    std_logic;
    P5EI2   : in    std_logic;
    P5EI3   : in    std_logic;
    P5EI4   : in    std_logic;
    P5EI5   : in    std_logic;
    P5EL    : in    std_logic;
    P5ER    : in    std_logic;
    P5EO    : out   std_logic;
    P5RI    : in    std_logic;
    P5RL    : in    std_logic;
    P5RR    : in    std_logic;
    P5RO1   : out   std_logic;
    P5RO2   : out   std_logic;
    P5RO3   : out   std_logic;
    P5RO4   : out   std_logic;
    P5RO5   : out   std_logic;

    P6CI1   : in    std_logic;
    P6CL    : in    std_logic;
    P6CR    : in    std_logic;
    P6CO    : out   std_logic;
    P6EI1   : in    std_logic;
    P6EI2   : in    std_logic;
    P6EI3   : in    std_logic;
    P6EI4   : in    std_logic;
    P6EI5   : in    std_logic;
    P6EL    : in    std_logic;
    P6ER    : in    std_logic;
    P6EO    : out   std_logic;
    P6RI    : in    std_logic;
    P6RL    : in    std_logic;
    P6RR    : in    std_logic;
    P6RO1   : out   std_logic;
    P6RO2   : out   std_logic;
    P6RO3   : out   std_logic;
    P6RO4   : out   std_logic;
    P6RO5   : out   std_logic;

    P7CI1   : in    std_logic;
    P7CL    : in    std_logic;
    P7CR    : in    std_logic;
    P7CO    : out   std_logic;
    P7EI1   : in    std_logic;
    P7EI2   : in    std_logic;
    P7EI3   : in    std_logic;
    P7EI4   : in    std_logic;
    P7EI5   : in    std_logic;
    P7EL    : in    std_logic;
    P7ER    : in    std_logic;
    P7EO    : out   std_logic;
    P7RI    : in    std_logic;
    P7RL    : in    std_logic;
    P7RR    : in    std_logic;
    P7RO1   : out   std_logic;
    P7RO2   : out   std_logic;
    P7RO3   : out   std_logic;
    P7RO4   : out   std_logic;
    P7RO5   : out   std_logic;

    P8CI1   : in    std_logic;
    P8CL    : in    std_logic;
    P8CR    : in    std_logic;
    P8CO    : out   std_logic;
    P8EI1   : in    std_logic;
    P8EI2   : in    std_logic;
    P8EI3   : in    std_logic;
    P8EI4   : in    std_logic;
    P8EI5   : in    std_logic;
    P8EL    : in    std_logic;
    P8ER    : in    std_logic;
    P8EO    : out   std_logic;
    P8RI    : in    std_logic;
    P8RL    : in    std_logic;
    P8RR    : in    std_logic;
    P8RO1   : out   std_logic;
    P8RO2   : out   std_logic;
    P8RO3   : out   std_logic;
    P8RO4   : out   std_logic;
    P8RO5   : out   std_logic;

    P9CI1   : in    std_logic;
    P9CL    : in    std_logic;
    P9CR    : in    std_logic;
    P9CO    : out   std_logic;
    P9EI1   : in    std_logic;
    P9EI2   : in    std_logic;
    P9EI3   : in    std_logic;
    P9EI4   : in    std_logic;
    P9EI5   : in    std_logic;
    P9EL    : in    std_logic;
    P9ER    : in    std_logic;
    P9EO    : out   std_logic;
    P9RI    : in    std_logic;
    P9RL    : in    std_logic;
    P9RR    : in    std_logic;
    P9RO1   : out   std_logic;
    P9RO2   : out   std_logic;
    P9RO3   : out   std_logic;
    P9RO4   : out   std_logic;
    P9RO5   : out   std_logic;

    P10CI1  : in    std_logic;
    P10CL   : in    std_logic;
    P10CR   : in    std_logic;
    P10CO   : out   std_logic;
    P10EI1  : in    std_logic;
    P10EI2  : in    std_logic;
    P10EI3  : in    std_logic;
    P10EI4  : in    std_logic;
    P10EI5  : in    std_logic;
    P10EL   : in    std_logic;
    P10ER   : in    std_logic;
    P10EO   : out   std_logic;
    P10RI   : in    std_logic;
    P10RL   : in    std_logic;
    P10RR   : in    std_logic;
    P10RO1  : out   std_logic;
    P10RO2  : out   std_logic;
    P10RO3  : out   std_logic;
    P10RO4  : out   std_logic;
    P10RO5  : out   std_logic;

    P11CI1  : in    std_logic;
    P11CL   : in    std_logic;
    P11CR   : in    std_logic;
    P11CO   : out   std_logic;
    P11EI1  : in    std_logic;
    P11EI2  : in    std_logic;
    P11EI3  : in    std_logic;
    P11EI4  : in    std_logic;
    P11EI5  : in    std_logic;
    P11EL   : in    std_logic;
    P11ER   : in    std_logic;
    P11EO   : out   std_logic;
    P11RI   : in    std_logic;
    P11RL   : in    std_logic;
    P11RR   : in    std_logic;
    P11RO1  : out   std_logic;
    P11RO2  : out   std_logic;
    P11RO3  : out   std_logic;
    P11RO4  : out   std_logic;
    P11RO5  : out   std_logic;

    P12CI1  : in    std_logic;
    P12CL   : in    std_logic;
    P12CR   : in    std_logic;
    P12CO   : out   std_logic;
    P12EI1  : in    std_logic;
    P12EI2  : in    std_logic;
    P12EI3  : in    std_logic;
    P12EI4  : in    std_logic;
    P12EI5  : in    std_logic;
    P12EL   : in    std_logic;
    P12ER   : in    std_logic;
    P12EO   : out   std_logic;
    P12RI   : in    std_logic;
    P12RL   : in    std_logic;
    P12RR   : in    std_logic;
    P12RO1  : out   std_logic;
    P12RO2  : out   std_logic;
    P12RO3  : out   std_logic;
    P12RO4  : out   std_logic;
    P12RO5  : out   std_logic;

    P13CI1  : in    std_logic;
    P13CL   : in    std_logic;
    P13CR   : in    std_logic;
    P13CO   : out   std_logic;
    P13EI1  : in    std_logic;
    P13EI2  : in    std_logic;
    P13EI3  : in    std_logic;
    P13EI4  : in    std_logic;
    P13EI5  : in    std_logic;
    P13EL   : in    std_logic;
    P13ER   : in    std_logic;
    P13EO   : out   std_logic;
    P13RI   : in    std_logic;
    P13RL   : in    std_logic;
    P13RR   : in    std_logic;
    P13RO1  : out   std_logic;
    P13RO2  : out   std_logic;
    P13RO3  : out   std_logic;
    P13RO4  : out   std_logic;
    P13RO5  : out   std_logic;

    P14CI1  : in    std_logic;
    P14CL   : in    std_logic;
    P14CR   : in    std_logic;
    P14CO   : out   std_logic;
    P14EI1  : in    std_logic;
    P14EI2  : in    std_logic;
    P14EI3  : in    std_logic;
    P14EI4  : in    std_logic;
    P14EI5  : in    std_logic;
    P14EL   : in    std_logic;
    P14ER   : in    std_logic;
    P14EO   : out   std_logic;
    P14RI   : in    std_logic;
    P14RL   : in    std_logic;
    P14RR   : in    std_logic;
    P14RO1  : out   std_logic;
    P14RO2  : out   std_logic;
    P14RO3  : out   std_logic;
    P14RO4  : out   std_logic;
    P14RO5  : out   std_logic;

    P15CI1  : in    std_logic;
    P15CL   : in    std_logic;
    P15CR   : in    std_logic;
    P15CO   : out   std_logic;
    P15EI1  : in    std_logic;
    P15EI2  : in    std_logic;
    P15EI3  : in    std_logic;
    P15EI4  : in    std_logic;
    P15EI5  : in    std_logic;
    P15EL   : in    std_logic;
    P15ER   : in    std_logic;
    P15EO   : out   std_logic;
    P15RI   : in    std_logic;
    P15RL   : in    std_logic;
    P15RR   : in    std_logic;
    P15RO1  : out   std_logic;
    P15RO2  : out   std_logic;
    P15RO3  : out   std_logic;
    P15RO4  : out   std_logic;
    P15RO5  : out   std_logic;

    P16CI1  : in    std_logic;
    P16CL   : in    std_logic;
    P16CR   : in    std_logic;
    P16CO   : out   std_logic;
    P16EI1  : in    std_logic;
    P16EI2  : in    std_logic;
    P16EI3  : in    std_logic;
    P16EI4  : in    std_logic;
    P16EI5  : in    std_logic;
    P16EL   : in    std_logic;
    P16ER   : in    std_logic;
    P16EO   : out   std_logic;
    P16RI   : in    std_logic;
    P16RL   : in    std_logic;
    P16RR   : in    std_logic;
    P16RO1  : out   std_logic;
    P16RO2  : out   std_logic;
    P16RO3  : out   std_logic;
    P16RO4  : out   std_logic;
    P16RO5  : out   std_logic;

    P17CI1  : in    std_logic;
    P17CL   : in    std_logic;
    P17CR   : in    std_logic;
    P17CO   : out   std_logic;
    P17EI1  : in    std_logic;
    P17EI2  : in    std_logic;
    P17EI3  : in    std_logic;
    P17EI4  : in    std_logic;
    P17EI5  : in    std_logic;
    P17EL   : in    std_logic;
    P17ER   : in    std_logic;
    P17EO   : out   std_logic;
    P17RI   : in    std_logic;
    P17RL   : in    std_logic;
    P17RR   : in    std_logic;
    P17RO1  : out   std_logic;
    P17RO2  : out   std_logic;
    P17RO3  : out   std_logic;
    P17RO4  : out   std_logic;
    P17RO5  : out   std_logic;

    P18CI1  : in    std_logic;
    P18CL   : in    std_logic;
    P18CR   : in    std_logic;
    P18CO   : out   std_logic;
    P18EI1  : in    std_logic;
    P18EI2  : in    std_logic;
    P18EI3  : in    std_logic;
    P18EI4  : in    std_logic;
    P18EI5  : in    std_logic;
    P18EL   : in    std_logic;
    P18ER   : in    std_logic;
    P18EO   : out   std_logic;
    P18RI   : in    std_logic;
    P18RL   : in    std_logic;
    P18RR   : in    std_logic;
    P18RO1  : out   std_logic;
    P18RO2  : out   std_logic;
    P18RO3  : out   std_logic;
    P18RO4  : out   std_logic;
    P18RO5  : out   std_logic;

    P19CI1  : in    std_logic;
    P19CL   : in    std_logic;
    P19CR   : in    std_logic;
    P19CO   : out   std_logic;
    P19EI1  : in    std_logic;
    P19EI2  : in    std_logic;
    P19EI3  : in    std_logic;
    P19EI4  : in    std_logic;
    P19EI5  : in    std_logic;
    P19EL   : in    std_logic;
    P19ER   : in    std_logic;
    P19EO   : out   std_logic;
    P19RI   : in    std_logic;
    P19RL   : in    std_logic;
    P19RR   : in    std_logic;
    P19RO1  : out   std_logic;
    P19RO2  : out   std_logic;
    P19RO3  : out   std_logic;
    P19RO4  : out   std_logic;
    P19RO5  : out   std_logic;

    P20CI1  : in    std_logic;
    P20CL   : in    std_logic;
    P20CR   : in    std_logic;
    P20CO   : out   std_logic;
    P20EI1  : in    std_logic;
    P20EI2  : in    std_logic;
    P20EI3  : in    std_logic;
    P20EI4  : in    std_logic;
    P20EI5  : in    std_logic;
    P20EL   : in    std_logic;
    P20ER   : in    std_logic;
    P20EO   : out   std_logic;
    P20RI   : in    std_logic;
    P20RL   : in    std_logic;
    P20RR   : in    std_logic;
    P20RO1  : out   std_logic;
    P20RO2  : out   std_logic;
    P20RO3  : out   std_logic;
    P20RO4  : out   std_logic;
    P20RO5  : out   std_logic;

    P21CI1  : in    std_logic;
    P21CL   : in    std_logic;
    P21CR   : in    std_logic;
    P21CO   : out   std_logic;
    P21EI1  : in    std_logic;
    P21EI2  : in    std_logic;
    P21EI3  : in    std_logic;
    P21EI4  : in    std_logic;
    P21EI5  : in    std_logic;
    P21EL   : in    std_logic;
    P21ER   : in    std_logic;
    P21EO   : out   std_logic;
    P21RI   : in    std_logic;
    P21RL   : in    std_logic;
    P21RR   : in    std_logic;
    P21RO1  : out   std_logic;
    P21RO2  : out   std_logic;
    P21RO3  : out   std_logic;
    P21RO4  : out   std_logic;
    P21RO5  : out   std_logic;

    P22CI1  : in    std_logic;
    P22CL   : in    std_logic;
    P22CR   : in    std_logic;
    P22CO   : out   std_logic;
    P22EI1  : in    std_logic;
    P22EI2  : in    std_logic;
    P22EI3  : in    std_logic;
    P22EI4  : in    std_logic;
    P22EI5  : in    std_logic;
    P22EL   : in    std_logic;
    P22ER   : in    std_logic;
    P22EO   : out   std_logic;
    P22RI   : in    std_logic;
    P22RL   : in    std_logic;
    P22RR   : in    std_logic;
    P22RO1  : out   std_logic;
    P22RO2  : out   std_logic;
    P22RO3  : out   std_logic;
    P22RO4  : out   std_logic;
    P22RO5  : out   std_logic;

    P23CI1  : in    std_logic;
    P23CL   : in    std_logic;
    P23CR   : in    std_logic;
    P23CO   : out   std_logic;
    P23EI1  : in    std_logic;
    P23EI2  : in    std_logic;
    P23EI3  : in    std_logic;
    P23EI4  : in    std_logic;
    P23EI5  : in    std_logic;
    P23EL   : in    std_logic;
    P23ER   : in    std_logic;
    P23EO   : out   std_logic;
    P23RI   : in    std_logic;
    P23RL   : in    std_logic;
    P23RR   : in    std_logic;
    P23RO1  : out   std_logic;
    P23RO2  : out   std_logic;
    P23RO3  : out   std_logic;
    P23RO4  : out   std_logic;
    P23RO5  : out   std_logic;

    P24CI1  : in    std_logic;
    P24CL   : in    std_logic;
    P24CR   : in    std_logic;
    P24CO   : out   std_logic;
    P24EI1  : in    std_logic;
    P24EI2  : in    std_logic;
    P24EI3  : in    std_logic;
    P24EI4  : in    std_logic;
    P24EI5  : in    std_logic;
    P24EL   : in    std_logic;
    P24ER   : in    std_logic;
    P24EO   : out   std_logic;
    P24RI   : in    std_logic;
    P24RL   : in    std_logic;
    P24RR   : in    std_logic;
    P24RO1  : out   std_logic;
    P24RO2  : out   std_logic;
    P24RO3  : out   std_logic;
    P24RO4  : out   std_logic;
    P24RO5  : out   std_logic;

    P25CI1  : in    std_logic;
    P25CI2  : in    std_logic;	-- DQS
    P25CI3  : in    std_logic;	-- DQS
    P25CI4  : in    std_logic;	-- DQS
    P25CI5  : in    std_logic;	-- DQS
    P25CL   : in    std_logic;
    P25CR   : in    std_logic;
    P25CO   : out   std_logic;
    P25EI1  : in    std_logic;
    P25EI2  : in    std_logic;
    P25EI3  : in    std_logic;
    P25EI4  : in    std_logic;
    P25EI5  : in    std_logic;
    P25EL   : in    std_logic;
    P25ER   : in    std_logic;
    P25EO   : out   std_logic;
    P25RI   : in    std_logic;
    P25RL   : in    std_logic;
    P25RR   : in    std_logic;
    P25RO1  : out   std_logic;
    P25RO2  : out   std_logic;
    P25RO3  : out   std_logic;
    P25RO4  : out   std_logic;
    P25RO5  : out   std_logic;

    P26CI1  : in    std_logic;
    P26CL   : in    std_logic;
    P26CR   : in    std_logic;
    P26CO   : out   std_logic;
    P26EI1  : in    std_logic;
    P26EI2  : in    std_logic;
    P26EI3  : in    std_logic;
    P26EI4  : in    std_logic;
    P26EI5  : in    std_logic;
    P26EL   : in    std_logic;
    P26ER   : in    std_logic;
    P26EO   : out   std_logic;
    P26RI   : in    std_logic;
    P26RL   : in    std_logic;
    P26RR   : in    std_logic;
    P26RO1  : out   std_logic;
    P26RO2  : out   std_logic;
    P26RO3  : out   std_logic;
    P26RO4  : out   std_logic;
    P26RO5  : out   std_logic;

    P27CI1  : in    std_logic;
    P27CL   : in    std_logic;
    P27CR   : in    std_logic;
    P27CO   : out   std_logic;
    P27EI1  : in    std_logic;
    P27EI2  : in    std_logic;
    P27EI3  : in    std_logic;
    P27EI4  : in    std_logic;
    P27EI5  : in    std_logic;
    P27EL   : in    std_logic;
    P27ER   : in    std_logic;
    P27EO   : out   std_logic;
    P27RI   : in    std_logic;
    P27RL   : in    std_logic;
    P27RR   : in    std_logic;
    P27RO1  : out   std_logic;
    P27RO2  : out   std_logic;
    P27RO3  : out   std_logic;
    P27RO4  : out   std_logic;
    P27RO5  : out   std_logic;

    P28CI1  : in    std_logic;
    P28CL   : in    std_logic;
    P28CR   : in    std_logic;
    P28CO   : out   std_logic;
    P28EI1  : in    std_logic;
    P28EI2  : in    std_logic;
    P28EI3  : in    std_logic;
    P28EI4  : in    std_logic;
    P28EI5  : in    std_logic;
    P28EL   : in    std_logic;
    P28ER   : in    std_logic;
    P28EO   : out   std_logic;
    P28RI   : in    std_logic;
    P28RL   : in    std_logic;
    P28RR   : in    std_logic;
    P28RO1  : out   std_logic;
    P28RO2  : out   std_logic;
    P28RO3  : out   std_logic;
    P28RO4  : out   std_logic;
    P28RO5  : out   std_logic;

    P29CI1  : in    std_logic;
    P29CL   : in    std_logic;
    P29CR   : in    std_logic;
    P29CO   : out   std_logic;
    P29EI1  : in    std_logic;
    P29EI2  : in    std_logic;
    P29EI3  : in    std_logic;
    P29EI4  : in    std_logic;
    P29EI5  : in    std_logic;
    P29EL   : in    std_logic;
    P29ER   : in    std_logic;
    P29EO   : out   std_logic;
    P29RI   : in    std_logic;
    P29RL   : in    std_logic;
    P29RR   : in    std_logic;
    P29RO1  : out   std_logic;
    P29RO2  : out   std_logic;
    P29RO3  : out   std_logic;
    P29RO4  : out   std_logic;
    P29RO5  : out   std_logic;

    P30CI1  : in    std_logic;
    P30CL   : in    std_logic;
    P30CR   : in    std_logic;
    P30CO   : out   std_logic;
    P30EI1  : in    std_logic;
    P30EI2  : in    std_logic;
    P30EI3  : in    std_logic;
    P30EI4  : in    std_logic;
    P30EI5  : in    std_logic;
    P30EL   : in    std_logic;
    P30ER   : in    std_logic;
    P30EO   : out   std_logic;
    P30RI   : in    std_logic;
    P30RL   : in    std_logic;
    P30RR   : in    std_logic;
    P30RO1  : out   std_logic;
    P30RO2  : out   std_logic;
    P30RO3  : out   std_logic;
    P30RO4  : out   std_logic;
    P30RO5  : out   std_logic
);
end NX_IOM;

architecture NX_RTL of NX_IOM is
    attribute NX_TYPE: string;
    attribute NX_TYPE of NX_RTL: architecture is "PHY";

    attribute NX_USE: string;
    attribute NX_USE of NX_RTL: architecture is "NX_IOM";
begin
end NX_RTL;

----------------------------------------------------------------------------------------------------

`protect begin_protected
`protect version = 1
`protect encrypt_agent = "NanoXplore"
`protect key_keyowner = "Mentor Graphics Corporation", key_keyname = "MGC-VERIF-SIM-RSA-2", key_method = "rsa"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 256)
`protect key_block
Z7sM1FQ9B11C+IqdruGAgXawTwZwN41n+mYAT8eSRVnzS3Q8xU6hlR/ExjEm+JDM
wezsuNyA26FasIW2zMsR5i37mT8kDJ5n4AlxL4pEbDKkCh0ZVok+rnIA1+bj1pI3
suYmySN8VpLKzk/xmMaDYLUG8Fi4Aig/dqydFRJYzagcztCSJP1BmO3YCH2j751M
ZIywLmh0xGHgpKGbqSr6ccFL3HdasRCpfI9wcAyhNqwhe0fkVRndNeGguDf2tkr2
jlOs5ZmOuxkVHbqrNJUR3wO55Avzg4B7ZUJp1eLmqATURQAlCNr5SQwQ1k1dp/T1
cZNhBnBnxKQEN8CccGofuQ==
`protect data_method = "aes256-cbc"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 25888)
`protect data_block
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
k0/nYdwaOibNbQ8H9o4eRA==
`protect end_protected


-- =================================================================================================
--   NX_IOM_CONTROL definition                                                            2017/09/04
-- =================================================================================================

library ieee;
use ieee.std_logic_1164.all;
use ieee.std_logic_unsigned.all;
use ieee.numeric_std.all;

library NX;
use NX.nxPackage.all;

entity NX_IOM_CONTROL is
generic (
    mode_side1   : integer := 0;
    sel_clkw_rx1 : bit_vector(1 downto 0) := "00";
    sel_clkr_rx1 : bit := '0';
    div_tx1      : bit_vector(3 downto 0) := "0000";
    div_rx1      : bit_vector(3 downto 0) := "0000";
    inv_di_fclk1 : bit := '0';
    latency1     : bit := '0';
    mode_side2   : integer := 0;
    sel_clkw_rx2 : bit_vector(1 downto 0) := "00";
    sel_clkr_rx2 : bit := '0';
    div_tx2      : bit_vector(3 downto 0) := "0000";
    div_rx2      : bit_vector(3 downto 0) := "0000";
    inv_di_fclk2 : bit := '0';
    latency2     : bit := '0';
    sel_clk_out1 : bit := '0';
    sel_clk_out2 : bit := '0';
    mode_rpath   : string := "";
    mode_epath   : string := "";
    mode_cpath   : string := "";
    mode_tpath   : string := "";
    mode_io_cal  : bit    := '0';
    location  : string    := ""
);
port(
    RTCK1   : in    std_logic;
    RRCK1   : in    std_logic;
    WTCK1   : in    std_logic;
    WRCK1   : in    std_logic;
    RTCK2   : in    std_logic;
    RRCK2   : in    std_logic;
    WTCK2   : in    std_logic;
    WRCK2   : in    std_logic;
    CTCK    : in    std_logic;

    C1TW    : in    std_logic;
    C1TS    : in    std_logic;
    C1RW1   : in    std_logic;
    C1RW2   : in    std_logic;
    C1RW3   : in    std_logic;
    C1RNE   : in    std_logic;
    C1RS    : in    std_logic;
    C2TW    : in    std_logic;
    C2TS    : in    std_logic;
    C2RW1   : in    std_logic;
    C2RW2   : in    std_logic;
    C2RW3   : in    std_logic;
    C2RNE   : in    std_logic;
    C2RS    : in    std_logic;
    FA1     : in    std_logic;
    FA2     : in    std_logic;
    FA3     : in    std_logic;
    FA4     : in    std_logic;
    FA5     : in    std_logic;
    FA6     : in    std_logic;
    FZ      : in    std_logic;
    DC      : in    std_logic;
    SE      : in    std_logic;
    SCI     : in    std_logic;
    SPI1    : in    std_logic;
    SPI2    : in    std_logic;
    SPI3    : in    std_logic;
    SPI4    : in    std_logic;
    SPI5    : in    std_logic;
    SPI6    : in    std_logic;
    CCK     : in    std_logic;
    DCK     : in    std_logic;
    DRI1    : in    std_logic;
    DRI2    : in    std_logic;
    DRI3    : in    std_logic;
    DRI4    : in    std_logic;
    DRI5    : in    std_logic;
    DRI6    : in    std_logic;
    DRA1    : in    std_logic;
    DRA2    : in    std_logic;
    DRA3    : in    std_logic;
    DRA4    : in    std_logic;
    DRA5    : in    std_logic;
    DRA6    : in    std_logic;
    DRL     : in    std_logic;
    DOS     : in    std_logic;
    DOG     : in    std_logic;
    DIS     : in    std_logic;
    DIG     : in    std_logic;
    DPAS    : in    std_logic;
    DPAG    : in    std_logic;
    DQSS    : in    std_logic;
    DQSG    : in    std_logic;
    DS1     : in    std_logic;
    DS2     : in    std_logic;
    CAD1    : in    std_logic;
    CAD2    : in    std_logic;
    CAD3    : in    std_logic;
    CAD4    : in    std_logic;
    CAD5    : in    std_logic;
    CAD6    : in    std_logic;
    CAP1    : in    std_logic;
    CAP2    : in    std_logic;
    CAP3    : in    std_logic;
    CAP4    : in    std_logic;
    CAN1    : in    std_logic;
    CAN2    : in    std_logic;
    CAN3    : in    std_logic;
    CAN4    : in    std_logic;
    CAT1    : in    std_logic;
    CAT2    : in    std_logic;
    CAT3    : in    std_logic;
    CAT4    : in    std_logic;

    FLD     : out   std_logic;
    FLG     : out   std_logic;
    C1RED   : out   std_logic;
    C2RED   : out   std_logic;
    DRO1    : out   std_logic;
    DRO2    : out   std_logic;
    DRO3    : out   std_logic;
    DRO4    : out   std_logic;
    DRO5    : out   std_logic;
    DRO6    : out   std_logic;
    DRE     : out   std_logic;
    DRR     : out   std_logic;
    SCO     : out   std_logic;
    SPO1    : out   std_logic;
    SPO2    : out   std_logic;
    SPO3    : out   std_logic;
    SPO4    : out   std_logic;
    SPO5    : out   std_logic;

    LINK1  : inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0);
    LINK2  : inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0);
    LINK3  : inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0);
    LINK4  : inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0);
    LINK5  : inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0);
    LINK6  : inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0);
    LINK7  : inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0);
    LINK8  : inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0);
    LINK9  : inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0);
    LINK10 : inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0);
    LINK11 : inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0);
    LINK12 : inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0);
    LINK13 : inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0);
    LINK14 : inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0);
    LINK15 : inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0);
    LINK16 : inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0);
    LINK17 : inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0);
    LINK18 : inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0);
    LINK19 : inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0);
    LINK20 : inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0);
    LINK21 : inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0);
    LINK22 : inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0);
    LINK23 : inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0);
    LINK24 : inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0);
    LINK25 : inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0);
    LINK26 : inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0);
    LINK27 : inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0);
    LINK28 : inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0);
    LINK29 : inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0);
    LINK30 : inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0);
    LINK31 : inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0);
    LINK32 : inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0);
    LINK33 : inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0);
    LINK34 : inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0)
);
end NX_IOM_CONTROL;

architecture NX_RTL of NX_IOM_CONTROL is
    attribute NX_TYPE: string;
    attribute NX_TYPE of NX_RTL: architecture is "PHY";

    attribute NX_USE: string;
    attribute NX_USE of NX_RTL: architecture is "NX_IOM_CONTROL";
    attribute NX_USE of LINK1  : signal is "LINK";
    attribute NX_USE of LINK2  : signal is "LINK";
    attribute NX_USE of LINK3  : signal is "LINK";
    attribute NX_USE of LINK4  : signal is "LINK";
    attribute NX_USE of LINK5  : signal is "LINK";
    attribute NX_USE of LINK6  : signal is "LINK";
    attribute NX_USE of LINK7  : signal is "LINK";
    attribute NX_USE of LINK8  : signal is "LINK";
    attribute NX_USE of LINK9  : signal is "LINK";
    attribute NX_USE of LINK10 : signal is "LINK";
    attribute NX_USE of LINK11 : signal is "LINK";
    attribute NX_USE of LINK12 : signal is "LINK";
    attribute NX_USE of LINK13 : signal is "LINK";
    attribute NX_USE of LINK14 : signal is "LINK";
    attribute NX_USE of LINK15 : signal is "LINK";
    attribute NX_USE of LINK16 : signal is "LINK";
    attribute NX_USE of LINK17 : signal is "LINK";
    attribute NX_USE of LINK18 : signal is "LINK";
    attribute NX_USE of LINK19 : signal is "LINK";
    attribute NX_USE of LINK20 : signal is "LINK";
    attribute NX_USE of LINK21 : signal is "LINK";
    attribute NX_USE of LINK22 : signal is "LINK";
    attribute NX_USE of LINK23 : signal is "LINK";
    attribute NX_USE of LINK24 : signal is "LINK";
    attribute NX_USE of LINK25 : signal is "LINK";
    attribute NX_USE of LINK26 : signal is "LINK";
    attribute NX_USE of LINK27 : signal is "LINK";
    attribute NX_USE of LINK28 : signal is "LINK";
    attribute NX_USE of LINK29 : signal is "LINK";
    attribute NX_USE of LINK30 : signal is "LINK";
    attribute NX_USE of LINK31 : signal is "LINK";
    attribute NX_USE of LINK32 : signal is "LINK";
    attribute NX_USE of LINK33 : signal is "LINK";
    attribute NX_USE of LINK34 : signal is "LINK";

begin
end NX_RTL;


`protect begin_protected
`protect version = 1
`protect encrypt_agent = "NanoXplore"
`protect key_keyowner = "Mentor Graphics Corporation", key_keyname = "MGC-VERIF-SIM-RSA-2", key_method = "rsa"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 256)
`protect key_block
BQkAYjstkAMlaKTRIjpIU+gYu89wR8Yap0zGCUqCodNeJwRPqJgRMj5qIxI/EV4+
CQzTXKLkJgOCvCxiAVvWIunoAErGJnkrQNqMEerWvPIoDvvF0vqOMCfJWeWYtBa9
gaxJ5aDKeHFYF04UOJ/sYUSW0er3Q6HO9onnt/9UznDImq+gufmYfTaXfHw50QVQ
NLSe0/cvIsSN/1p2W9PLELXh16UjyR6mx7hw4ca0bLNFwoXKZEwHzYsDPZmb857b
Kyay5P8kK3j96h1qGxfP1s5sjGaWzAwLHr6jmq97nRJI53zIjr6BW2FaI/3FzKeJ
PP7Kk4Mr004haAIvWobQ6Q==
`protect data_method = "aes256-cbc"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 10880)
`protect data_block
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
`protect end_protected


-- =================================================================================================
--   NX_IOM_DRIVER definition
-- =================================================================================================

library ieee;
use ieee.std_logic_1164.all;
use ieee.std_logic_arith.all;
use ieee.std_logic_unsigned.all;

library NX;
use NX.nxPackage.all;

entity NX_IOM_DRIVER is
generic (
    epath_edge      : bit := '0';
    epath_init      : bit := '0';
    epath_load      : bit := '0';
    epath_mode      : bit_vector(3 downto 0) := "0000";
    epath_sync      : bit := '0';
    epath_dynamic   : bit := '0'; --0: off/fixed delay, 1: dynamic delay

    rpath_edge      : bit := '0';
    rpath_init      : bit := '0';
    rpath_load      : bit := '0';
    rpath_mode      : bit_vector(3 downto 0) := "0000";
    rpath_sync      : bit := '0';
    rpath_dynamic   : bit := '0'; --0: off/fixed delay, 1: dynamic delay

    cpath_edge      : bit := '0';
    cpath_init      : bit := '0';
    cpath_load      : bit := '0';
    cpath_mode      : bit_vector(3 downto 0) := "0000";
    cpath_sync      : bit := '0';
    cpath_inv       : bit := '0';

    tpath_mode      : bit_vector(1 downto 0) := "00";

    location        : string := "";
    chained         : bit    := '0';
    symbol          : string := ""
);
port (
    EI1  : in  std_logic;
    EI2  : in  std_logic;
    EI3  : in  std_logic;
    EI4  : in  std_logic;
    EI5  : in  std_logic;
    EL   : in  std_logic;
    ER   : in  std_logic;
    CI1  : in  std_logic;
    CI2  : in  std_logic;
    CI3  : in  std_logic;
    CI4  : in  std_logic;
    CI5  : in  std_logic;
    CL   : in  std_logic;
    CR   : in  std_logic;
    CT   : in  std_logic;
    RI   : in  std_logic;
    RL   : in  std_logic;
    RR   : in  std_logic;
    CO   : out std_logic;
    EO   : out std_logic;
    RO1  : out std_logic;
    RO2  : out std_logic;
    RO3  : out std_logic;
    RO4  : out std_logic;
    RO5  : out std_logic;
    LINK : inout  std_logic_vector(IOM_LINK_SIZE - 1 downto 0)
);
end NX_IOM_DRIVER;

architecture NX_RTL of NX_IOM_DRIVER is
    attribute NX_TYPE: string;
    attribute NX_TYPE of NX_RTL: architecture is "PHY";

    attribute NX_USE: string;
    attribute NX_USE of NX_RTL: architecture is "NX_IOM_DRIVER";
    attribute NX_USE of LINK: signal is "LINK";
begin
end NX_RTL;

----------------------------------------------------------------------------------------------------

`protect begin_protected
`protect version = 1
`protect encrypt_agent = "NanoXplore"
`protect key_keyowner = "Mentor Graphics Corporation", key_keyname = "MGC-VERIF-SIM-RSA-2", key_method = "rsa"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 256)
`protect key_block
d/h/qk0XC4npTwjThGvh8GPiehayDo+evEReyUPvFFQetWx5h0jHrD9zaI+F3qGN
WibRm+yUKkFlHolQgBS6+sXnj3pgm5IYT7NCek4cfr82Is8/EpiAkPzYwtbG99iN
Zly7m0I8K0xEXptOE4snrhaTsf2Pg1YQaH23xa75IzjaPuN3RrV/qHFyRXaEfduf
ny8JT7N/RYBUcB7mR5aUFnwVCLUvsWnf5NnQrzyTfzK4HlZ/QYa+DvpTiC1tdKdZ
YxF4+s5LMovLtyIr9yVvzakhMCW3h6bI0VJe6HUeodCB/+6rGT3XpDENYcYR6En5
lFC/vxohViji8b1y6luEGA==
`protect data_method = "aes256-cbc"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 19088)
`protect data_block
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
oBDOWop9WlxVfnBCixjmxbahWFR+unHgRyGl0EuStyU/ielnw0T37nBT5ddj9SF7
Jq3JoI8xr+WiX9P+72RH8uJ4n8gkLBwad54402kOcJclIClkhkj3aG2rxNogdorw
GQfmvlWWjk9nYBPgfm5g0EN6Z1BX6JEJvCB6+eZSlvurc/QpU2W7x6VszjjB2BFW
3gtfdidvBvHOgXhxkCdXE+FQeVYjTT00kJ90tAKTej24YI8FZAV3ajSksT4L6Jat
P97OfQ3BJXC2mT0ez/LtyuPs28i866sYwQ2ODsXyk7+VBwLV++Jgzj5gu0ON3QQ4
pK8AOweo7xizfMUxe5gXTXUU7duBv/7UHW4dp/EVu+C1jmvy5xmKHKc8yQH5/jZq
1VpHhXdmKF1YFntWpOZF7c62dPfwwUXsUgVvszEWvCqmzIg735n5uV1R1se+c2j4
X2dTarTmYt8PSb/Xn4nvjYz6Fjtn+VQc04WyeCXT/o1ay/OeGgxT7NLubOUJ2Gd9
RhplT8qEAktGNlvD91kJA7TW6E3oHA2O69+c560H91rdSW022xKrQqnU7/lOlkwL
EIcD47UNwObpcPmjEHNCK0VvBmsJcFxTphC1gwO44cu37BXOOiL67GJYWm4YPcTK
/TTStjAN53r39yKYtw+Hh7K4K9hKxf74yk2kA5yMtP1PF5p7L7KBwOjYAsur54p/
IPdITKAhZxIOqoTkmxhQYmePBjyFOav1HiLyZ76ZvGcrBUu9v8Sn6z/V3NfuBULF
1plQYMA2q82oBCnFfVlNbDjIGkh90bV8LUzWJYpiBmmtAD0kAOaRxdJf21CQOFrD
FvhGFstfRi3/7n7XAFAGsTXm6FeYrweRnR3jl6cZMp0yqGyQDRRjq6azkCfJm4uU
PkLm36+GrlMcG2YKbraEczIK9o5WIv+OZAFBF5QbTNwdG3TKOpP4nd+GXGtRaZpZ
G/7ycHFi9IEVR0lBkx3UNsBNATNu3Vtsx2IQWtoLtyZQ5JX6w4MuPNR8kdbedmNP
RssrXVuJyUthUD4Ch/z7aTQlH9LbYZ0Qfyrqqxv32edZiTmGR0O0xhtZJlTkk0an
b6LqlZcE+LY9PGYG4sFjHmtnsfz6qouY4us5KDwoVxjeawqhxNMJHSJOQcNIG4T9
tQTTgJ/a4kFqldjvseZ0q1gSnW1PBJhxAgBDtiqsbmPh/edFr5jcHnb1bwi9RjBL
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
`protect end_protected


-- =================================================================================================
--   NX_IOM_SERDES definition                                                             2018/10/15
-- =================================================================================================

library ieee;
use ieee.std_logic_1164.all;
use ieee.std_logic_unsigned.all;
use ieee.numeric_std.all;

library NX;
use NX.nxPackage.all;

entity NX_IOM_SERDES is
generic (
    data_size : integer range 2 to 10 := 5;
    location  : string := ""
);
port (
    RTCK  : in std_logic;
    WRCK  : in std_logic;
    WTCK  : in std_logic;
    RRCK  : in std_logic;
    TRST  : in std_logic;
    RRST  : in std_logic;
    CTCK  : in std_logic;
    CL    : in std_logic;
    CR    : in std_logic;
    DCK   : in std_logic;
    DRL   : in std_logic;
    DIG   : in std_logic;
    DS    : in std_logic_vector(1 downto 0);
    DRA   : in std_logic_vector(5 downto 0);
    DRI   : in std_logic_vector(5 downto 0);
    FZ    : in std_logic;
    DRO   : out std_logic_vector(5 downto 0);
    DID   : out std_logic_vector(5 downto 0);
    FLD   : out std_logic;
    FLG   : out std_logic;
    LINKN : inout std_logic_vector(IOM_LINK_SIZE-1 downto 0);
    LINKP : inout std_logic_vector(IOM_LINK_SIZE-1 downto 0)
);
end NX_IOM_SERDES;

architecture NX_RTL of NX_IOM_SERDES is
    attribute NX_TYPE: string;
    attribute NX_TYPE of NX_RTL: architecture is "PHY";

    attribute NX_USE: string;
    attribute NX_USE of NX_RTL: architecture is "NX_IOM_SERDES";
    attribute NX_USE of LINKP: signal is "LINK";
    attribute NX_USE of LINKN: signal is "LINK";
begin
end NX_RTL;

`protect begin_protected
`protect version = 1
`protect encrypt_agent = "NanoXplore"
`protect key_keyowner = "Mentor Graphics Corporation", key_keyname = "MGC-VERIF-SIM-RSA-2", key_method = "rsa"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 256)
`protect key_block
g1jsuQnoYmyEn7OCfrfPdJf+48d3kOmjUscmSIGL6weBRV+e7mk6Ht7HhkghHHGw
raYGoLEBirV8xpAvbqXD3oYj4jrAmfEkuii6pmSXrXH6pL9M3zWLs9QCvnD4ml1x
BU+BJKao6N29vq2YhEWlgb+dkPlJ3r4cOsYye8s4HGX0kCVqDP0KA89uoOVtZy6/
bLc+R5SNaPOHlZG0y5UoRlVw1HUyKGWkwCLuPHeSqYHhgrn6f7JJTOccBfE/SoBw
HjuJm5ceiY04VWMRkP38YuDui5MueMiMB1cPJWUL4WIAnemNslKlaabxdWE6Q/Iz
hVM3VlBLx3W8W2dxpWr3Vw==
`protect data_method = "aes256-cbc"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 5872)
`protect data_block
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
Hs+CreUbQnmyhzVWuL4NzA==
`protect end_protected


`protect begin_protected
`protect version = 1
`protect encrypt_agent = "NanoXplore"
`protect key_keyowner = "Mentor Graphics Corporation", key_keyname = "MGC-VERIF-SIM-RSA-2", key_method = "rsa"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 256)
`protect key_block
I8QRrIiQDWnympDmg/NkOMklgObOjYRqsXz8l51wNbx1FapZST3u+JNaHNkk3otl
mVjtXQY+EomlulgOHVTbrmpLedGqDukmd9imadN2RNqJ1FogUG9oGDaprsybk1gO
iCxauaE+n6e3wwY6FZDJAzeQiNc5PLNmJS+iQADTPKn/FdylGMCkArw4dqzqatiz
0u6BucLzHX7FuOztMz7ID6aqtMTwKZ0QiO8+hTtJZ9Zq+6rQzaRsEwsEW3FylZPY
7JvdWvMn2SPy4uBoW8zmpAi+YyqEYkrUhGVAt20s5i9IQQpv5rYLlsZF2CzjuhgF
L5Uvyhj3TFWpZB03TME0ig==
`protect data_method = "aes256-cbc"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 39024)
`protect data_block
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
`protect end_protected

-- =================================================================================================
--   NX_LUT definition                                                                  2017/09/04
-- =================================================================================================

library ieee;
use ieee.std_logic_1164.all;

entity NX_LUT is
generic (
    lut_table : bit_vector(15 downto 0) := B"0000000000000000" -- truthTable t15 ... t0
);
port (
    I1 : in  std_logic;
    I2 : in  std_logic;
    I3 : in  std_logic;
    I4 : in  std_logic;
    O  : out std_logic
);
end NX_LUT;

architecture NX_RTL of NX_LUT is
    attribute NX_TYPE :string;
    attribute NX_TYPE of NX_RTL: architecture is "PHY";

    attribute NX_USE :string;
    attribute NX_USE of NX_RTL: architecture is "NX_LUT";
begin
end NX_RTL;

----------------------------------------------------------------------------------------------------

library ieee;
use ieee.std_logic_1164.all;

entity NX_DFF is
generic (
    dff_edge   : bit := '0';
    dff_init   : bit := '0';
    dff_load   : bit := '0';
    dff_sync   : bit := '0';
    dff_ctxt   : std_logic := 'U'
);
port (
    I  : in  std_logic;
    CK : in  std_logic;
    L  : in  std_logic;
    R  : in  std_logic;
    O  : out std_logic
);
end NX_DFF;

architecture NX_RTL of NX_DFF is
    attribute NX_TYPE :string;
    attribute NX_TYPE of NX_RTL: architecture is "PHY";

    attribute NX_USE :string;
    attribute NX_USE of NX_RTL: architecture is "NX_DFF";
begin
end NX_RTL;

----------------------------------------------------------------------------------------------------

library ieee;
use ieee.std_logic_1164.all;

entity NX_BFF is
port (
    I : in  std_logic;
    O : out std_logic
);
end NX_BFF;

architecture NX_RTL of NX_BFF is
    attribute NX_TYPE :string;
    attribute NX_TYPE of NX_RTL: architecture is "PHY";

    attribute NX_USE :string;
    attribute NX_USE of NX_RTL: architecture is "NX_BFF";
begin
end NX_RTL;

----------------------------------------------------------------------------------------------------

library ieee;
use ieee.std_logic_1164.all;

entity NX_DFR is
generic (
    location   : string := "";
    path       : integer := 0;
    mode       : integer := 0;
    dff_edge   : bit := '0';
    dff_init   : bit := '0';
    dff_load   : bit := '0';
    dff_sync   : bit := '0'
);
port (
    I  : in  std_logic;
    CK : in  std_logic;
    L  : in  std_logic;
    R  : in  std_logic;
    O  : out std_logic
);
end NX_DFR;

architecture NX_RTL of NX_DFR is
    attribute NX_TYPE :string;
    attribute NX_TYPE of NX_RTL: architecture is "PHY";

    attribute NX_USE :string;
    attribute NX_USE of NX_RTL: architecture is "NX_DFR";
begin
end NX_RTL;

----------------------------------------------------------------------------------------------------

library ieee;
use ieee.std_logic_1164.all;

entity NX_BFR is
generic (
    location   : string := "";
    path       : integer := 0;
    mode       : integer := 0
);
port (
    I : in  std_logic;
    O : out std_logic
);
end NX_BFR;

architecture NX_RTL of NX_BFR is
    attribute NX_TYPE :string;
    attribute NX_TYPE of NX_RTL: architecture is "PHY";

    attribute NX_USE :string;
    attribute NX_USE of NX_RTL: architecture is "NX_BFR";
begin
end NX_RTL;

----------------------------------------------------------------------------------------------------

`protect begin_protected
`protect version = 1
`protect encrypt_agent = "NanoXplore"
`protect key_keyowner = "Mentor Graphics Corporation", key_keyname = "MGC-VERIF-SIM-RSA-2", key_method = "rsa"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 256)
`protect key_block
bP9FTASxNq8xOylj4xYPUrF71baNzOhVFtTRvfc5fyL/BLUEyhgB4U/lKo5NCOq5
XpMV5mhjrferKpMXHbv2oo1XLgiWhs2/H3+sBEOx8HOIEpeAmUFprjaDDRB05iep
xe6Pmnyg7dOebNQbcA4rJAdKlMxRH3MJGst+zFBTgHab54rbLKY9h/1h9FA/PWp2
ok4LgfcNm+wMsyHGN4NahRkJf83k+A85QQtZt4Dotzf2yr9Oh5Odilb9KXydnxUl
OPY5QkuQxvkgloHXLwvBg8LWH66m1aCNk/bwZY2WswVXPJrsdF4smnNzn4um5gDF
K7FcHwxznZoHR/lJ4xn9TA==
`protect data_method = "aes256-cbc"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 7216)
`protect data_block
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
39FXdEmORHTqFEf4HV3uyQ==
`protect end_protected

-- =================================================================================================
--   NX_CY definition                                                                   2017/09/19
-- =================================================================================================

library ieee;
use ieee.std_logic_1164.all;

entity NX_CY is
generic (
    add_carry  : integer := 0      -- 0: low - 1: high - 2: propagate
);
port (
    A1 : in  std_logic;
    A2 : in  std_logic;
    A3 : in  std_logic;
    A4 : in  std_logic;
    B1 : in  std_logic;
    B2 : in  std_logic;
    B3 : in  std_logic;
    B4 : in  std_logic;
    CI : in  std_logic;
    CO : out std_logic;
    S1 : out std_logic;
    S2 : out std_logic;
    S3 : out std_logic;
    S4 : out std_logic
);
end NX_CY;

architecture NX_RTL of NX_CY is
    attribute NX_TYPE :string;
    attribute NX_TYPE of NX_RTL: architecture is "PHY";

    attribute NX_USE :string;
    attribute NX_USE of NX_RTL: architecture is "NX_CY";
begin
end NX_RTL;

----------------------------------------------------------------------------------------------------

`protect begin_protected
`protect version = 1
`protect encrypt_agent = "NanoXplore"
`protect key_keyowner = "Mentor Graphics Corporation", key_keyname = "MGC-VERIF-SIM-RSA-2", key_method = "rsa"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 256)
`protect key_block
eo19EdqLTWqnqS4ilVTH/8SaHHzEQ7O12qRmVGDwl4KYUfgyPdC/yN1QmDJe1glK
K+B8/6u43UfQEAw2skfSEGTolHilHN9n2HIHcB5xMzHrK9ZZh+ngLIiY7oS91ZxO
og0UAUi3i7Rp/2CWvKd/crSJ7Z02wQ1I6aIlKLLbsgNe7jvt9l+NMTOEqlDicKjy
5bCAQRCAhfyNESt39EfGupTY+e1jlxLF35ccfkaT3uU9+jBYuTvq81PEtrb0EQxp
qbYleMUfgLJ2FxrDoJ94v2dTZrOT4TGryLwQB8zxmnHQAzw24OV0hCvIV3iPf5W8
AIvwdSIWjKrS8lgp4OMT8g==
`protect data_method = "aes256-cbc"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 2576)
`protect data_block
oN7ohaOmGoKTCKTdd1kRnuqqmoaEB5yUgpyYquKE+CSj4aDHqOdsZSy42pm+au+w
uEA1QhlmwEtdEJLd9d9X1Gp2oQ7MO/N9FWCl+7TgMs/V60hTkYp8PITZiBGBTj74
GMhCjE+G2upz+er0JB/R+KUM0OBnoVljLUKtzB/OiOVqeew2Xs1enu9cp6AwIOhx
b8T6gomSPsJOoyY2Ge1BC7XpV4tsbAnPEKQicjXLXF1taNpWCWIqw0zdmWde0DuG
fUVQ6R4U1GuVEuQiwPDm3Nj/78AUkcOHmqaexM4dsD5A1XY/QEKfDM7xuBzg2eea
hnPEMgVdl1k0iPmXAq4+VrEXrkLN3DjDxpLOSTJpVsGn6delcxTx/kAF6i5q/8Nu
M8DoE0u2cshDtoJHJmpzmdE1micdRltBAvJmAtGfbOQfrcCMdyjsr4KwUTLNrOyQ
E1HDVsffH8RMnqZHsKiO9+qsn1Fp6XeSbfINNjF2MXW/kkvyyR25eT9J5km+18En
Ou7q+cuOSFpJO2i/TqSNYrLvx45mLqQnCdGT4RsJ7WjKE1LNRgz/E+c8S74LbV9i
vWeOaKmR1HlzQoypc3LZKvKDcfK3Adn7rqhVF58GqGMrbCgFnhTOwQA+M/f8Y5pH
tMTcgBuY/TTImnM/UILUo6/rBZD+FfCB/eJFD4o8sgIXzXcobPZHlaTfZdNoBGNz
ulmUY10hmadTJN/OJRGO2TuNbU4T+f0ctTuTZQ4QHcf0C6s1GSTDbcqlvrWqfVjq
hrwJrfgo4ztRyDXnBOolMrI/SODInlqxcn/QlGx2nu+5X0bDVdU/mZX847LSC/zs
29du+Cujp9/FNThoAf3zmr/FOEDh78A9nDmLKyfb1t/5vs57SMJw2P6chAhRHN9z
S061k6wdbDQqkfaTz/HwUQ9D/idnl/o2xnpiXEOe3zHh09PAdOYnvXaSrNm22vuO
YtfuIyw+OMKN/Ad90gphkHMiL4T4X0NeJYTwiOzHOOC9D7K/LBCzEaywNuCkLVjh
wCCkE9ktvdJiki5E7+2U4wZh445xXpTsYeVG1kkMF2pD3CjpeDkCc/ccnvsHB+DK
x/2RWKc3jHFAsGqR1Drxo9AwCE8vcOw2S5XrRlaMmBsLKN8/8GzmstHUpNIuj8hT
G7/Morqc1G2uXcHV+IRpYryaMNoVHuOc+SkSv/LhPUi45S+QSh6MikK4b1qmZAl6
TC1Zq2Z5l8prRo7Ik9Qpe09OoV//LeJdf9Ti205S346uddczLkmZBq5kJ1mTRxeI
4IYD8nWbd7wvS0DCJL/a3LB9RuUjy7FtZEaWTdQeq20qqT5594zqU0Ju9lXEi2Co
sgQioHep8OF6B4cxWL630z/MZmnAeccrDrAcN2aQF8h7MO4sbAV8evcxle3yQuvR
9ukqDCJN4Q8Vh3aUM2H/EtoEvv2cF0qAesnwpQJZ/LIYZ6JE6YGBMrtqDdstQWxV
+eD66Qq5/pWE2Mvt5x7dF5U9dKxgGfNVMaTgjhhGIiVJnrUaoW+agcW7mS2oHRFI
fCdUTPiz9r88iwRpNm2toLIAAKFOodmK4ubZjf2Sszhui+8c1hrD0iZdpCKDFc9j
Up/Z8lLlZv8U4tO2a4RCY3/aLs22DpRuovwRbPHEVNwwIq3KnzDPyhaW95nE7Rlz
xPHpeg1p1TAyShUsJRtMWRpkztXQFmy1FakAV9yoBUquNlVxCda2dIxRSAH1j6wS
moxk5CdKZOx+prGwVgT4gtCokORIcJnu7aucqqNaLEto3aA6jIknZ2lDyj+80X7Q
puFwMm3urPGC8R9H3PxdmSKabTWg4+iOkJXUmflbCZvD7vr1XnNOqVFleRig+lal
p5n2vqSjLng0dTv5YTzsNAhcX9UzGZ8J8XgYcIDgKKKozRfaOBfufz/L/s/l/GKE
M+JvXMvbwK442uposn8R1wS+MCivFR9j34nW79oSyZ/soWvs4ppepVAfB+0oHRKe
BoJlRsRRSQ520s6BjPEfp8JuV9u3VTSj2aGJ+/n56zv2NcpJeWrUzpjqLnuvRUTR
sci5qhVhtZ4l8gUjqpJFV9s9oIc2BFCjWgWXee+nJIiLDZnFvRzyNdirfLj7VcXs
x8WFxuqA8rpQTCVKn83OqAr7413NfiPcYVFYh8MRc8R6w+J1QBHBhqYZmPEF8/V5
M2VpxOmwpNUUvoHOl45WgersEabeKd6W3cR3OacHoTZpnlcPKjtdsIcsmnOL69Ys
IBifvcWLRORjexp78LoO5vsMbpfGC7g81ZROSCE83Cj6JKZp/oyphh/bSYiJzNvr
6G9vvwJh9qg+S4ZlJqzulQaRTEjccvzij+2UNlkfuqFOExQOFGqIMIfeO+95sKwC
5zla8LMVoauQdl9yRsY+5VF8gE5TyadrIBBZX85hnKjrIAU2EpKNCw9LrP8R00AJ
JRoZZRuECtP/U2pq69tQWXtl7SkqzPPOJk75QJctb/FsSClxkdR5SbfbSiuLygxE
LrolkzSmb7PPpBIX4CXCQyFYDsTm4MSBahIA+tuCVqLXYcO7Z9lxEiPL0G1vBi2j
IgrCXm/Bm9ciwY8+9CFpwxGHTb+Hxow/pkHdcefMqD+9JZbQPEJ9ZJRFr+X4LcLy
k7NoRXiHO6/LZSeMDSJvAYJm97YGCODAAzlbTDGe5yQF5+yRgPQasaFdwFZUJVxn
E/PmbMQbzZcskEU+KAtiBrbddDlP96sH7d+E1AT5U0aZK2EMdtDGh41FlrwQ2T9+
X/Ycg1e9W/RBILxqOq9e/c9NmYJtTIVf3MahkDkXiIBoYmkG30NHHpA/FUEp/7Hk
rKAEuvUQzC2dspS2NIgj9xZI6f0ZMa+iwDUztSUpaIa7O5wJG7eOU8QgrvbYEtF7
3wHMHY7kdkw/XA9lrRxlglqlFKdzrFkfDGNpE5Blk0eypNQaGDrVyyC0SWMXTE7l
F48/i3C3w1pRJ6iL2sAcDWVZD9A+1Yp672HESX6eGh28MNK0AaCkS1Z+JVGa1Fpd
RybrwkUB9cAXFpShRGIO0XsrzMtEzLbIIhhxVN5jSI96MpDRE5rkKsLryC0e8bkg
kL/rvFOFV4iwlZU4QrlHLGGnkWNOOdVZQRt0PnEEmYHkWT9b4Ve5KcWFVNpuTwKU
AcGHSRXF5x3gSrTWSawcCn+cQ6VEUKijKMJ5Z3AXmvyBN+BYNIA65aqBdgPx9xRU
vqiBteNcUDnGoDYQ9JDghXWy6ybRma9qsTg63Krwi/lTad+yr5wNAuJ0y4cwvdPP
O6SxjclHAejsvhScehT/8yIZestivd3OssSezwgj0wCVDZxiJmTkI5KRbYHA+lp5
48myz6khfLT26MFZVYJDOUNlpSxNyecUhgOB6dp1OXq0AIrUv9kcHIKQRjEpm165
WBdfvQeVfNjs8pCHiLsu8bzygfbWn+Cysa10VABt89w=
`protect end_protected

-- =================================================================================================
--   NX_RFB definition                                                                  2017/09/19
-- =================================================================================================

library ieee;
use ieee.std_logic_1164.all;

entity NX_RFB is
generic (
    rck_edge  : bit := '0';   -- 0: read clock rising edge - 1: read clock falling edge
    wck_edge  : bit := '0';   -- 0: write clock rising edge - 1: write clock falling edge
    mem_ctxt  : string := "" -- memory initial context
);
port (
    RCK : in  std_logic;
    WCK : in  std_logic;
    I1  : in  std_logic;
    I2  : in  std_logic;
    I3  : in  std_logic;
    I4  : in  std_logic;
    I5  : in  std_logic;
    I6  : in  std_logic;
    I7  : in  std_logic;
    I8  : in  std_logic;
    I9  : in  std_logic;
    I10 : in  std_logic;
    I11 : in  std_logic;
    I12 : in  std_logic;
    I13 : in  std_logic;
    I14 : in  std_logic;
    I15 : in  std_logic;
    I16 : in  std_logic;
    COR : out std_logic;
    ERR : out std_logic;
    O1  : out std_logic;
    O2  : out std_logic;
    O3  : out std_logic;
    O4  : out std_logic;
    O5  : out std_logic;
    O6  : out std_logic;
    O7  : out std_logic;
    O8  : out std_logic;
    O9  : out std_logic;
    O10 : out std_logic;
    O11 : out std_logic;
    O12 : out std_logic;
    O13 : out std_logic;
    O14 : out std_logic;
    O15 : out std_logic;
    O16 : out std_logic;
    RA1 : in  std_logic;
    RA2 : in  std_logic;
    RA3 : in  std_logic;
    RA4 : in  std_logic;
    RA5 : in  std_logic;
    RA6 : in  std_logic;
    RE  : in  std_logic;
    WA1 : in  std_logic;
    WA2 : in  std_logic;
    WA3 : in  std_logic;
    WA4 : in  std_logic;
    WA5 : in  std_logic;
    WA6 : in  std_logic;
    WE  : in  std_logic
);
end NX_RFB;

architecture NX_RTL of NX_RFB is
    attribute NX_TYPE :string;
    attribute NX_TYPE of NX_RTL: architecture is "PHY";

    attribute NX_USE :string;
    attribute NX_USE of NX_RTL: architecture is "NX_RFB";
begin
end NX_RTL;

----------------------------------------------------------------------------------------------------

-- =================================================================================================
--   NX_RFB_WRAP definition                                                             2017/09/19
-- =================================================================================================

library ieee;
use ieee.std_logic_1164.all;

entity NX_RFB_WRAP is
generic (
    rck_edge  : bit := '0';   -- 0: read clock rising edge - 1: read clock falling edge
    wck_edge  : bit := '0';   -- 0: write clock rising edge - 1: write clock falling edge
    mem_ctxt  : string := "" -- memory initial context
);
port (
    RCK : in  std_logic;
    WCK : in  std_logic;
    I   : in  std_logic_vector(15 downto 0);
    COR : out std_logic;
    ERR : out std_logic;
    O   : out std_logic_vector(15 downto 0);
    RA  : in  std_logic_vector(5 downto 0);
    RE  : in  std_logic;
    WA  : in  std_logic_vector(5 downto 0);
    WE  : in  std_logic
);
end NX_RFB_WRAP;

architecture NX_RTL of NX_RFB_WRAP is
    attribute NX_TYPE :string;
    attribute NX_TYPE of NX_RTL: architecture is "WRAPPER";

component NX_RFB
generic (
    rck_edge  : bit := '0';   -- 0: read clock rising edge - 1: read clock falling edge
    wck_edge  : bit := '0';   -- 0: write clock rising edge - 1: write clock falling edge
    mem_ctxt  : string := "" -- memory initial context
);
port (
    RCK : in  std_logic;
    WCK : in  std_logic;
    I1  : in  std_logic;
    I2  : in  std_logic;
    I3  : in  std_logic;
    I4  : in  std_logic;
    I5  : in  std_logic;
    I6  : in  std_logic;
    I7  : in  std_logic;
    I8  : in  std_logic;
    I9  : in  std_logic;
    I10 : in  std_logic;
    I11 : in  std_logic;
    I12 : in  std_logic;
    I13 : in  std_logic;
    I14 : in  std_logic;
    I15 : in  std_logic;
    I16 : in  std_logic;
    COR : out std_logic;
    ERR : out std_logic;
    O1  : out std_logic;
    O2  : out std_logic;
    O3  : out std_logic;
    O4  : out std_logic;
    O5  : out std_logic;
    O6  : out std_logic;
    O7  : out std_logic;
    O8  : out std_logic;
    O9  : out std_logic;
    O10 : out std_logic;
    O11 : out std_logic;
    O12 : out std_logic;
    O13 : out std_logic;
    O14 : out std_logic;
    O15 : out std_logic;
    O16 : out std_logic;
    RA1 : in  std_logic;
    RA2 : in  std_logic;
    RA3 : in  std_logic;
    RA4 : in  std_logic;
    RA5 : in  std_logic;
    RA6 : in  std_logic;
    RE  : in  std_logic;
    WA1 : in  std_logic;
    WA2 : in  std_logic;
    WA3 : in  std_logic;
    WA4 : in  std_logic;
    WA5 : in  std_logic;
    WA6 : in  std_logic;
    WE  : in  std_logic
);
end component NX_RFB;

begin

rfb: NX_RFB generic map (
    rck_edge    => rck_edge,
    wck_edge    => wck_edge,
    mem_ctxt    => mem_ctxt)
port map (
    RCK => RCK,
    WCK => WCK,
    I1  => I(0),
    I2  => I(1),
    I3  => I(2),
    I4  => I(3),
    I5  => I(4),
    I6  => I(5),
    I7  => I(6),
    I8  => I(7),
    I9  => I(8),
    I10 => I(9),
    I11 => I(10),
    I12 => I(11),
    I13 => I(12),
    I14 => I(13),
    I15 => I(14),
    I16 => I(15),
    COR => COR,
    ERR => ERR,
    O1  => O(0),
    O2  => O(1),
    O3  => O(2),
    O4  => O(3),
    O5  => O(4),
    O6  => O(5),
    O7  => O(6),
    O8  => O(7),
    O9  => O(8),
    O10 => O(9),
    O11 => O(10),
    O12 => O(11),
    O13 => O(12),
    O14 => O(13),
    O15 => O(14),
    O16 => O(15),
    RA1 => RA(0),
    RA2 => RA(1),
    RA3 => RA(2),
    RA4 => RA(3),
    RA5 => RA(4),
    RA6 => RA(5),
    RE  => RE,
    WA1 => WA(0),
    WA2 => WA(1),
    WA3 => WA(2),
    WA4 => WA(3),
    WA5 => WA(4),
    WA6 => WA(5),
    WE  => WE
);
end NX_RTL;

----------------------------------------------------------------------------------------------------

library ieee;
use ieee.std_logic_1164.all;

entity NX_CKS is
port (
    CKI : in  std_logic;
    CMD : in  std_logic;
    CKO : out std_logic
);
end NX_CKS;

architecture NX_RTL of NX_CKS is
    attribute NX_TYPE :string;
    attribute NX_TYPE of NX_RTL: architecture is "PHY";

    attribute NX_USE :string;
    attribute NX_USE of NX_RTL: architecture is "NX_CKS";
begin
end NX_RTL;

----------------------------------------------------------------------------------------------------

`protect begin_protected
`protect version = 1
`protect encrypt_agent = "NanoXplore"
`protect key_keyowner = "Mentor Graphics Corporation", key_keyname = "MGC-VERIF-SIM-RSA-2", key_method = "rsa"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 256)
`protect key_block
RzkFRMiM1vz64swfOO16ZgdvyYQR+t2qE11KmbSDV1YvcKPgixsevGgFTK/rFgHY
wU9TLLwSvd8NanzweUha8/yUFoVrJ2AyxmtmhRgQXeakWnb8kHgpwuR39NNUi93J
80TXP1dQfusOK5YS6t/ZQsFkc3elXMhYvzssDJxQFq2uKuiLWgDZ7Y7Vlzl9IFvO
2FSgjoAuBRFN0461PK+yxTrV1pJKex73o0w3+gfkfzq+6gcQPDhzpifzdEQd5rUl
2cbNbv4OEQ8Y9nlzndnVur/EQExsUupPmIHdHH/nPj6K07lYGy+v+SpeAXy660zq
6R157IAFxWog08+BgMm3jg==
`protect data_method = "aes256-cbc"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 6752)
`protect data_block
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
`protect end_protected

-- =================================================================================================
--   NX_DSP definition                                                                  2018/11/30
-- =================================================================================================

library ieee;
use ieee.std_logic_1164.all;

entity NX_DSP is
generic (
    std_mode    : string := ""; -- standard mode [ADD36, SUB36, SMUL18, UMUL18, ...] empty for raw
    raw_config0 : bit_vector(19 downto 0) := B"00000000000000000000";        -- MUX
    raw_config1 : bit_vector(18 downto 0) := B"0000000000000000000";         -- PRC
    raw_config2 : bit_vector(12 downto 0) := B"0000000000000";               -- PRR
    raw_config3 : bit_vector( 6 downto 0) := B"0000000"                      -- ALU
);
port (
    A1    : in  std_logic;
    A2    : in  std_logic;
    A3    : in  std_logic;
    A4    : in  std_logic;
    A5    : in  std_logic;
    A6    : in  std_logic;
    A7    : in  std_logic;
    A8    : in  std_logic;
    A9    : in  std_logic;
    A10   : in  std_logic;
    A11   : in  std_logic;
    A12   : in  std_logic;
    A13   : in  std_logic;
    A14   : in  std_logic;
    A15   : in  std_logic;
    A16   : in  std_logic;
    A17   : in  std_logic;
    A18   : in  std_logic;
    A19   : in  std_logic;
    A20   : in  std_logic;
    A21   : in  std_logic;
    A22   : in  std_logic;
    A23   : in  std_logic;
    A24   : in  std_logic;

    B1    : in  std_logic;
    B2    : in  std_logic;
    B3    : in  std_logic;
    B4    : in  std_logic;
    B5    : in  std_logic;
    B6    : in  std_logic;
    B7    : in  std_logic;
    B8    : in  std_logic;
    B9    : in  std_logic;
    B10   : in  std_logic;
    B11   : in  std_logic;
    B12   : in  std_logic;
    B13   : in  std_logic;
    B14   : in  std_logic;
    B15   : in  std_logic;
    B16   : in  std_logic;
    B17   : in  std_logic;
    B18   : in  std_logic;

    C1    : in  std_logic;
    C2    : in  std_logic;
    C3    : in  std_logic;
    C4    : in  std_logic;
    C5    : in  std_logic;
    C6    : in  std_logic;
    C7    : in  std_logic;
    C8    : in  std_logic;
    C9    : in  std_logic;
    C10   : in  std_logic;
    C11   : in  std_logic;
    C12   : in  std_logic;
    C13   : in  std_logic;
    C14   : in  std_logic;
    C15   : in  std_logic;
    C16   : in  std_logic;
    C17   : in  std_logic;
    C18   : in  std_logic;
    C19   : in  std_logic;
    C20   : in  std_logic;
    C21   : in  std_logic;
    C22   : in  std_logic;
    C23   : in  std_logic;
    C24   : in  std_logic;
    C25   : in  std_logic;
    C26   : in  std_logic;
    C27   : in  std_logic;
    C28   : in  std_logic;
    C29   : in  std_logic;
    C30   : in  std_logic;
    C31   : in  std_logic;
    C32   : in  std_logic;
    C33   : in  std_logic;
    C34   : in  std_logic;
    C35   : in  std_logic;
    C36   : in  std_logic;

    CAI1  : in  std_logic;
    CAI2  : in  std_logic;
    CAI3  : in  std_logic;
    CAI4  : in  std_logic;
    CAI5  : in  std_logic;
    CAI6  : in  std_logic;
    CAI7  : in  std_logic;
    CAI8  : in  std_logic;
    CAI9  : in  std_logic;
    CAI10 : in  std_logic;
    CAI11 : in  std_logic;
    CAI12 : in  std_logic;
    CAI13 : in  std_logic;
    CAI14 : in  std_logic;
    CAI15 : in  std_logic;
    CAI16 : in  std_logic;
    CAI17 : in  std_logic;
    CAI18 : in  std_logic;

    CAO1  : out std_logic;
    CAO2  : out std_logic;
    CAO3  : out std_logic;
    CAO4  : out std_logic;
    CAO5  : out std_logic;
    CAO6  : out std_logic;
    CAO7  : out std_logic;
    CAO8  : out std_logic;
    CAO9  : out std_logic;
    CAO10 : out std_logic;
    CAO11 : out std_logic;
    CAO12 : out std_logic;
    CAO13 : out std_logic;
    CAO14 : out std_logic;
    CAO15 : out std_logic;
    CAO16 : out std_logic;
    CAO17 : out std_logic;
    CAO18 : out std_logic;

    CBI1  : in  std_logic;
    CBI2  : in  std_logic;
    CBI3  : in  std_logic;
    CBI4  : in  std_logic;
    CBI5  : in  std_logic;
    CBI6  : in  std_logic;
    CBI7  : in  std_logic;
    CBI8  : in  std_logic;
    CBI9  : in  std_logic;
    CBI10 : in  std_logic;
    CBI11 : in  std_logic;
    CBI12 : in  std_logic;
    CBI13 : in  std_logic;
    CBI14 : in  std_logic;
    CBI15 : in  std_logic;
    CBI16 : in  std_logic;
    CBI17 : in  std_logic;
    CBI18 : in  std_logic;

    CBO1  : out std_logic;
    CBO2  : out std_logic;
    CBO3  : out std_logic;
    CBO4  : out std_logic;
    CBO5  : out std_logic;
    CBO6  : out std_logic;
    CBO7  : out std_logic;
    CBO8  : out std_logic;
    CBO9  : out std_logic;
    CBO10 : out std_logic;
    CBO11 : out std_logic;
    CBO12 : out std_logic;
    CBO13 : out std_logic;
    CBO14 : out std_logic;
    CBO15 : out std_logic;
    CBO16 : out std_logic;
    CBO17 : out std_logic;
    CBO18 : out std_logic;

    CCI   : in  std_logic;
    CCO   : out std_logic;
    CI    : in  std_logic;
    CK    : in  std_logic;
    CO    : out std_logic;
    CO37  : out std_logic;
    CO49  : out std_logic;

    CZI1  : in  std_logic;
    CZI2  : in  std_logic;
    CZI3  : in  std_logic;
    CZI4  : in  std_logic;
    CZI5  : in  std_logic;
    CZI6  : in  std_logic;
    CZI7  : in  std_logic;
    CZI8  : in  std_logic;
    CZI9  : in  std_logic;
    CZI10 : in  std_logic;
    CZI11 : in  std_logic;
    CZI12 : in  std_logic;
    CZI13 : in  std_logic;
    CZI14 : in  std_logic;
    CZI15 : in  std_logic;
    CZI16 : in  std_logic;
    CZI17 : in  std_logic;
    CZI18 : in  std_logic;
    CZI19 : in  std_logic;
    CZI20 : in  std_logic;
    CZI21 : in  std_logic;
    CZI22 : in  std_logic;
    CZI23 : in  std_logic;
    CZI24 : in  std_logic;
    CZI25 : in  std_logic;
    CZI26 : in  std_logic;
    CZI27 : in  std_logic;
    CZI28 : in  std_logic;
    CZI29 : in  std_logic;
    CZI30 : in  std_logic;
    CZI31 : in  std_logic;
    CZI32 : in  std_logic;
    CZI33 : in  std_logic;
    CZI34 : in  std_logic;
    CZI35 : in  std_logic;
    CZI36 : in  std_logic;
    CZI37 : in  std_logic;
    CZI38 : in  std_logic;
    CZI39 : in  std_logic;
    CZI40 : in  std_logic;
    CZI41 : in  std_logic;
    CZI42 : in  std_logic;
    CZI43 : in  std_logic;
    CZI44 : in  std_logic;
    CZI45 : in  std_logic;
    CZI46 : in  std_logic;
    CZI47 : in  std_logic;
    CZI48 : in  std_logic;
    CZI49 : in  std_logic;
    CZI50 : in  std_logic;
    CZI51 : in  std_logic;
    CZI52 : in  std_logic;
    CZI53 : in  std_logic;
    CZI54 : in  std_logic;
    CZI55 : in  std_logic;
    CZI56 : in  std_logic;

    CZO1  : out std_logic;
    CZO2  : out std_logic;
    CZO3  : out std_logic;
    CZO4  : out std_logic;
    CZO5  : out std_logic;
    CZO6  : out std_logic;
    CZO7  : out std_logic;
    CZO8  : out std_logic;
    CZO9  : out std_logic;
    CZO10 : out std_logic;
    CZO11 : out std_logic;
    CZO12 : out std_logic;
    CZO13 : out std_logic;
    CZO14 : out std_logic;
    CZO15 : out std_logic;
    CZO16 : out std_logic;
    CZO17 : out std_logic;
    CZO18 : out std_logic;
    CZO19 : out std_logic;
    CZO20 : out std_logic;
    CZO21 : out std_logic;
    CZO22 : out std_logic;
    CZO23 : out std_logic;
    CZO24 : out std_logic;
    CZO25 : out std_logic;
    CZO26 : out std_logic;
    CZO27 : out std_logic;
    CZO28 : out std_logic;
    CZO29 : out std_logic;
    CZO30 : out std_logic;
    CZO31 : out std_logic;
    CZO32 : out std_logic;
    CZO33 : out std_logic;
    CZO34 : out std_logic;
    CZO35 : out std_logic;
    CZO36 : out std_logic;
    CZO37 : out std_logic;
    CZO38 : out std_logic;
    CZO39 : out std_logic;
    CZO40 : out std_logic;
    CZO41 : out std_logic;
    CZO42 : out std_logic;
    CZO43 : out std_logic;
    CZO44 : out std_logic;
    CZO45 : out std_logic;
    CZO46 : out std_logic;
    CZO47 : out std_logic;
    CZO48 : out std_logic;
    CZO49 : out std_logic;
    CZO50 : out std_logic;
    CZO51 : out std_logic;
    CZO52 : out std_logic;
    CZO53 : out std_logic;
    CZO54 : out std_logic;
    CZO55 : out std_logic;
    CZO56 : out std_logic;

    D1    : in  std_logic;
    D2    : in  std_logic;
    D3    : in  std_logic;
    D4    : in  std_logic;
    D5    : in  std_logic;
    D6    : in  std_logic;
    D7    : in  std_logic;
    D8    : in  std_logic;
    D9    : in  std_logic;
    D10   : in  std_logic;
    D11   : in  std_logic;
    D12   : in  std_logic;
    D13   : in  std_logic;
    D14   : in  std_logic;
    D15   : in  std_logic;
    D16   : in  std_logic;
    D17   : in  std_logic;
    D18   : in  std_logic;

    OVF   : out std_logic;
    R     : in  std_logic;
    RZ    : in  std_logic;
    WE    : in  std_logic;

    Z1    : out std_logic;
    Z2    : out std_logic;
    Z3    : out std_logic;
    Z4    : out std_logic;
    Z5    : out std_logic;
    Z6    : out std_logic;
    Z7    : out std_logic;
    Z8    : out std_logic;
    Z9    : out std_logic;
    Z10   : out std_logic;
    Z11   : out std_logic;
    Z12   : out std_logic;
    Z13   : out std_logic;
    Z14   : out std_logic;
    Z15   : out std_logic;
    Z16   : out std_logic;
    Z17   : out std_logic;
    Z18   : out std_logic;
    Z19   : out std_logic;
    Z20   : out std_logic;
    Z21   : out std_logic;
    Z22   : out std_logic;
    Z23   : out std_logic;
    Z24   : out std_logic;
    Z25   : out std_logic;
    Z26   : out std_logic;
    Z27   : out std_logic;
    Z28   : out std_logic;
    Z29   : out std_logic;
    Z30   : out std_logic;
    Z31   : out std_logic;
    Z32   : out std_logic;
    Z33   : out std_logic;
    Z34   : out std_logic;
    Z35   : out std_logic;
    Z36   : out std_logic;
    Z37   : out std_logic;
    Z38   : out std_logic;
    Z39   : out std_logic;
    Z40   : out std_logic;
    Z41   : out std_logic;
    Z42   : out std_logic;
    Z43   : out std_logic;
    Z44   : out std_logic;
    Z45   : out std_logic;
    Z46   : out std_logic;
    Z47   : out std_logic;
    Z48   : out std_logic;
    Z49   : out std_logic;
    Z50   : out std_logic;
    Z51   : out std_logic;
    Z52   : out std_logic;
    Z53   : out std_logic;
    Z54   : out std_logic;
    Z55   : out std_logic;
    Z56   : out std_logic
);
end NX_DSP;

architecture NX_RTL of NX_DSP is
    attribute NX_TYPE :string;
    attribute NX_TYPE of NX_RTL: architecture is "PHY";

    attribute NX_USE :string;
    attribute NX_USE of NX_RTL: architecture is "NX_DSP";
begin
end NX_RTL;

----------------------------------------------------------------------------------------------------

-- =================================================================================================
--   NX_DSP_WRAP definition                                                             2017/09/25
-- =================================================================================================

library IEEE;
use IEEE.STD_LOGIC_1164.ALL;

entity NX_DSP_WRAP is
generic (
    std_mode    : string := "";
    raw_config0 : bit_vector(19 downto 0) := B"00000000000000000000";        -- MUX
    raw_config1 : bit_vector(18 downto 0) := B"0000000000000000000";         -- PRC
    raw_config2 : bit_vector(12 downto 0) := B"0000000000000";               -- PRR
    raw_config3 : bit_vector( 6 downto 0) := B"0000000"                      -- ALU
);
port (
    A    : in  std_logic_vector(23 downto 0);
    B    : in  std_logic_vector(17 downto 0);
    C    : in  std_logic_vector(35 downto 0);

    CAI  : in  std_logic_vector(17 downto 0);
    CAO  : out std_logic_vector(17 downto 0);
    CBI  : in  std_logic_vector(17 downto 0);
    CBO  : out std_logic_vector(17 downto 0);

    CCI  : in  std_logic;
    CCO  : out std_logic;
    CI   : in  std_logic;
    CK   : in  std_logic;
    CO   : out std_logic;
    CO37 : out std_logic;
    CO49 : out std_logic;

    CZI  : in  std_logic_vector(55 downto 0);
    CZO  : out std_logic_vector(55 downto 0);

    D    : in  std_logic_vector(17 downto 0);

    OVF  : out std_logic;
    R    : in  std_logic;
    RZ   : in  std_logic;
    WE   : in  std_logic;

    Z    : out std_logic_vector(55 downto 0)
);
end NX_DSP_WRAP;

-- architecture NXP_ARCH of NX_DSP_WRAP#{{{#
architecture NXP_ARCH of NX_DSP_WRAP is
    attribute NX_TYPE :string;
    attribute NX_TYPE of NXP_ARCH: architecture is "WRAPPER";

component NX_DSP
generic (
    std_mode    : string := "";
    raw_config0 : bit_vector(19 downto 0) := B"00000000000000000000";      -- MUX
    raw_config1 : bit_vector(18 downto 0) := B"0000000000000000000";       -- PRC
    raw_config2 : bit_vector(12 downto 0) := B"0000000000000";             -- PRR
    raw_config3 : bit_vector( 6 downto 0) := B"0000000"                    -- ALU
);
port (
    A1    : in  std_logic;
    A2    : in  std_logic;
    A3    : in  std_logic;
    A4    : in  std_logic;
    A5    : in  std_logic;
    A6    : in  std_logic;
    A7    : in  std_logic;
    A8    : in  std_logic;
    A9    : in  std_logic;
    A10   : in  std_logic;
    A11   : in  std_logic;
    A12   : in  std_logic;
    A13   : in  std_logic;
    A14   : in  std_logic;
    A15   : in  std_logic;
    A16   : in  std_logic;
    A17   : in  std_logic;
    A18   : in  std_logic;
    A19   : in  std_logic;
    A20   : in  std_logic;
    A21   : in  std_logic;
    A22   : in  std_logic;
    A23   : in  std_logic;
    A24   : in  std_logic;

    B1    : in  std_logic;
    B2    : in  std_logic;
    B3    : in  std_logic;
    B4    : in  std_logic;
    B5    : in  std_logic;
    B6    : in  std_logic;
    B7    : in  std_logic;
    B8    : in  std_logic;
    B9    : in  std_logic;
    B10   : in  std_logic;
    B11   : in  std_logic;
    B12   : in  std_logic;
    B13   : in  std_logic;
    B14   : in  std_logic;
    B15   : in  std_logic;
    B16   : in  std_logic;
    B17   : in  std_logic;
    B18   : in  std_logic;

    C1    : in  std_logic;
    C2    : in  std_logic;
    C3    : in  std_logic;
    C4    : in  std_logic;
    C5    : in  std_logic;
    C6    : in  std_logic;
    C7    : in  std_logic;
    C8    : in  std_logic;
    C9    : in  std_logic;
    C10   : in  std_logic;
    C11   : in  std_logic;
    C12   : in  std_logic;
    C13   : in  std_logic;
    C14   : in  std_logic;
    C15   : in  std_logic;
    C16   : in  std_logic;
    C17   : in  std_logic;
    C18   : in  std_logic;
    C19   : in  std_logic;
    C20   : in  std_logic;
    C21   : in  std_logic;
    C22   : in  std_logic;
    C23   : in  std_logic;
    C24   : in  std_logic;
    C25   : in  std_logic;
    C26   : in  std_logic;
    C27   : in  std_logic;
    C28   : in  std_logic;
    C29   : in  std_logic;
    C30   : in  std_logic;
    C31   : in  std_logic;
    C32   : in  std_logic;
    C33   : in  std_logic;
    C34   : in  std_logic;
    C35   : in  std_logic;
    C36   : in  std_logic;

    CAI1  : in  std_logic;
    CAI2  : in  std_logic;
    CAI3  : in  std_logic;
    CAI4  : in  std_logic;
    CAI5  : in  std_logic;
    CAI6  : in  std_logic;
    CAI7  : in  std_logic;
    CAI8  : in  std_logic;
    CAI9  : in  std_logic;
    CAI10 : in  std_logic;
    CAI11 : in  std_logic;
    CAI12 : in  std_logic;
    CAI13 : in  std_logic;
    CAI14 : in  std_logic;
    CAI15 : in  std_logic;
    CAI16 : in  std_logic;
    CAI17 : in  std_logic;
    CAI18 : in  std_logic;

    CAO1  : out std_logic;
    CAO2  : out std_logic;
    CAO3  : out std_logic;
    CAO4  : out std_logic;
    CAO5  : out std_logic;
    CAO6  : out std_logic;
    CAO7  : out std_logic;
    CAO8  : out std_logic;
    CAO9  : out std_logic;
    CAO10 : out std_logic;
    CAO11 : out std_logic;
    CAO12 : out std_logic;
    CAO13 : out std_logic;
    CAO14 : out std_logic;
    CAO15 : out std_logic;
    CAO16 : out std_logic;
    CAO17 : out std_logic;
    CAO18 : out std_logic;

    CBI1  : in  std_logic;
    CBI2  : in  std_logic;
    CBI3  : in  std_logic;
    CBI4  : in  std_logic;
    CBI5  : in  std_logic;
    CBI6  : in  std_logic;
    CBI7  : in  std_logic;
    CBI8  : in  std_logic;
    CBI9  : in  std_logic;
    CBI10 : in  std_logic;
    CBI11 : in  std_logic;
    CBI12 : in  std_logic;
    CBI13 : in  std_logic;
    CBI14 : in  std_logic;
    CBI15 : in  std_logic;
    CBI16 : in  std_logic;
    CBI17 : in  std_logic;
    CBI18 : in  std_logic;

    CBO1  : out std_logic;
    CBO2  : out std_logic;
    CBO3  : out std_logic;
    CBO4  : out std_logic;
    CBO5  : out std_logic;
    CBO6  : out std_logic;
    CBO7  : out std_logic;
    CBO8  : out std_logic;
    CBO9  : out std_logic;
    CBO10 : out std_logic;
    CBO11 : out std_logic;
    CBO12 : out std_logic;
    CBO13 : out std_logic;
    CBO14 : out std_logic;
    CBO15 : out std_logic;
    CBO16 : out std_logic;
    CBO17 : out std_logic;
    CBO18 : out std_logic;

    CCI   : in  std_logic;
    CCO   : out std_logic;
    CI    : in  std_logic;
    CK    : in  std_logic;
    CO    : out std_logic;
    CO37  : out std_logic;
    CO49  : out std_logic;

    CZI1  : in  std_logic;
    CZI2  : in  std_logic;
    CZI3  : in  std_logic;
    CZI4  : in  std_logic;
    CZI5  : in  std_logic;
    CZI6  : in  std_logic;
    CZI7  : in  std_logic;
    CZI8  : in  std_logic;
    CZI9  : in  std_logic;
    CZI10 : in  std_logic;
    CZI11 : in  std_logic;
    CZI12 : in  std_logic;
    CZI13 : in  std_logic;
    CZI14 : in  std_logic;
    CZI15 : in  std_logic;
    CZI16 : in  std_logic;
    CZI17 : in  std_logic;
    CZI18 : in  std_logic;
    CZI19 : in  std_logic;
    CZI20 : in  std_logic;
    CZI21 : in  std_logic;
    CZI22 : in  std_logic;
    CZI23 : in  std_logic;
    CZI24 : in  std_logic;
    CZI25 : in  std_logic;
    CZI26 : in  std_logic;
    CZI27 : in  std_logic;
    CZI28 : in  std_logic;
    CZI29 : in  std_logic;
    CZI30 : in  std_logic;
    CZI31 : in  std_logic;
    CZI32 : in  std_logic;
    CZI33 : in  std_logic;
    CZI34 : in  std_logic;
    CZI35 : in  std_logic;
    CZI36 : in  std_logic;
    CZI37 : in  std_logic;
    CZI38 : in  std_logic;
    CZI39 : in  std_logic;
    CZI40 : in  std_logic;
    CZI41 : in  std_logic;
    CZI42 : in  std_logic;
    CZI43 : in  std_logic;
    CZI44 : in  std_logic;
    CZI45 : in  std_logic;
    CZI46 : in  std_logic;
    CZI47 : in  std_logic;
    CZI48 : in  std_logic;
    CZI49 : in  std_logic;
    CZI50 : in  std_logic;
    CZI51 : in  std_logic;
    CZI52 : in  std_logic;
    CZI53 : in  std_logic;
    CZI54 : in  std_logic;
    CZI55 : in  std_logic;
    CZI56 : in  std_logic;

    CZO1  : out std_logic;
    CZO2  : out std_logic;
    CZO3  : out std_logic;
    CZO4  : out std_logic;
    CZO5  : out std_logic;
    CZO6  : out std_logic;
    CZO7  : out std_logic;
    CZO8  : out std_logic;
    CZO9  : out std_logic;
    CZO10 : out std_logic;
    CZO11 : out std_logic;
    CZO12 : out std_logic;
    CZO13 : out std_logic;
    CZO14 : out std_logic;
    CZO15 : out std_logic;
    CZO16 : out std_logic;
    CZO17 : out std_logic;
    CZO18 : out std_logic;
    CZO19 : out std_logic;
    CZO20 : out std_logic;
    CZO21 : out std_logic;
    CZO22 : out std_logic;
    CZO23 : out std_logic;
    CZO24 : out std_logic;
    CZO25 : out std_logic;
    CZO26 : out std_logic;
    CZO27 : out std_logic;
    CZO28 : out std_logic;
    CZO29 : out std_logic;
    CZO30 : out std_logic;
    CZO31 : out std_logic;
    CZO32 : out std_logic;
    CZO33 : out std_logic;
    CZO34 : out std_logic;
    CZO35 : out std_logic;
    CZO36 : out std_logic;
    CZO37 : out std_logic;
    CZO38 : out std_logic;
    CZO39 : out std_logic;
    CZO40 : out std_logic;
    CZO41 : out std_logic;
    CZO42 : out std_logic;
    CZO43 : out std_logic;
    CZO44 : out std_logic;
    CZO45 : out std_logic;
    CZO46 : out std_logic;
    CZO47 : out std_logic;
    CZO48 : out std_logic;
    CZO49 : out std_logic;
    CZO50 : out std_logic;
    CZO51 : out std_logic;
    CZO52 : out std_logic;
    CZO53 : out std_logic;
    CZO54 : out std_logic;
    CZO55 : out std_logic;
    CZO56 : out std_logic;

    D1    : in  std_logic;
    D2    : in  std_logic;
    D3    : in  std_logic;
    D4    : in  std_logic;
    D5    : in  std_logic;
    D6    : in  std_logic;
    D7    : in  std_logic;
    D8    : in  std_logic;
    D9    : in  std_logic;
    D10   : in  std_logic;
    D11   : in  std_logic;
    D12   : in  std_logic;
    D13   : in  std_logic;
    D14   : in  std_logic;
    D15   : in  std_logic;
    D16   : in  std_logic;
    D17   : in  std_logic;
    D18   : in  std_logic;

    OVF   : out std_logic;
    R     : in  std_logic;
    RZ    : in  std_logic;
    WE    : in  std_logic;

    Z1    : out std_logic;
    Z2    : out std_logic;
    Z3    : out std_logic;
    Z4    : out std_logic;
    Z5    : out std_logic;
    Z6    : out std_logic;
    Z7    : out std_logic;
    Z8    : out std_logic;
    Z9    : out std_logic;
    Z10   : out std_logic;
    Z11   : out std_logic;
    Z12   : out std_logic;
    Z13   : out std_logic;
    Z14   : out std_logic;
    Z15   : out std_logic;
    Z16   : out std_logic;
    Z17   : out std_logic;
    Z18   : out std_logic;
    Z19   : out std_logic;
    Z20   : out std_logic;
    Z21   : out std_logic;
    Z22   : out std_logic;
    Z23   : out std_logic;
    Z24   : out std_logic;
    Z25   : out std_logic;
    Z26   : out std_logic;
    Z27   : out std_logic;
    Z28   : out std_logic;
    Z29   : out std_logic;
    Z30   : out std_logic;
    Z31   : out std_logic;
    Z32   : out std_logic;
    Z33   : out std_logic;
    Z34   : out std_logic;
    Z35   : out std_logic;
    Z36   : out std_logic;
    Z37   : out std_logic;
    Z38   : out std_logic;
    Z39   : out std_logic;
    Z40   : out std_logic;
    Z41   : out std_logic;
    Z42   : out std_logic;
    Z43   : out std_logic;
    Z44   : out std_logic;
    Z45   : out std_logic;
    Z46   : out std_logic;
    Z47   : out std_logic;
    Z48   : out std_logic;
    Z49   : out std_logic;
    Z50   : out std_logic;
    Z51   : out std_logic;
    Z52   : out std_logic;
    Z53   : out std_logic;
    Z54   : out std_logic;
    Z55   : out std_logic;
    Z56   : out std_logic
);
end component;

begin

dsp: NX_DSP generic map (
    std_mode    => std_mode,
    raw_config0 => raw_config0,
    raw_config1 => raw_config1,
    raw_config2 => raw_config2,
    raw_config3 => raw_config3)
port map (
    A1    => A(0),
    A2    => A(1),
    A3    => A(2),
    A4    => A(3),
    A5    => A(4),
    A6    => A(5),
    A7    => A(6),
    A8    => A(7),
    A9    => A(8),
    A10   => A(9),
    A11   => A(10),
    A12   => A(11),
    A13   => A(12),
    A14   => A(13),
    A15   => A(14),
    A16   => A(15),
    A17   => A(16),
    A18   => A(17),
    A19   => A(18),
    A20   => A(19),
    A21   => A(20),
    A22   => A(21),
    A23   => A(22),
    A24   => A(23),

    B1    => B(0),
    B2    => B(1),
    B3    => B(2),
    B4    => B(3),
    B5    => B(4),
    B6    => B(5),
    B7    => B(6),
    B8    => B(7),
    B9    => B(8),
    B10   => B(9),
    B11   => B(10),
    B12   => B(11),
    B13   => B(12),
    B14   => B(13),
    B15   => B(14),
    B16   => B(15),
    B17   => B(16),
    B18   => B(17),

    C1    => C(0),
    C2    => C(1),
    C3    => C(2),
    C4    => C(3),
    C5    => C(4),
    C6    => C(5),
    C7    => C(6),
    C8    => C(7),
    C9    => C(8),
    C10   => C(9),
    C11   => C(10),
    C12   => C(11),
    C13   => C(12),
    C14   => C(13),
    C15   => C(14),
    C16   => C(15),
    C17   => C(16),
    C18   => C(17),
    C19   => C(18),
    C20   => C(19),
    C21   => C(20),
    C22   => C(21),
    C23   => C(22),
    C24   => C(23),
    C25   => C(24),
    C26   => C(25),
    C27   => C(26),
    C28   => C(27),
    C29   => C(28),
    C30   => C(29),
    C31   => C(30),
    C32   => C(31),
    C33   => C(32),
    C34   => C(33),
    C35   => C(34),
    C36   => C(35),

    CAI1  => CAI(0),
    CAI2  => CAI(1),
    CAI3  => CAI(2),
    CAI4  => CAI(3),
    CAI5  => CAI(4),
    CAI6  => CAI(5),
    CAI7  => CAI(6),
    CAI8  => CAI(7),
    CAI9  => CAI(8),
    CAI10 => CAI(9),
    CAI11 => CAI(10),
    CAI12 => CAI(11),
    CAI13 => CAI(12),
    CAI14 => CAI(13),
    CAI15 => CAI(14),
    CAI16 => CAI(15),
    CAI17 => CAI(16),
    CAI18 => CAI(17),

    CAO1  => CAO(0),
    CAO2  => CAO(1),
    CAO3  => CAO(2),
    CAO4  => CAO(3),
    CAO5  => CAO(4),
    CAO6  => CAO(5),
    CAO7  => CAO(6),
    CAO8  => CAO(7),
    CAO9  => CAO(8),
    CAO10 => CAO(9),
    CAO11 => CAO(10),
    CAO12 => CAO(11),
    CAO13 => CAO(12),
    CAO14 => CAO(13),
    CAO15 => CAO(14),
    CAO16 => CAO(15),
    CAO17 => CAO(16),
    CAO18 => CAO(17),

    CBI1  => CBI(0),
    CBI2  => CBI(1),
    CBI3  => CBI(2),
    CBI4  => CBI(3),
    CBI5  => CBI(4),
    CBI6  => CBI(5),
    CBI7  => CBI(6),
    CBI8  => CBI(7),
    CBI9  => CBI(8),
    CBI10 => CBI(9),
    CBI11 => CBI(10),
    CBI12 => CBI(11),
    CBI13 => CBI(12),
    CBI14 => CBI(13),
    CBI15 => CBI(14),
    CBI16 => CBI(15),
    CBI17 => CBI(16),
    CBI18 => CBI(17),

    CBO1  => CBO(0),
    CBO2  => CBO(1),
    CBO3  => CBO(2),
    CBO4  => CBO(3),
    CBO5  => CBO(4),
    CBO6  => CBO(5),
    CBO7  => CBO(6),
    CBO8  => CBO(7),
    CBO9  => CBO(8),
    CBO10 => CBO(9),
    CBO11 => CBO(10),
    CBO12 => CBO(11),
    CBO13 => CBO(12),
    CBO14 => CBO(13),
    CBO15 => CBO(14),
    CBO16 => CBO(15),
    CBO17 => CBO(16),
    CBO18 => CBO(17),

    CCI   => CCI,
    CCO   => CCO,
    CI    => CI,
    CK    => CK,
    CO    => CO,
    CO37  => CO37,
    CO49  => CO49,

    CZI1  => CZI(0),
    CZI2  => CZI(1),
    CZI3  => CZI(2),
    CZI4  => CZI(3),
    CZI5  => CZI(4),
    CZI6  => CZI(5),
    CZI7  => CZI(6),
    CZI8  => CZI(7),
    CZI9  => CZI(8),
    CZI10 => CZI(9),
    CZI11 => CZI(10),
    CZI12 => CZI(11),
    CZI13 => CZI(12),
    CZI14 => CZI(13),
    CZI15 => CZI(14),
    CZI16 => CZI(15),
    CZI17 => CZI(16),
    CZI18 => CZI(17),
    CZI19 => CZI(18),
    CZI20 => CZI(19),
    CZI21 => CZI(20),
    CZI22 => CZI(21),
    CZI23 => CZI(22),
    CZI24 => CZI(23),
    CZI25 => CZI(24),
    CZI26 => CZI(25),
    CZI27 => CZI(26),
    CZI28 => CZI(27),
    CZI29 => CZI(28),
    CZI30 => CZI(29),
    CZI31 => CZI(30),
    CZI32 => CZI(31),
    CZI33 => CZI(32),
    CZI34 => CZI(33),
    CZI35 => CZI(34),
    CZI36 => CZI(35),
    CZI37 => CZI(36),
    CZI38 => CZI(37),
    CZI39 => CZI(38),
    CZI40 => CZI(39),
    CZI41 => CZI(40),
    CZI42 => CZI(41),
    CZI43 => CZI(42),
    CZI44 => CZI(43),
    CZI45 => CZI(44),
    CZI46 => CZI(45),
    CZI47 => CZI(46),
    CZI48 => CZI(47),
    CZI49 => CZI(48),
    CZI50 => CZI(49),
    CZI51 => CZI(50),
    CZI52 => CZI(51),
    CZI53 => CZI(52),
    CZI54 => CZI(53),
    CZI55 => CZI(54),
    CZI56 => CZI(55),

    CZO1  => CZO(0),
    CZO2  => CZO(1),
    CZO3  => CZO(2),
    CZO4  => CZO(3),
    CZO5  => CZO(4),
    CZO6  => CZO(5),
    CZO7  => CZO(6),
    CZO8  => CZO(7),
    CZO9  => CZO(8),
    CZO10 => CZO(9),
    CZO11 => CZO(10),
    CZO12 => CZO(11),
    CZO13 => CZO(12),
    CZO14 => CZO(13),
    CZO15 => CZO(14),
    CZO16 => CZO(15),
    CZO17 => CZO(16),
    CZO18 => CZO(17),
    CZO19 => CZO(18),
    CZO20 => CZO(19),
    CZO21 => CZO(20),
    CZO22 => CZO(21),
    CZO23 => CZO(22),
    CZO24 => CZO(23),
    CZO25 => CZO(24),
    CZO26 => CZO(25),
    CZO27 => CZO(26),
    CZO28 => CZO(27),
    CZO29 => CZO(28),
    CZO30 => CZO(29),
    CZO31 => CZO(30),
    CZO32 => CZO(31),
    CZO33 => CZO(32),
    CZO34 => CZO(33),
    CZO35 => CZO(34),
    CZO36 => CZO(35),
    CZO37 => CZO(36),
    CZO38 => CZO(37),
    CZO39 => CZO(38),
    CZO40 => CZO(39),
    CZO41 => CZO(40),
    CZO42 => CZO(41),
    CZO43 => CZO(42),
    CZO44 => CZO(43),
    CZO45 => CZO(44),
    CZO46 => CZO(45),
    CZO47 => CZO(46),
    CZO48 => CZO(47),
    CZO49 => CZO(48),
    CZO50 => CZO(49),
    CZO51 => CZO(50),
    CZO52 => CZO(51),
    CZO53 => CZO(52),
    CZO54 => CZO(53),
    CZO55 => CZO(54),
    CZO56 => CZO(55),

    D1    => D(0),
    D2    => D(1),
    D3    => D(2),
    D4    => D(3),
    D5    => D(4),
    D6    => D(5),
    D7    => D(6),
    D8    => D(7),
    D9    => D(8),
    D10   => D(9),
    D11   => D(10),
    D12   => D(11),
    D13   => D(12),
    D14   => D(13),
    D15   => D(14),
    D16   => D(15),
    D17   => D(16),
    D18   => D(17),

    OVF   => OVF,
    R     => R,
    RZ    => RZ,
    WE    => WE,

    Z1    => Z(0),
    Z2    => Z(1),
    Z3    => Z(2),
    Z4    => Z(3),
    Z5    => Z(4),
    Z6    => Z(5),
    Z7    => Z(6),
    Z8    => Z(7),
    Z9    => Z(8),
    Z10   => Z(9),
    Z11   => Z(10),
    Z12   => Z(11),
    Z13   => Z(12),
    Z14   => Z(13),
    Z15   => Z(14),
    Z16   => Z(15),
    Z17   => Z(16),
    Z18   => Z(17),
    Z19   => Z(18),
    Z20   => Z(19),
    Z21   => Z(20),
    Z22   => Z(21),
    Z23   => Z(22),
    Z24   => Z(23),
    Z25   => Z(24),
    Z26   => Z(25),
    Z27   => Z(26),
    Z28   => Z(27),
    Z29   => Z(28),
    Z30   => Z(29),
    Z31   => Z(30),
    Z32   => Z(31),
    Z33   => Z(32),
    Z34   => Z(33),
    Z35   => Z(34),
    Z36   => Z(35),
    Z37   => Z(36),
    Z38   => Z(37),
    Z39   => Z(38),
    Z40   => Z(39),
    Z41   => Z(40),
    Z42   => Z(41),
    Z43   => Z(42),
    Z44   => Z(43),
    Z45   => Z(44),
    Z46   => Z(45),
    Z47   => Z(46),
    Z48   => Z(47),
    Z49   => Z(48),
    Z50   => Z(49),
    Z51   => Z(50),
    Z52   => Z(51),
    Z53   => Z(52),
    Z54   => Z(53),
    Z55   => Z(54),
    Z56   => Z(55)
);

end NXP_ARCH;
-- #}}}#

----------------------------------------------------------------------------------------------------

-- =================================================================================================
--   NX_DSP_SPLIT definition                                                             2017/09/25
-- =================================================================================================

library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.STD_LOGIC_arith.ALL;
use IEEE.STD_LOGIC_signed.ALL;

entity NX_DSP_SPLIT is
generic (
-------------------------------------------------------------------------
-- Generic declaration to define the "raw_config0" (cfg_mode). Defines :
------------------------------------------------------------------------- 
   SIGNED_MODE          : bit                    := '0';
   PRE_ADDER_OP         : bit                    := '0';       -- '0' = Additon, '1' = Subraction
   MUX_A                : bit                    := '0';       -- '0' = A input, '1' = CAI input
   MUX_B                : bit                    := '0';       -- '0' = B input, '1' = CBI input
   MUX_P                : bit                    := '0';       -- '0' for PRE_ADDER, '0' for B input
   MUX_X                : bit_vector(1 downto 0) := B"00";     -- Select X operand   "00" = C,
                                                               --                    "01" = CZI,
                                                               --                    "11" = SHFT(CZI) & C(11:0),
                                                               --                    "10" Select Z feedback
   MUX_Y                : bit                    := '0';       -- '0' Select MULT output, '1' for (B & A)
   MUX_CI               : bit                    := '0';       -- Select fabric input (not cascade)
   MUX_Z                : bit                    := '0';       -- Select ALU output
                                                               -- (not ALU input operand coming from PR_Y)

   Z_FEEDBACK_SHL12     : bit                    := '0';       -- '0' for No shift, '1' for 12-bit left shift
   ENABLE_SATURATION    : bit                    := '0';       -- '0' for Disable,  '1' for Enable
   SATURATION_RANK      : bit_vector(5 downto 0) := B"000000"; -- Weight of useful MSB
                                                               --        on Z and CZO result
                                                               --(to define saturation and overflow)

   ALU_DYNAMIC_OP       : bit                    := '0';       -- '0' for Static,
                                                               -- '1' for Dynamic
                                                               -- (D6 ... D1 is not used for dynamic operation)
   CO_SEL               : bit                    := '0';       -- '0' for C0 = ALU(36), '1' for CO = ALU(48)

-------------------------------------------------------------------------
-- Generic declaration to define the "raw_config1" (cfg_pipe_mux)
-------------------------------------------------------------------------
   PR_A_MUX                : bit_vector(1 downto 0) := B"00"; -- Number of pipe reg levels
                                                              --        on A input
   PR_A_CASCADE_MUX        : bit_vector(1 downto 0) := B"00"; -- Number of pipe reg levels
                                                              --        for CAO output
   PR_B_MUX                : bit_vector(1 downto 0) := B"00"; -- Number of pipe reg levels
                                                              --        on B input
   PR_B_CASCADE_MUX        : bit_vector(1 downto 0) := B"00"; -- Number of pipe reg levels
                                                              --        for CAO output

   PR_C_MUX                : bit                    := '0';   -- '0' for No pipe reg, '1' for 1 pipe reg
   PR_D_MUX                : bit                    := '0';   -- '0' for No pipe reg, '1' for 1 pipe reg
   PR_CI_MUX               : bit                    := '0';   -- '0' for No pipe reg, '1' for 1 pipe reg
   PR_P_MUX                : bit                    := '0';   -- '0' for No pipe reg, '1' for 1 pipe reg (Pre-adder)
   PR_X_MUX                : bit                    := '0';   -- '0' for No pipe reg, '1' for 1 pipe reg
   PR_Y_MUX                : bit                    := '0';   -- '0' for No pipe reg, '1' for 1 pipe reg

   PR_MULT_MUX             : bit                    := '0';   -- No pipe reg  -- Register inside MULT
   PR_ALU_MUX              : bit                    := '0';   -- No pipe reg  -- Register inside ALU
   PR_Z_MUX                : bit                    := '0';   -- Registered output

   PR_CO_MUX               : bit                    := '0';   -- '0' for No pipe reg, '1' for 1 pipe reg
   PR_OV_MUX               : bit                    := '0';   -- '0' for No pipe reg, '1' for 1 pipe reg

-------------------------------------------------------------------------
-- Generic declaration to define the "raw_config2" (cfg_pipe_rst)
-------------------------------------------------------------------------
   ENABLE_PR_A_RST         : bit                    := '0';   -- '0' for Disable, '1' for Enable 
   ENABLE_PR_B_RST         : bit                    := '0';   -- '0' for Disable, '1' for Enable 
   ENABLE_PR_C_RST         : bit                    := '0';   -- '0' for Disable, '1' for Enable 
   ENABLE_PR_D_RST         : bit                    := '0';   -- '0' for Disable, '1' for Enable 
   ENABLE_PR_CI_RST        : bit                    := '0';   -- '0' for Disable, '1' for Enable 
   ENABLE_PR_P_RST         : bit                    := '0';   -- '0' for Disable, '1' for Enable 
   ENABLE_PR_X_RST         : bit                    := '0';   -- '0' for Disable, '1' for Enable 
   ENABLE_PR_Y_RST         : bit                    := '0';   -- '0' for Disable, '1' for Enable 
   ENABLE_PR_MULT_RST      : bit                    := '0';   -- '0' for Disable, '1' for Enable 
   ENABLE_PR_ALU_RST       : bit                    := '0';   -- '0' for Disable, '1' for Enable 
   ENABLE_PR_Z_RST         : bit                    := '0';   -- '0' for Disable, '1' for Enable 
   ENABLE_PR_CO_RST        : bit                    := '0';   -- '0' for Disable, '1' for Enable 
   ENABLE_PR_OV_RST        : bit                    := '0';   -- '0' for Disable, '1' for Enable 

-------------------------------------------------------------------------
-- Constants declaration to define the "cfg_pipe_rst" -- raw_config3(6 downto 0)
-------------------------------------------------------------------------
   ALU_OP                  : bit_vector(5 downto 0) := B"000000"; -- Addition = "000000", Subtract = "001010"
   ALU_MUX                 : bit                    := '0'        -- '0' for Don't swap ALU operands,
                                                                  -- '1' for ALU Swap operands
    );
port(
   CK   : IN  std_logic;
   R    : IN  std_logic;
   RZ   : IN  std_logic;
   WE   : IN  std_logic;

   CI   : IN  std_logic;     -- cy_i
   A    : IN  std_logic_vector(23 downto 0);
   B    : IN  std_logic_vector(17 downto 0);
   C    : IN  std_logic_vector(35 downto 0);
   D    : IN  std_logic_vector(17 downto 0);
   CAI  : IN  std_logic_vector(17 downto 0);
   CBI  : IN  std_logic_vector(17 downto 0);
   CZI  : IN  std_logic_vector(55 downto 0);
   CCI  : IN  std_logic;  -- ccy_i

   Z    : out  std_logic_vector(55 downto 0);
   CO   : OUT  std_logic;  -- cy_o
   CO36 : OUT  std_logic;  -- cy36_o
   CO48 : OUT  std_logic;  -- cy48_o
   OVF  : OUT  std_logic;
   CAO  : OUT  std_logic_vector(17 downto 0);
   CBO  : OUT  std_logic_vector(17 downto 0);
   CZO  : OUT  std_logic_vector(55 downto 0);
   CCO  : OUT  std_logic  -- ccy_o
  );
end NX_DSP_SPLIT;

-- architecture NX_RTL of NX_DSP_SPLIT#{{{#
architecture NX_RTL of NX_DSP_SPLIT is

----------------------------------------------------------
-- Internal signals to be mapped to the NX_DSP component
----------------------------------------------------------
signal A1         : std_logic := '0';
signal A2         : std_logic := '0';
signal A3         : std_logic := '0';
signal A4         : std_logic := '0';
signal A5         : std_logic := '0';
signal A6         : std_logic := '0';
signal A7         : std_logic := '0';
signal A8         : std_logic := '0';
signal A9         : std_logic := '0';
signal A10        : std_logic := '0';
signal A11        : std_logic := '0';
signal A12        : std_logic := '0';
signal A13        : std_logic := '0';
signal A14        : std_logic := '0';
signal A15        : std_logic := '0';
signal A16        : std_logic := '0';
signal A17        : std_logic := '0';
signal A18        : std_logic := '0';
signal A19        : std_logic := '0';
signal A20        : std_logic := '0';
signal A21        : std_logic := '0';
signal A22        : std_logic := '0';
signal A23        : std_logic := '0';
signal A24        : std_logic := '0';

signal B1         : std_logic := '0';
signal B2         : std_logic := '0';
signal B3         : std_logic := '0';
signal B4         : std_logic := '0';
signal B5         : std_logic := '0';
signal B6         : std_logic := '0';
signal B7         : std_logic := '0';
signal B8         : std_logic := '0';
signal B9         : std_logic := '0';
signal B10        : std_logic := '0';
signal B11        : std_logic := '0';
signal B12        : std_logic := '0';
signal B13        : std_logic := '0';
signal B14        : std_logic := '0';
signal B15        : std_logic := '0';
signal B16        : std_logic := '0';
signal B17        : std_logic := '0';
signal B18        : std_logic := '0';
         
signal C1         : std_logic := '0';
signal C2         : std_logic := '0';
signal C3         : std_logic := '0';
signal C4         : std_logic := '0';
signal C5         : std_logic := '0';
signal C6         : std_logic := '0';
signal C7         : std_logic := '0';
signal C8         : std_logic := '0';
signal C9         : std_logic := '0';
signal C10        : std_logic := '0';
signal C11        : std_logic := '0';
signal C12        : std_logic := '0';
signal C13        : std_logic := '0';
signal C14        : std_logic := '0';
signal C15        : std_logic := '0';
signal C16        : std_logic := '0';
signal C17        : std_logic := '0';
signal C18        : std_logic := '0';
signal C19        : std_logic := '0';
signal C20        : std_logic := '0';
signal C21        : std_logic := '0';
signal C22        : std_logic := '0';
signal C23        : std_logic := '0';
signal C24        : std_logic := '0';
signal C25        : std_logic := '0';
signal C26        : std_logic := '0';
signal C27        : std_logic := '0';
signal C28        : std_logic := '0';
signal C29        : std_logic := '0';
signal C30        : std_logic := '0';
signal C31        : std_logic := '0';
signal C32        : std_logic := '0';
signal C33        : std_logic := '0';
signal C34        : std_logic := '0';
signal C35        : std_logic := '0';
signal C36        : std_logic := '0';

signal CAI1       : std_logic := '0';
signal CAI2       : std_logic := '0';
signal CAI3       : std_logic := '0';
signal CAI4       : std_logic := '0';
signal CAI5       : std_logic := '0';
signal CAI6       : std_logic := '0';
signal CAI7       : std_logic := '0';
signal CAI8       : std_logic := '0';
signal CAI9       : std_logic := '0';
signal CAI10      : std_logic := '0';
signal CAI11      : std_logic := '0';
signal CAI12      : std_logic := '0';
signal CAI13      : std_logic := '0';
signal CAI14      : std_logic := '0';
signal CAI15      : std_logic := '0';
signal CAI16      : std_logic := '0';
signal CAI17      : std_logic := '0';
signal CAI18      : std_logic := '0';

signal CAO1       : std_logic := '0';
signal CAO2       : std_logic := '0';
signal CAO3       : std_logic := '0';
signal CAO4       : std_logic := '0';
signal CAO5       : std_logic := '0';
signal CAO6       : std_logic := '0';
signal CAO7       : std_logic := '0';
signal CAO8       : std_logic := '0';
signal CAO9       : std_logic := '0';
signal CAO10      : std_logic := '0';
signal CAO11      : std_logic := '0';
signal CAO12      : std_logic := '0';
signal CAO13      : std_logic := '0';
signal CAO14      : std_logic := '0';
signal CAO15      : std_logic := '0';
signal CAO16      : std_logic := '0';
signal CAO17      : std_logic := '0';
signal CAO18      : std_logic := '0';

signal CBI1       : std_logic := '0';
signal CBI2       : std_logic := '0';
signal CBI3       : std_logic := '0';
signal CBI4       : std_logic := '0';
signal CBI5       : std_logic := '0';
signal CBI6       : std_logic := '0';
signal CBI7       : std_logic := '0';
signal CBI8       : std_logic := '0';
signal CBI9       : std_logic := '0';
signal CBI10      : std_logic := '0';
signal CBI11      : std_logic := '0';
signal CBI12      : std_logic := '0';
signal CBI13      : std_logic := '0';
signal CBI14      : std_logic := '0';
signal CBI15      : std_logic := '0';
signal CBI16      : std_logic := '0';
signal CBI17      : std_logic := '0';
signal CBI18      : std_logic := '0';

signal CBO1       : std_logic := '0';
signal CBO2       : std_logic := '0';
signal CBO3       : std_logic := '0';
signal CBO4       : std_logic := '0';
signal CBO5       : std_logic := '0';
signal CBO6       : std_logic := '0';
signal CBO7       : std_logic := '0';
signal CBO8       : std_logic := '0';
signal CBO9       : std_logic := '0';
signal CBO10      : std_logic := '0';
signal CBO11      : std_logic := '0';
signal CBO12      : std_logic := '0';
signal CBO13      : std_logic := '0';
signal CBO14      : std_logic := '0';
signal CBO15      : std_logic := '0';
signal CBO16      : std_logic := '0';
signal CBO17      : std_logic := '0';
signal CBO18      : std_logic := '0';

signal CO37       : std_logic := '0';
signal CO49       : std_logic := '0';

signal CZI1       : std_logic := '0';
signal CZI2       : std_logic := '0';
signal CZI3       : std_logic := '0';
signal CZI4       : std_logic := '0';
signal CZI5       : std_logic := '0';
signal CZI6       : std_logic := '0';
signal CZI7       : std_logic := '0';
signal CZI8       : std_logic := '0';
signal CZI9       : std_logic := '0';
signal CZI10      : std_logic := '0';
signal CZI11      : std_logic := '0';
signal CZI12      : std_logic := '0';
signal CZI13      : std_logic := '0';
signal CZI14      : std_logic := '0';
signal CZI15      : std_logic := '0';
signal CZI16      : std_logic := '0';
signal CZI17      : std_logic := '0';
signal CZI18      : std_logic := '0';
signal CZI19      : std_logic := '0';
signal CZI20      : std_logic := '0';
signal CZI21      : std_logic := '0';
signal CZI22      : std_logic := '0';
signal CZI23      : std_logic := '0';
signal CZI24      : std_logic := '0';
signal CZI25      : std_logic := '0';
signal CZI26      : std_logic := '0';
signal CZI27      : std_logic := '0';
signal CZI28      : std_logic := '0';
signal CZI29      : std_logic := '0';
signal CZI30      : std_logic := '0';
signal CZI31      : std_logic := '0';
signal CZI32      : std_logic := '0';
signal CZI33      : std_logic := '0';
signal CZI34      : std_logic := '0';
signal CZI35      : std_logic := '0';
signal CZI36      : std_logic := '0';
signal CZI37      : std_logic := '0';
signal CZI38      : std_logic := '0';
signal CZI39      : std_logic := '0';
signal CZI40      : std_logic := '0';
signal CZI41      : std_logic := '0';
signal CZI42      : std_logic := '0';
signal CZI43      : std_logic := '0';
signal CZI44      : std_logic := '0';
signal CZI45      : std_logic := '0';
signal CZI46      : std_logic := '0';
signal CZI47      : std_logic := '0';
signal CZI48      : std_logic := '0';
signal CZI49      : std_logic := '0';
signal CZI50      : std_logic := '0';
signal CZI51      : std_logic := '0';
signal CZI52      : std_logic := '0';
signal CZI53      : std_logic := '0';
signal CZI54      : std_logic := '0';
signal CZI55      : std_logic := '0';
signal CZI56      : std_logic := '0';

signal CZO1       : std_logic := '0';
signal CZO2       : std_logic := '0';
signal CZO3       : std_logic := '0';
signal CZO4       : std_logic := '0';
signal CZO5       : std_logic := '0';
signal CZO6       : std_logic := '0';
signal CZO7       : std_logic := '0';
signal CZO8       : std_logic := '0';
signal CZO9       : std_logic := '0';
signal CZO10      : std_logic := '0';
signal CZO11      : std_logic := '0';
signal CZO12      : std_logic := '0';
signal CZO13      : std_logic := '0';
signal CZO14      : std_logic := '0';
signal CZO15      : std_logic := '0';
signal CZO16      : std_logic := '0';
signal CZO17      : std_logic := '0';
signal CZO18      : std_logic := '0';
signal CZO19      : std_logic := '0';
signal CZO20      : std_logic := '0';
signal CZO21      : std_logic := '0';
signal CZO22      : std_logic := '0';
signal CZO23      : std_logic := '0';
signal CZO24      : std_logic := '0';
signal CZO25      : std_logic := '0';
signal CZO26      : std_logic := '0';
signal CZO27      : std_logic := '0';
signal CZO28      : std_logic := '0';
signal CZO29      : std_logic := '0';
signal CZO30      : std_logic := '0';
signal CZO31      : std_logic := '0';
signal CZO32      : std_logic := '0';
signal CZO33      : std_logic := '0';
signal CZO34      : std_logic := '0';
signal CZO35      : std_logic := '0';
signal CZO36      : std_logic := '0';
signal CZO37      : std_logic := '0';
signal CZO38      : std_logic := '0';
signal CZO39      : std_logic := '0';
signal CZO40      : std_logic := '0';
signal CZO41      : std_logic := '0';
signal CZO42      : std_logic := '0';
signal CZO43      : std_logic := '0';
signal CZO44      : std_logic := '0';
signal CZO45      : std_logic := '0';
signal CZO46      : std_logic := '0';
signal CZO47      : std_logic := '0';
signal CZO48      : std_logic := '0';
signal CZO49      : std_logic := '0';
signal CZO50      : std_logic := '0';
signal CZO51      : std_logic := '0';
signal CZO52      : std_logic := '0';
signal CZO53      : std_logic := '0';
signal CZO54      : std_logic := '0';
signal CZO55      : std_logic := '0';
signal CZO56      : std_logic := '0';

signal D1         : std_logic := '0';
signal D2         : std_logic := '0';
signal D3         : std_logic := '0';
signal D4         : std_logic := '0';
signal D5         : std_logic := '0';
signal D6         : std_logic := '0';
signal D7         : std_logic := '0';
signal D8         : std_logic := '0';
signal D9         : std_logic := '0';
signal D10        : std_logic := '0';
signal D11        : std_logic := '0';
signal D12        : std_logic := '0';
signal D13        : std_logic := '0';
signal D14        : std_logic := '0';
signal D15        : std_logic := '0';
signal D16        : std_logic := '0';
signal D17        : std_logic := '0';
signal D18        : std_logic := '0';

signal Z1         : std_logic := '0';
signal Z2         : std_logic := '0';
signal Z3         : std_logic := '0';
signal Z4         : std_logic := '0';
signal Z5         : std_logic := '0';
signal Z6         : std_logic := '0';
signal Z7         : std_logic := '0';
signal Z8         : std_logic := '0';
signal Z9         : std_logic := '0';
signal Z10        : std_logic := '0';
signal Z11        : std_logic := '0';
signal Z12        : std_logic := '0';
signal Z13        : std_logic := '0';
signal Z14        : std_logic := '0';
signal Z15        : std_logic := '0';
signal Z16        : std_logic := '0';
signal Z17        : std_logic := '0';
signal Z18        : std_logic := '0';
signal Z19        : std_logic := '0';
signal Z20        : std_logic := '0';
signal Z21        : std_logic := '0';
signal Z22        : std_logic := '0';
signal Z23        : std_logic := '0';
signal Z24        : std_logic := '0';
signal Z25        : std_logic := '0';
signal Z26        : std_logic := '0';
signal Z27        : std_logic := '0';
signal Z28        : std_logic := '0';
signal Z29        : std_logic := '0';
signal Z30        : std_logic := '0';
signal Z31        : std_logic := '0';
signal Z32        : std_logic := '0';
signal Z33        : std_logic := '0';
signal Z34        : std_logic := '0';
signal Z35        : std_logic := '0';
signal Z36        : std_logic := '0';
signal Z37        : std_logic := '0';
signal Z38        : std_logic := '0';
signal Z39        : std_logic := '0';
signal Z40        : std_logic := '0';
signal Z41        : std_logic := '0';
signal Z42        : std_logic := '0';
signal Z43        : std_logic := '0';
signal Z44        : std_logic := '0';
signal Z45        : std_logic := '0';
signal Z46        : std_logic := '0';
signal Z47        : std_logic := '0';
signal Z48        : std_logic := '0';
signal Z49        : std_logic := '0';
signal Z50        : std_logic := '0';
signal Z51        : std_logic := '0';
signal Z52        : std_logic := '0';
signal Z53        : std_logic := '0';
signal Z54        : std_logic := '0';
signal Z55        : std_logic := '0';


constant raw_config0_gen : bit_vector(19 downto 0)
    := CO_SEL & ALU_DYNAMIC_OP & SATURATION_RANK & ENABLE_SATURATION & Z_FEEDBACK_SHL12 & MUX_Z &
       MUX_CI & MUX_Y & MUX_X & MUX_P & MUX_B & MUX_A & PRE_ADDER_OP & SIGNED_MODE;

constant raw_config1_gen : bit_vector(18 downto 0)
    := PR_OV_MUX & PR_CO_MUX & PR_Z_MUX & PR_ALU_MUX & PR_MULT_MUX & PR_Y_MUX & PR_X_MUX &
       PR_P_MUX & PR_CI_MUX & PR_D_MUX & PR_C_MUX & PR_B_CASCADE_MUX & PR_B_MUX & PR_A_CASCADE_MUX &
       PR_A_MUX;

constant raw_config2_gen : bit_vector(12 downto 0)
    := ENABLE_PR_OV_RST & ENABLE_PR_CO_RST & ENABLE_PR_Z_RST & ENABLE_PR_ALU_RST &
       ENABLE_PR_MULT_RST & ENABLE_PR_Y_RST & ENABLE_PR_X_RST & ENABLE_PR_P_RST & ENABLE_PR_CI_RST &
       ENABLE_PR_D_RST & ENABLE_PR_C_RST & ENABLE_PR_B_RST & ENABLE_PR_A_RST;

constant raw_config3_gen : bit_vector(6 downto 0) := ALU_MUX & ALU_OP;


----------------------------------------------------------
-- NX_DSP declaration
----------------------------------------------------------
component NX_DSP
generic (
   std_mode    : string := ""; -- standard mode [ADD36, SUB36, SMUL18, UMUL18, ...] empty for raw
   raw_config0 : bit_vector(19 downto 0) := B"00000000000000000000";        -- MUX
   raw_config1 : bit_vector(18 downto 0) := B"0000000000000000000";         -- PRC
   raw_config2 : bit_vector(12 downto 0) := B"0000000000000";               -- PRR
   raw_config3 : bit_vector( 6 downto 0) := B"0000000"                      -- ALU
   );
port (
   A1         : in std_logic := '0';
   A2         : in std_logic := '0';
   A3         : in std_logic := '0';
   A4         : in std_logic := '0';
   A5         : in std_logic := '0';
   A6         : in std_logic := '0';
   A7         : in std_logic := '0';
   A8         : in std_logic := '0';
   A9         : in std_logic := '0';
   A10        : in std_logic := '0';
   A11        : in std_logic := '0';
   A12        : in std_logic := '0';
   A13        : in std_logic := '0';
   A14        : in std_logic := '0';
   A15        : in std_logic := '0';
   A16        : in std_logic := '0';
   A17        : in std_logic := '0';
   A18        : in std_logic := '0';
   A19        : in std_logic := '0';
   A20        : in std_logic := '0';
   A21        : in std_logic := '0';
   A22        : in std_logic := '0';
   A23        : in std_logic := '0';
   A24        : in std_logic := '0';

   B1         : in std_logic := '0';
   B2         : in std_logic := '0';
   B3         : in std_logic := '0';
   B4         : in std_logic := '0';
   B5         : in std_logic := '0';
   B6         : in std_logic := '0';
   B7         : in std_logic := '0';
   B8         : in std_logic := '0';
   B9         : in std_logic := '0';
   B10        : in std_logic := '0';
   B11        : in std_logic := '0';
   B12        : in std_logic := '0';
   B13        : in std_logic := '0';
   B14        : in std_logic := '0';
   B15        : in std_logic := '0';
   B16        : in std_logic := '0';
   B17        : in std_logic := '0';
   B18        : in std_logic := '0';

   C1         : in std_logic := '0';
   C2         : in std_logic := '0';
   C3         : in std_logic := '0';
   C4         : in std_logic := '0';
   C5         : in std_logic := '0';
   C6         : in std_logic := '0';
   C7         : in std_logic := '0';
   C8         : in std_logic := '0';
   C9         : in std_logic := '0';
   C10        : in std_logic := '0';
   C11        : in std_logic := '0';
   C12        : in std_logic := '0';
   C13        : in std_logic := '0';
   C14        : in std_logic := '0';
   C15        : in std_logic := '0';
   C16        : in std_logic := '0';
   C17        : in std_logic := '0';
   C18        : in std_logic := '0';
   C19        : in std_logic := '0';
   C20        : in std_logic := '0';
   C21        : in std_logic := '0';
   C22        : in std_logic := '0';
   C23        : in std_logic := '0';
   C24        : in std_logic := '0';
   C25        : in std_logic := '0';
   C26        : in std_logic := '0';
   C27        : in std_logic := '0';
   C28        : in std_logic := '0';
   C29        : in std_logic := '0';
   C30        : in std_logic := '0';
   C31        : in std_logic := '0';
   C32        : in std_logic := '0';
   C33        : in std_logic := '0';
   C34        : in std_logic := '0';
   C35        : in std_logic := '0';
   C36        : in std_logic := '0';

   CAI1       : in std_logic := '0';
   CAI2       : in std_logic := '0';
   CAI3       : in std_logic := '0';
   CAI4       : in std_logic := '0';
   CAI5       : in std_logic := '0';
   CAI6       : in std_logic := '0';
   CAI7       : in std_logic := '0';
   CAI8       : in std_logic := '0';
   CAI9       : in std_logic := '0';
   CAI10      : in std_logic := '0';
   CAI11      : in std_logic := '0';
   CAI12      : in std_logic := '0';
   CAI13      : in std_logic := '0';
   CAI14      : in std_logic := '0';
   CAI15      : in std_logic := '0';
   CAI16      : in std_logic := '0';
   CAI17      : in std_logic := '0';
   CAI18      : in std_logic := '0';

   CAO1       : out std_logic := '0';
   CAO2       : out std_logic := '0';
   CAO3       : out std_logic := '0';
   CAO4       : out std_logic := '0';
   CAO5       : out std_logic := '0';
   CAO6       : out std_logic := '0';
   CAO7       : out std_logic := '0';
   CAO8       : out std_logic := '0';
   CAO9       : out std_logic := '0';
   CAO10      : out std_logic := '0';
   CAO11      : out std_logic := '0';
   CAO12      : out std_logic := '0';
   CAO13      : out std_logic := '0';
   CAO14      : out std_logic := '0';
   CAO15      : out std_logic := '0';
   CAO16      : out std_logic := '0';
   CAO17      : out std_logic := '0';
   CAO18      : out std_logic := '0';

   CBI1       : in std_logic := '0';
   CBI2       : in std_logic := '0';
   CBI3       : in std_logic := '0';
   CBI4       : in std_logic := '0';
   CBI5       : in std_logic := '0';
   CBI6       : in std_logic := '0';
   CBI7       : in std_logic := '0';
   CBI8       : in std_logic := '0';
   CBI9       : in std_logic := '0';
   CBI10      : in std_logic := '0';
   CBI11      : in std_logic := '0';
   CBI12      : in std_logic := '0';
   CBI13      : in std_logic := '0';
   CBI14      : in std_logic := '0';
   CBI15      : in std_logic := '0';
   CBI16      : in std_logic := '0';
   CBI17      : in std_logic := '0';
   CBI18      : in std_logic := '0';

   CBO1       : out std_logic := '0';
   CBO2       : out std_logic := '0';
   CBO3       : out std_logic := '0';
   CBO4       : out std_logic := '0';
   CBO5       : out std_logic := '0';
   CBO6       : out std_logic := '0';
   CBO7       : out std_logic := '0';
   CBO8       : out std_logic := '0';
   CBO9       : out std_logic := '0';
   CBO10      : out std_logic := '0';
   CBO11      : out std_logic := '0';
   CBO12      : out std_logic := '0';
   CBO13      : out std_logic := '0';
   CBO14      : out std_logic := '0';
   CBO15      : out std_logic := '0';
   CBO16      : out std_logic := '0';
   CBO17      : out std_logic := '0';
   CBO18      : out std_logic := '0';

   CCI        : in std_logic := '0';
   CCO        : out std_logic := '0';
   CI         : in std_logic := '0';
   CK         : in std_logic := '0';
   CO         : out std_logic := '0';
   CO37       : out std_logic := '0';
   CO49       : out std_logic := '0';

   CZI1       : in std_logic := '0';
   CZI2       : in std_logic := '0';
   CZI3       : in std_logic := '0';
   CZI4       : in std_logic := '0';
   CZI5       : in std_logic := '0';
   CZI6       : in std_logic := '0';
   CZI7       : in std_logic := '0';
   CZI8       : in std_logic := '0';
   CZI9       : in std_logic := '0';
   CZI10      : in std_logic := '0';
   CZI11      : in std_logic := '0';
   CZI12      : in std_logic := '0';
   CZI13      : in std_logic := '0';
   CZI14      : in std_logic := '0';
   CZI15      : in std_logic := '0';
   CZI16      : in std_logic := '0';
   CZI17      : in std_logic := '0';
   CZI18      : in std_logic := '0';
   CZI19      : in std_logic := '0';
   CZI20      : in std_logic := '0';
   CZI21      : in std_logic := '0';
   CZI22      : in std_logic := '0';
   CZI23      : in std_logic := '0';
   CZI24      : in std_logic := '0';
   CZI25      : in std_logic := '0';
   CZI26      : in std_logic := '0';
   CZI27      : in std_logic := '0';
   CZI28      : in std_logic := '0';
   CZI29      : in std_logic := '0';
   CZI30      : in std_logic := '0';
   CZI31      : in std_logic := '0';
   CZI32      : in std_logic := '0';
   CZI33      : in std_logic := '0';
   CZI34      : in std_logic := '0';
   CZI35      : in std_logic := '0';
   CZI36      : in std_logic := '0';
   CZI37      : in std_logic := '0';
   CZI38      : in std_logic := '0';
   CZI39      : in std_logic := '0';
   CZI40      : in std_logic := '0';
   CZI41      : in std_logic := '0';
   CZI42      : in std_logic := '0';
   CZI43      : in std_logic := '0';
   CZI44      : in std_logic := '0';
   CZI45      : in std_logic := '0';
   CZI46      : in std_logic := '0';
   CZI47      : in std_logic := '0';
   CZI48      : in std_logic := '0';
   CZI49      : in std_logic := '0';
   CZI50      : in std_logic := '0';
   CZI51      : in std_logic := '0';
   CZI52      : in std_logic := '0';
   CZI53      : in std_logic := '0';
   CZI54      : in std_logic := '0';
   CZI55      : in std_logic := '0';
   CZI56      : in std_logic := '0';

   CZO1       : out std_logic := '0';
   CZO2       : out std_logic := '0';
   CZO3       : out std_logic := '0';
   CZO4       : out std_logic := '0';
   CZO5       : out std_logic := '0';
   CZO6       : out std_logic := '0';
   CZO7       : out std_logic := '0';
   CZO8       : out std_logic := '0';
   CZO9       : out std_logic := '0';
   CZO10      : out std_logic := '0';
   CZO11      : out std_logic := '0';
   CZO12      : out std_logic := '0';
   CZO13      : out std_logic := '0';
   CZO14      : out std_logic := '0';
   CZO15      : out std_logic := '0';
   CZO16      : out std_logic := '0';
   CZO17      : out std_logic := '0';
   CZO18      : out std_logic := '0';
   CZO19      : out std_logic := '0';
   CZO20      : out std_logic := '0';
   CZO21      : out std_logic := '0';
   CZO22      : out std_logic := '0';
   CZO23      : out std_logic := '0';
   CZO24      : out std_logic := '0';
   CZO25      : out std_logic := '0';
   CZO26      : out std_logic := '0';
   CZO27      : out std_logic := '0';
   CZO28      : out std_logic := '0';
   CZO29      : out std_logic := '0';
   CZO30      : out std_logic := '0';
   CZO31      : out std_logic := '0';
   CZO32      : out std_logic := '0';
   CZO33      : out std_logic := '0';
   CZO34      : out std_logic := '0';
   CZO35      : out std_logic := '0';
   CZO36      : out std_logic := '0';
   CZO37      : out std_logic := '0';
   CZO38      : out std_logic := '0';
   CZO39      : out std_logic := '0';
   CZO40      : out std_logic := '0';
   CZO41      : out std_logic := '0';
   CZO42      : out std_logic := '0';
   CZO43      : out std_logic := '0';
   CZO44      : out std_logic := '0';
   CZO45      : out std_logic := '0';
   CZO46      : out std_logic := '0';
   CZO47      : out std_logic := '0';
   CZO48      : out std_logic := '0';
   CZO49      : out std_logic := '0';
   CZO50      : out std_logic := '0';
   CZO51      : out std_logic := '0';
   CZO52      : out std_logic := '0';
   CZO53      : out std_logic := '0';
   CZO54      : out std_logic := '0';
   CZO55      : out std_logic := '0';
   CZO56      : out std_logic := '0';

   D1         : in std_logic := '0';
   D2         : in std_logic := '0';
   D3         : in std_logic := '0';
   D4         : in std_logic := '0';
   D5         : in std_logic := '0';
   D6         : in std_logic := '0';
   D7         : in std_logic := '0';
   D8         : in std_logic := '0';
   D9         : in std_logic := '0';
   D10        : in std_logic := '0';
   D11        : in std_logic := '0';
   D12        : in std_logic := '0';
   D13        : in std_logic := '0';
   D14        : in std_logic := '0';
   D15        : in std_logic := '0';
   D16        : in std_logic := '0';
   D17        : in std_logic := '0';
   D18        : in std_logic := '0';

   OVF        : out std_logic := '0';
   R          : in std_logic := '0';
   RZ         : in std_logic := '0';
   WE         : in std_logic := '0';

   Z1         : out std_logic := '0';
   Z2         : out std_logic := '0';
   Z3         : out std_logic := '0';
   Z4         : out std_logic := '0';
   Z5         : out std_logic := '0';
   Z6         : out std_logic := '0';
   Z7         : out std_logic := '0';
   Z8         : out std_logic := '0';
   Z9         : out std_logic := '0';
   Z10        : out std_logic := '0';
   Z11        : out std_logic := '0';
   Z12        : out std_logic := '0';
   Z13        : out std_logic := '0';
   Z14        : out std_logic := '0';
   Z15        : out std_logic := '0';
   Z16        : out std_logic := '0';
   Z17        : out std_logic := '0';
   Z18        : out std_logic := '0';
   Z19        : out std_logic := '0';
   Z20        : out std_logic := '0';
   Z21        : out std_logic := '0';
   Z22        : out std_logic := '0';
   Z23        : out std_logic := '0';
   Z24        : out std_logic := '0';
   Z25        : out std_logic := '0';
   Z26        : out std_logic := '0';
   Z27        : out std_logic := '0';
   Z28        : out std_logic := '0';
   Z29        : out std_logic := '0';
   Z30        : out std_logic := '0';
   Z31        : out std_logic := '0';
   Z32        : out std_logic := '0';
   Z33        : out std_logic := '0';
   Z34        : out std_logic := '0';
   Z35        : out std_logic := '0';
   Z36        : out std_logic := '0';
   Z37        : out std_logic := '0';
   Z38        : out std_logic := '0';
   Z39        : out std_logic := '0';
   Z40        : out std_logic := '0';
   Z41        : out std_logic := '0';
   Z42        : out std_logic := '0';
   Z43        : out std_logic := '0';
   Z44        : out std_logic := '0';
   Z45        : out std_logic := '0';
   Z46        : out std_logic := '0';
   Z47        : out std_logic := '0';
   Z48        : out std_logic := '0';
   Z49        : out std_logic := '0';
   Z50        : out std_logic := '0';
   Z51        : out std_logic := '0';
   Z52        : out std_logic := '0';
   Z53        : out std_logic := '0';
   Z54        : out std_logic := '0';
   Z55        : out std_logic := '0';
   Z56        : out std_logic := '0'
   );
end component;

begin

----------------------------------------------------------
-- Instantiation the NX_DSP component
----------------------------------------------------------
DSP_INST : NX_DSP
generic map (
   std_mode    => "", -- standard mode [ADD36, SUB36, SMUL18, UMUL18, ...] empty for raw
   raw_config0 => raw_config0_gen, -- MODE and MUXes
   raw_config1 => raw_config1_gen, -- Pipeline Registers
   raw_config2 => raw_config2_gen, -- Reset Enable for internal registers
   raw_config3 => raw_config3_gen   -- ALU modes
   )
port map (
   A1         => A(0),
   A2         => A(1),
   A3         => A(2),
   A4         => A(3),
   A5         => A(4),
   A6         => A(5),
   A7         => A(6),
   A8         => A(7),
   A9         => A(8),
   A10        => A(9),
   A11        => A(10),
   A12        => A(11),
   A13        => A(12),
   A14        => A(13),
   A15        => A(14),
   A16        => A(15),
   A17        => A(16),
   A18        => A(17),
   A19        => A(18),
   A20        => A(19),
   A21        => A(20),
   A22        => A(21),
   A23        => A(22),
   A24        => A(23),

   B1         => B(0),
   B2         => B(1),
   B3         => B(2),
   B4         => B(3),
   B5         => B(4),
   B6         => B(5),
   B7         => B(6),
   B8         => B(7),
   B9         => B(8),
   B10        => B(9),
   B11        => B(10),
   B12        => B(11),
   B13        => B(12),
   B14        => B(13),
   B15        => B(14),
   B16        => B(15),
   B17        => B(16),
   B18        => B(17),

   C1         => C(0),
   C2         => C(1),
   C3         => C(2),
   C4         => C(3),
   C5         => C(4),
   C6         => C(5),
   C7         => C(6),
   C8         => C(7),
   C9         => C(8),
   C10        => C(9),
   C11        => C(10),
   C12        => C(11),
   C13        => C(12),
   C14        => C(13),
   C15        => C(14),
   C16        => C(15),
   C17        => C(16),
   C18        => C(17),
   C19        => C(18),
   C20        => C(19),
   C21        => C(20),
   C22        => C(21),
   C23        => C(22),
   C24        => C(23),
   C25        => C(24),
   C26        => C(25),
   C27        => C(26),
   C28        => C(27),
   C29        => C(28),
   C30        => C(29),
   C31        => C(30),
   C32        => C(31),
   C33        => C(32),
   C34        => C(33),
   C35        => C(34),
   C36        => C(35),

   CAI1       => CAI(0),
   CAI2       => CAI(1),
   CAI3       => CAI(2),
   CAI4       => CAI(3),
   CAI5       => CAI(4),
   CAI6       => CAI(5),
   CAI7       => CAI(6),
   CAI8       => CAI(7),
   CAI9       => CAI(8),
   CAI10      => CAI(9),
   CAI11      => CAI(10),
   CAI12      => CAI(11),
   CAI13      => CAI(12),
   CAI14      => CAI(13),
   CAI15      => CAI(14),
   CAI16      => CAI(15),
   CAI17      => CAI(16),
   CAI18      => CAI(17),

   CAO1       => CAO(0),
   CAO2       => CAO(1),
   CAO3       => CAO(2),
   CAO4       => CAO(3),
   CAO5       => CAO(4),
   CAO6       => CAO(5),
   CAO7       => CAO(6),
   CAO8       => CAO(7),
   CAO9       => CAO(8),
   CAO10      => CAO(9),
   CAO11      => CAO(10),
   CAO12      => CAO(11),
   CAO13      => CAO(12),
   CAO14      => CAO(13),
   CAO15      => CAO(14),
   CAO16      => CAO(15),
   CAO17      => CAO(16),
   CAO18      => CAO(17),

   CBI1       => CBI(0),
   CBI2       => CBI(1),
   CBI3       => CBI(2),
   CBI4       => CBI(3),
   CBI5       => CBI(4),
   CBI6       => CBI(5),
   CBI7       => CBI(6),
   CBI8       => CBI(7),
   CBI9       => CBI(8),
   CBI10      => CBI(9),
   CBI11      => CBI(10),
   CBI12      => CBI(11),
   CBI13      => CBI(12),
   CBI14      => CBI(13),
   CBI15      => CBI(14),
   CBI16      => CBI(15),
   CBI17      => CBI(16),
   CBI18      => CBI(17),

   CBO1       => CBO(0),
   CBO2       => CBO(1),
   CBO3       => CBO(2),
   CBO4       => CBO(3),
   CBO5       => CBO(4),
   CBO6       => CBO(5),
   CBO7       => CBO(6),
   CBO8       => CBO(7),
   CBO9       => CBO(8),
   CBO10      => CBO(9),
   CBO11      => CBO(10),
   CBO12      => CBO(11),
   CBO13      => CBO(12),
   CBO14      => CBO(13),
   CBO15      => CBO(14),
   CBO16      => CBO(15),
   CBO17      => CBO(16),
   CBO18      => CBO(17),

   CCI        => CCI,
   CCO        => CCO,
   CI         => CI,
   CK         => CK,
   CO         => CO,
   CO37       => CO36,
   CO49       => CO48,

   CZI1       => CZI(0),
   CZI2       => CZI(1),
   CZI3       => CZI(2),
   CZI4       => CZI(3),
   CZI5       => CZI(4),
   CZI6       => CZI(5),
   CZI7       => CZI(6),
   CZI8       => CZI(7),
   CZI9       => CZI(8),
   CZI10      => CZI(9),
   CZI11      => CZI(10),
   CZI12      => CZI(11),
   CZI13      => CZI(12),
   CZI14      => CZI(13),
   CZI15      => CZI(14),
   CZI16      => CZI(15),
   CZI17      => CZI(16),
   CZI18      => CZI(17),
   CZI19      => CZI(18),
   CZI20      => CZI(19),
   CZI21      => CZI(20),
   CZI22      => CZI(21),
   CZI23      => CZI(22),
   CZI24      => CZI(23),
   CZI25      => CZI(24),
   CZI26      => CZI(25),
   CZI27      => CZI(26),
   CZI28      => CZI(27),
   CZI29      => CZI(28),
   CZI30      => CZI(29),
   CZI31      => CZI(30),
   CZI32      => CZI(31),
   CZI33      => CZI(32),
   CZI34      => CZI(33),
   CZI35      => CZI(34),
   CZI36      => CZI(35),
   CZI37      => CZI(36),
   CZI38      => CZI(37),
   CZI39      => CZI(38),
   CZI40      => CZI(39),
   CZI41      => CZI(40),
   CZI42      => CZI(41),
   CZI43      => CZI(42),
   CZI44      => CZI(43),
   CZI45      => CZI(44),
   CZI46      => CZI(45),
   CZI47      => CZI(46),
   CZI48      => CZI(47),
   CZI49      => CZI(48),
   CZI50      => CZI(49),
   CZI51      => CZI(50),
   CZI52      => CZI(51),
   CZI53      => CZI(52),
   CZI54      => CZI(53),
   CZI55      => CZI(54),
   CZI56      => CZI(55),

   CZO1       => CZO(0),
   CZO2       => CZO(1),
   CZO3       => CZO(2),
   CZO4       => CZO(3),
   CZO5       => CZO(4),
   CZO6       => CZO(5),
   CZO7       => CZO(6),
   CZO8       => CZO(7),
   CZO9       => CZO(8),
   CZO10      => CZO(9),
   CZO11      => CZO(10),
   CZO12      => CZO(11),
   CZO13      => CZO(12),
   CZO14      => CZO(13),
   CZO15      => CZO(14),
   CZO16      => CZO(15),
   CZO17      => CZO(16),
   CZO18      => CZO(17),
   CZO19      => CZO(18),
   CZO20      => CZO(19),
   CZO21      => CZO(20),
   CZO22      => CZO(21),
   CZO23      => CZO(22),
   CZO24      => CZO(23),
   CZO25      => CZO(24),
   CZO26      => CZO(25),
   CZO27      => CZO(26),
   CZO28      => CZO(27),
   CZO29      => CZO(28),
   CZO30      => CZO(29),
   CZO31      => CZO(30),
   CZO32      => CZO(31),
   CZO33      => CZO(32),
   CZO34      => CZO(33),
   CZO35      => CZO(34),
   CZO36      => CZO(35),
   CZO37      => CZO(36),
   CZO38      => CZO(37),
   CZO39      => CZO(38),
   CZO40      => CZO(39),
   CZO41      => CZO(40),
   CZO42      => CZO(41),
   CZO43      => CZO(42),
   CZO44      => CZO(43),
   CZO45      => CZO(44),
   CZO46      => CZO(45),
   CZO47      => CZO(46),
   CZO48      => CZO(47),
   CZO49      => CZO(48),
   CZO50      => CZO(49),
   CZO51      => CZO(50),
   CZO52      => CZO(51),
   CZO53      => CZO(52),
   CZO54      => CZO(53),
   CZO55      => CZO(54),
   CZO56      => CZO(55),

   D1         => D(0),
   D2         => D(1),
   D3         => D(2),
   D4         => D(3),
   D5         => D(4),
   D6         => D(5),
   D7         => D(6),
   D8         => D(7),
   D9         => D(8),
   D10        => D(9),
   D11        => D(10),
   D12        => D(11),
   D13        => D(12),
   D14        => D(13),
   D15        => D(14),
   D16        => D(15),
   D17        => D(16),
   D18        => D(17),

   OVF        => OVF,
   R          => R,
   RZ         => RZ,
   WE         => WE,

   Z1         => Z(0),
   Z2         => Z(1),
   Z3         => Z(2),
   Z4         => Z(3),
   Z5         => Z(4),
   Z6         => Z(5),
   Z7         => Z(6),
   Z8         => Z(7),
   Z9         => Z(8),
   Z10        => Z(9),
   Z11        => Z(10),
   Z12        => Z(11),
   Z13        => Z(12),
   Z14        => Z(13),
   Z15        => Z(14),
   Z16        => Z(15),
   Z17        => Z(16),
   Z18        => Z(17),
   Z19        => Z(18),
   Z20        => Z(19),
   Z21        => Z(20),
   Z22        => Z(21),
   Z23        => Z(22),
   Z24        => Z(23),
   Z25        => Z(24),
   Z26        => Z(25),
   Z27        => Z(26),
   Z28        => Z(27),
   Z29        => Z(28),
   Z30        => Z(29),
   Z31        => Z(30),
   Z32        => Z(31),
   Z33        => Z(32),
   Z34        => Z(33),
   Z35        => Z(34),
   Z36        => Z(35),
   Z37        => Z(36),
   Z38        => Z(37),
   Z39        => Z(38),
   Z40        => Z(39),
   Z41        => Z(40),
   Z42        => Z(41),
   Z43        => Z(42),
   Z44        => Z(43),
   Z45        => Z(44),
   Z46        => Z(45),
   Z47        => Z(46),
   Z48        => Z(47),
   Z49        => Z(48),
   Z50        => Z(49),
   Z51        => Z(50),
   Z52        => Z(51),
   Z53        => Z(52),
   Z54        => Z(53),
   Z55        => Z(54),
   Z56        => Z(55)
   );

end NX_RTL;
-- #}}}#

----------------------------------------------------------------------------------------------------

`protect begin_protected
`protect version = 1
`protect encrypt_agent = "NanoXplore"
`protect key_keyowner = "Mentor Graphics Corporation", key_keyname = "MGC-VERIF-SIM-RSA-2", key_method = "rsa"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 256)
`protect key_block
Mw255nHZYunTeT2uHCY+PhaZD71tzvAc4n/Qwjmzwq+FiXg3swEpnBCZ+sYrNPjg
+PDlsoY/Cx9KXS0baNBrzbHOshDOGu4KDzFX4DkasNCqBDiosAvHsbV5qDlpPi1B
Jo65C1rfBvFP51FflTApTlKKWhyu2Oa71xCTAbsARwFU/wJOalt2pP3W7x7+BhA1
JG2FRB9bQEtCxR3ASbQ19hPT87WBMjZu8TGO/ldBQ+3+TBw2coT9chHuSbdf/KxA
8753ovzQfP4XsNdSJojRculwXRW/TGIc8CFI+i7cFLR7e1Ls507FkFDWbarIm/e1
ZFWKpwDmVrcN/S0a64/aIw==
`protect data_method = "aes256-cbc"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 40256)
`protect data_block
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
`protect end_protected

-- =================================================================================================
--   NX_PLL definition                                                                  2017/09/19
-- =================================================================================================

library IEEE;
use IEEE.STD_LOGIC_1164.all;
use IEEE.STD_LOGIC_arith.ALL;
use IEEE.STD_LOGIC_unsigned.ALL;

entity NX_PLL is
generic (
    location     : string := "";

    vco_range    : integer   range 0 to 2 := 0;   -- 0 to 3
    ref_div_on   : bit := '0';                    -- bypass :: %2
    fbk_div_on   : bit := '0';                    -- bypass :: %2
    ext_fbk_on   : bit := '0';                    -- 0: disabled - 1: enabled

    fbk_intdiv   : integer   range 1 to 31 := 2;  -- 0 to 31  (%1 to %32)

    fbk_delay_on : bit := '0';                    -- 0: no delay - 1: delay
    fbk_delay    : integer   range 0 to 63 := 0;  -- 0 to 63

    clk_outdiv1  : integer   range 0 to 7 := 0;   -- 0 to 7   (%1 to %2^7)
    clk_outdiv2  : integer   range 0 to 7 := 0;   -- 0 to 7   (%1 to %2^7)
    clk_outdiv3  : integer   range 0 to 7 := 0    -- 0 to 7   (%1 to %2^7)
);
port (
    REF : in  std_logic;
    FBK : in  std_logic;

    VCO : out std_logic;

    D1  : out std_logic;
    D2  : out std_logic;
    D3  : out std_logic;
    OSC : out std_logic;

    RDY : out std_logic
);
end NX_PLL;

architecture NX_RTL of NX_PLL is
    attribute NX_TYPE :string;
    attribute NX_TYPE of NX_RTL: architecture is "PHY";

    attribute NX_USE :string;
    attribute NX_USE of NX_RTL: architecture is "NX_PLL";
begin
end NX_RTL;

----------------------------------------------------------------------------------------------------

library IEEE;
use IEEE.STD_LOGIC_1164.all;
use IEEE.STD_LOGIC_arith.ALL;
use IEEE.STD_LOGIC_unsigned.ALL;

entity NX_WFG is
generic (
    location    : string := "";

    wfg_edge    : bit := '0';                              -- 0: no invert / Rising
    mode        : bit := '0';                              -- 0: no pattern - 1: pattern

    pattern_end : integer   range 0 to 15 := 1;            -- 0: to 15 (1 step to 16 steps)
    pattern     : bit_vector(0 to 15) := (others => '0');  -- pattern p0 ... p15

    delay_on    : bit := '0';                              -- 0: no delay - 1: delay
    delay       : integer   range 0 to 63 := 0             -- 0 to 63 (1 unit to 64 unit)
);
port (
    SI  : in  std_logic;
    ZI  : in  std_logic;
    RDY : in  std_logic := '1';
    SO  : out std_logic;
    ZO  : out std_logic
);
end NX_WFG;

architecture NX_RTL of NX_WFG is
    attribute NX_TYPE :string;
    attribute NX_TYPE of NX_RTL: architecture is "PHY";

    attribute NX_USE :string;
    attribute NX_USE of NX_RTL: architecture is "NX_WFG";
begin
end NX_RTL;

----------------------------------------------------------------------------------------------------

`protect begin_protected
`protect version = 1
`protect encrypt_agent = "NanoXplore"
`protect key_keyowner = "Mentor Graphics Corporation", key_keyname = "MGC-VERIF-SIM-RSA-2", key_method = "rsa"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 256)
`protect key_block
YB/q8mHySotPY7stHlac9AjD5H+dehtuwNtFDoqEYi7gJqdmZFqi8+pXwD62Gz+5
7hoh/NKwjfHmHxYVnrZS6rpgwt7OXBylLSPMCkqcc6l4b/v7oSsH+yJSy2NwlZbV
FblVS2zz+Vxx7tJvocM5ujJv2VP00TqFyZA/G0LdRdDZPDYbvESxGodiVPZEF+Wn
QdA4noLKUxx53RxvQfvG0s+1EIx7M0kiFxw9Zsz0kiaNUroXEx5e4azdQmMokVow
EzqhRfrfJ020h88vkLfqszUYQjQ+k/tJcYYqwwopoPnPc5cn3ZJZda7mfaCPM1UC
ySgH+BMqnCnCO9QeGDiINQ==
`protect data_method = "aes256-cbc"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 15632)
`protect data_block
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
`protect end_protected

-- beware following components are only intended for internal use. Do not try to instantiate them.

-- =================================================================================================
--   NX_BUFFER definition                                                               2017/09/11
-- =================================================================================================

-- NX_BUFFER#{{{#
----------------------------------------------------------------------------------------------------
library ieee;
use ieee.std_logic_1164.all;

entity NX_BUFFER is
port (
    I : in  std_logic;
    O : out std_logic
);
end NX_BUFFER;

`protect begin_protected
`protect version = 1
`protect encrypt_agent = "NanoXplore"
`protect key_keyowner = "Mentor Graphics Corporation", key_keyname = "MGC-VERIF-SIM-RSA-2", key_method = "rsa"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 256)
`protect key_block
qwWwTaGOaeLeePfvzdbB1jve4dcbYk9pvNpNYA83SK85hgBsQ46ZTszL7DrSOcYN
Otrv6fh7v1TKl+bb/AJfk9cQ7TrcBz/+MEk/ZC8rdn7mAKnn+rRHGJjQneVHelGR
3QbIiptwpIoza/G68khKxvmqznywXmpFWpZaPVwa/Ts3hhzTGZOZdreqgNZHzaOy
OGjiDyvE0ClPRK4xI6/tQ5+KgC+FAjUR6EdgUJMNXAXB0l27cx49lPOZj+EOa0OW
ev88eVuMeuMysi2aXAhCVnx/JOI6BCoPKMY6FnQeal9B0Y7XM7nAbqQHUQ0fZN0T
dDUYLaI/SQfws4KqNdbrFA==
`protect data_method = "aes256-cbc"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 240)
`protect data_block
m5BeBzGcqciflbfJC0O+T5uIRdsXhoXosXDfSc0RMncXYEZEW8ksWid4X5TEw1A8
a8guSKtn75ysevqkOgc7C5Zrf/rOJkSR9wrDQOaJu0emLLDJ1DlUiMfIvqSPpIDc
sP/TPfv1CVVbzxqY+ebfkBinlf3TihlC2PqeNLzYkF2alsX09z7cBP24xQyYbHYJ
ZSA+GMoIMm25k9zHOQxoaoTXEjVUMeJTNwcsoPGGOyoR/DV6mlceL0mYIg8FrueK
JXXKg6QH7Fiyu/SMDQnlWOrbbJpSU4yqqdWQ964S0V6chbIbcuQNt2adRZ/iqbLp
`protect end_protected

-- #}}}#

-- =================================================================================================
--   NX_CSC definition                                                                  2017/09/26
-- =================================================================================================

-- NX_CSC#{{{#
----------------------------------------------------------------------------------------------------
library ieee;
use ieee.std_logic_1164.all;

entity NX_CSC is
port (
    I  : in  std_logic;
    O  : out std_logic
);
end NX_CSC;

`protect begin_protected
`protect version = 1
`protect encrypt_agent = "NanoXplore"
`protect key_keyowner = "Mentor Graphics Corporation", key_keyname = "MGC-VERIF-SIM-RSA-2", key_method = "rsa"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 256)
`protect key_block
BGQztKEc4Ft5mwI+ZxTBzaKdABmg6Teb8upIPiJihsfKxnn/tOBXRAEMRIi15NnC
vrDfz2RRfS8ZVHjZyxhuqe8twTIVRAElqpYjpi3fY+wFq2UFFjeSFFAzkAQGeKcp
tKBofXPd9p/xyPabxTawM0WZi/CqDxM7/80RxBYQHDz7YSznqEnOLHs6ylzoo0Vb
t0E9bTL0KTi8VKWER8C5C8Aw+IzbVVyRmiFOBP32kqTPbO2vLNM8JcQEq5f0b8Pk
OAge8ljZXEGb4DD+9BIxzucFM3hAfy8xWvdY6o81CL2nPCcugu77flMZTVfR2F9c
V8EXlfBu2HL0+drJq/VLtA==
`protect data_method = "aes256-cbc"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 240)
`protect data_block
nepToV/k4fFRcdqPRsAt7S63SAn3wL6WbgawfZfRizxfuvHWPeB6zO7kunOpSDfr
jVkDjaB6evbU5MreMFD385Ti93lQRW8bJ/d6zrQVbOR1xcMrTfWo7NqzwuEJdWJ7
FG8B9zqBXMXgjR+3I4sRueeYDQx9Pj36AC+xmb9WnDSeV1z/jdY/eJfG6FxxXR3v
u1DV9d3/uCPQtI1TtsfPXtZ63ULe7lONq3H/I0EL2tDVl6rJOdb+zgbRNl7wS+CY
FbKrWqd4xUCfc7/sOCKz8wvJwF9CPM3bRPZ7+f2X0izjAP+tdE8r4DA/TyCllZFi
`protect end_protected

-- #}}}#

-- =================================================================================================
--   NX_SCC definition                                                                  2017/09/26
-- =================================================================================================

-- NX_SCC#{{{#
----------------------------------------------------------------------------------------------------
library ieee;
use ieee.std_logic_1164.all;

entity NX_SCC is
port (
    I : in  std_logic;
    O : out std_logic
);
end NX_SCC;

`protect begin_protected
`protect version = 1
`protect encrypt_agent = "NanoXplore"
`protect key_keyowner = "Mentor Graphics Corporation", key_keyname = "MGC-VERIF-SIM-RSA-2", key_method = "rsa"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 256)
`protect key_block
N3oRhBptj087nQ/eFfI0eTQ2Na15ZjKBgWAylGEQ7q+h//YHWvD2Hk9L0UJR9Cag
WmvdzJIZqIKt8GBKA4Y0QBXtx8LVda300icdvsE2XUWHEPCy9HQitSJ5nResCg+v
I/9WOjkOxP7YxPRX8TWoCUP+l+8/Yxqu09X694ml2b10oFlWgVLhu0Sa2DK8vkx4
syynhAd3UkkHFMWnKzym/yix+VDLdVCIN61UyCWAVs68syeyG6ARza3jNV2CulxN
GFbcS9B5fI/NX4yJ09LMLVcV4SFhe/PzyFan0UuSrXDl6qGqTZWun800+3N2z/PM
WAMIUNjSnXJA7hnDxPUKIQ==
`protect data_method = "aes256-cbc"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 240)
`protect data_block
yU+Kcr4oWpaaqhP/RVs5rbrUpjJoY8/i215BcMCoM/hPd8cDG/038gRelOALjaDv
GTK3WITZJ1XYJ6dnszi2qPdfIxWiXIwi6jk0hMQGFl89BjNkVDGSyzNoxrcl/o+m
Mv61PeCtvO6ZN0IwW2GGR3jCeX7OzXQX2nKTiMYDDuw4BXDaG9eNqUSvkzPe1Tkc
MUvour+z546qwxBlV6WLyJaFWmoscxGIM2ig2Sb490x3MlgZnNhX8qA8h/+yQAUg
FMPpUzbsHe3nLE3OiPKd1AKr/BqjM8JmDHlKR90PaSan9+j+8Cp2NMZDqTeyQTJb
`protect end_protected

-- #}}}#

-- =================================================================================================
--   NX_syn_tp definition                                                               2017/09/11
-- =================================================================================================

-- NX_syn_tp#{{{#
----------------------------------------------------------------------------------------------------
library ieee;
use ieee.std_logic_1164.all;

entity NX_syn_tp is
port (
    I : in  std_logic
);
end NX_syn_tp;

architecture NX_RTL of NX_syn_tp is
    attribute NX_TYPE :string;
    attribute NX_TYPE of NX_RTL: architecture is "PHY";

    attribute NX_USE :string;
    attribute NX_USE of NX_RTL: architecture is "NX_syn_tp";
begin
end NX_RTL;

`protect begin_protected
`protect version = 1
`protect encrypt_agent = "NanoXplore"
`protect key_keyowner = "Mentor Graphics Corporation", key_keyname = "MGC-VERIF-SIM-RSA-2", key_method = "rsa"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 256)
`protect key_block
QgeGLS3LSMPDAoeUL00pDUUmVtfxa5v1FNHQNJTMORDBxtczWRo0G7yPYgTxiSfL
0FcPcM2nva8HrINDMpHvMm/F0UN9fOe+IQ3E8NINmYPi7y9k59A3p+GYKclL5t0+
lJhK66T8VcSIIx4/DuPtDwUG8qD8bxQMxCZcVDef+Q+dQ9pCpyfn7kNf3urgfNi+
dyVZiBjyT62tHHwTmLFlM/NXihgP5w9UZhVGEW+c6Etaz1Y/yspUYbwcz7C2FbBr
xBCBJsTBPuFaaI+sE6w+i0Px+Jzkx4yNMtWx2EV43iqEduMIL21EQZsg0vmc6s/J
h7fG/VIsnagcrlXXL8cHWA==
`protect data_method = "aes256-cbc"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 208)
`protect data_block
NvTWV7AiP2sRsXVG9PbcXJN4kalFOhZqmMICS2gNuJzvDCO1Nvy4bOznjdni59AL
NQex5pdsi3GBLNgV8XZ9YdPwJD72vz+xCy/spa6dMmS+zmE7wQLStgudo3JYbplu
4jgPYxuOHinyEB+gQcFPGE47Ifmdlo8bBR0dGxZV8uw+0PExqY7P0dgGsSaHhA22
xzf9ibDlRVxp1C9hz0s0rRizGF0x8+xzJkpK32wdfEdRyI9IwO8vZDmMSfatlyK3
wXlFU6+SB77az/73ieqG5g==
`protect end_protected

-- #}}}#

-- =================================================================================================
--   NX_BD definition                                                                   2018/06/19
-- =================================================================================================

library ieee;
use ieee.std_logic_1164.all;

entity NX_BD is
generic (
    system: bit := '1'
);
port (
    I : in  std_logic;
    O : out std_logic
);
end NX_BD;

architecture NX_RTL of NX_BD is
    attribute NX_TYPE :string;
    attribute NX_TYPE of NX_RTL: architecture is "PHY";

    attribute NX_USE :string;
    attribute NX_USE of NX_RTL: architecture is "NX_BD";
begin
end NX_RTL;

----------------------------------------------------------------------------------------------------

`protect begin_protected
`protect version = 1
`protect encrypt_agent = "NanoXplore"
`protect key_keyowner = "Mentor Graphics Corporation", key_keyname = "MGC-VERIF-SIM-RSA-2", key_method = "rsa"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 256)
`protect key_block
hxW3U/GLBkq2keEJ/NSInjJ6xdyiUgcvj8x2W5dh+WPmVO6bUbUnqyBzZGF7YvhR
ex7BKzNVeRFSgaZPj0QtfSqzd0KofIUqR2glPnU3zEa7MHx1zRBgFOB79DBybTnu
LVUxZKG5P1hufSDRal9cJgia416XZAJl617f0ElxgAFalfgRbCEXRtf4s9dgff4y
hsbiKdVpN8uzm0iXWD+lzUB7JjbSOVvCYmbLiZjPX9AjW1sZ0597MZxskOBmwaKF
Z3yOXVouVnYxiyFtOgoz66pOgGb9jAgFVYKCga/nrn8IiJo2LpZPJmKF9hkWLLxY
FfXFbh8VVgvy+lEN23uJyw==
`protect data_method = "aes256-cbc"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 240)
`protect data_block
WOZ4XprMvjDM6WxDqGux6qtMzUxt4NsKrZv4+taWJDeEGRgHbKPWp8eo49vdcm7Z
uAiVlsPvKdeaGgRx9/KYXOZbkHDDNvsOPWya09tbolKj81CVdeXXuTvU1vqCLFJi
30DGPOsklTWKOvtGE4oX9q+WBIleD6WH+7S3enwjhWnnGyMAqxv5ttnUsOTCGgdl
z8bLpgdJzInL2zRqedyTiOX+UAS0SCNM2A2jzTBTmwDXdWjL/tmOwQeU2LXiyMid
MK7YQTj3qBRkgCkMsPutqeHl/8JTyHmFeRrxMVoJWxOeVq2HGCp+ZYhMlZXDm8H1
`protect end_protected

-- =================================================================================================
--   NX_SER definition                                                                  2018/10/15
-- =================================================================================================

library ieee;
use ieee.std_logic_1164.all;

library NX;
use NX.nxPackage.all;

entity NX_SER is
generic (
    data_size            : integer range 2 to 10 := 5;	-- Number of serialization factor
    location             : string := "";		-- Pad location
    standard             : string := "";		-- Pad electrical standard
    drive                : string := "";		-- Pad electrical drive
    differential         : string := "";		-- Single ended ("0") or differential ("1")
    slewRate             : string := "";		-- Slow, Medium or Fast
    outputDelayLine      : string := "";		-- "0_to_63_delay_value"
    outputCapacity       : string := "";		-- 0 to 40 (value in pF)
    -- Delay Control
    spath_dynamic        : bit := '0'			-- 0: off/fixed delay, 1: dynamic delay

);
port (
    FCK   : in  std_logic;
    SCK   : in  std_logic;
    R     : in  std_logic;
    I     : in  std_logic_vector(data_size - 1 downto 0);
    IO    : out std_logic;
    -- Delay Control
    DCK   : in std_logic;
    DRL   : in std_logic;
    DS    : in std_logic_vector(1 downto 0);
    DRA   : in std_logic_vector(5 downto 0);
    DRI   : in std_logic_vector(5 downto 0);
    DRO   : out std_logic_vector(5 downto 0);
    DID   : out std_logic_vector(5 downto 0)
);
end NX_SER;

-- =================================================================================================
--   NX_DES definition                                                                  2018/10/15
-- =================================================================================================

library ieee;
use ieee.std_logic_1164.all;

library NX;
use NX.nxPackage.all;

entity NX_DES is
generic (
    data_size            : integer range 2 to 10 := 5;	-- -- Pad locationNumber of deserialization factor
    location             : string := "";		-- Pad location
    standard             : string := "";		-- Pad electrical standard
    drive                : string := "";		-- Pad electrical drive
    differential         : string := "";		-- Single ended ("0") or differential ("1")
    termination          : string := "";		-- Input impedance adaptatio    terminationReference : string := "";
    terminationReference : string := "";		-- "floating" or "VTT"
    turbo                : string := "";		-- Input impedance adaptation
    weakTermination      : string := "";		-- "floating" or "VTT"
    inputDelayLine       : string := "";		-- "0_to_63_delay_value"
    inputSignalSlope     : string := "";		-- Decimal value "0.5" to "20" (value in V/ns)
    -- Delay Control
    dpath_dynamic        : bit := '0'			-- 0: off/fixed delay, 1: dynamic delay

);
port (
    FCK   : in  std_logic;
    SCK   : in  std_logic;
    R     : in  std_logic;
    IO    : in  std_logic;
    O     : out std_logic_vector(data_size - 1 downto 0);
    -- Delay Control
    DCK   : in std_logic;
    DRL   : in std_logic;
    DIG   : in std_logic;
    DS    : in std_logic_vector(1 downto 0);
    DRA   : in std_logic_vector(5 downto 0);
    DRI   : in std_logic_vector(5 downto 0);
    FZ    : in std_logic;
    DRO   : out std_logic_vector(5 downto 0);
    DID   : out std_logic_vector(5 downto 0);
    FLD   : out std_logic;
    FLG   : out std_logic
);
end NX_DES;

-- =================================================================================================
--   NX_SERDES definition                                                               2018/10/16
-- =================================================================================================

library ieee;
use ieee.std_logic_1164.all;

library NX;
use NX.nxPackage.all;

entity NX_SERDES is
generic (
    data_size            : integer range 2 to 10 := 5;	-- Serialiser/deserializer factor 
    location             : string := "";		-- Pad location
    standard             : string := "";		-- Pad electrical standard
    drive                : string := "";		-- Pad electrical drive
    differential         : string := "";		-- Single ended ("0" or differential ("1")
    slewRate             : string := "";		-- Slow, Medium or Fast
    termination          : string := "";		-- Input impedance adaptation
    terminationReference : string := "";		-- "floating" or "VTT"
    turbo                : string := "";		-- "true" or "false"
    weakTermination      : string := "";		-- "PullUp" or "None"
    inputDelayLine       : string := "";		-- "O_to_63_delay_value"
    outputDelayLine      : string := "";		-- "O_to_63_delay_value"
    inputSignalSlope     : string := "";		-- Decimal value "0.5" to "20" (value in V/ns)
    outputCapacity       : string := "";		-- "0" to "40" (value in pF)
    cpath_registered     : bit := '0';			-- Use Register in Enable Path ('1')
    -- Delay Control
    spath_dynamic        : bit := '0';			-- 0: off/fixed delay, 1: dynamic delay
    dpath_dynamic        : bit := '0'			-- 0: off/fixed delay, 1: dynamic delay
);
port (
    FCK   : in    std_logic;
    SCK   : in    std_logic;
    RTX   : in    std_logic;
    RRX   : in    std_logic;
    CI    : in    std_logic;
    CCK   : in    std_logic;
    CL    : in    std_logic;
    CR    : in    std_logic;
    I     : in    std_logic_vector(data_size - 1 downto 0);
    IO    : inout std_logic;
    O     : out   std_logic_vector(data_size - 1 downto 0);
    -- Delay Control
    DCK   : in std_logic;
    DRL   : in std_logic;
    DIG   : in std_logic;
    DS    : in std_logic_vector(1 downto 0);
    DRA   : in std_logic_vector(5 downto 0);
    DRI   : in std_logic_vector(5 downto 0);
    FZ    : in std_logic;
    DRO   : out std_logic_vector(5 downto 0);
    DID   : out std_logic_vector(5 downto 0);
    FLD   : out std_logic;
    FLG   : out std_logic
);
end NX_SERDES;

-- NX_SER#{{{#
----------------------------------------------------------------------------------------------------
architecture NX_RTL of NX_SER is

signal I_pad : std_logic;
signal O_pad : std_logic;
signal C_pad : std_logic;
signal sync  : std_logic;
signal I_int : std_logic_vector(9 downto 0);
signal LINKN : std_logic_vector(IOM_LINK_SIZE - 1 downto 0);
signal LINKP : std_logic_vector(IOM_LINK_SIZE - 1 downto 0);

attribute syn_noprune : boolean;

begin

I_net: for j in 0 to (data_size - 1) generate
    I_int(j) <= I(j);
end generate;

I_dummy: for j in data_size to 9 generate
    I_int(j) <= '0';
end generate;

single_ser: if (data_size <= 5) generate
attribute syn_noprune of iodx : label is true;
begin

    iobx: NX_IOB_O generic map (
	  location             => location
	, standard             => standard
	, drive                => drive
	, differential         => differential
	, slewRate             => slewRate
	, outputDelayLine      => outputDelayLine
	, outputCapacity       => outputCapacity
	, locked               => '1'
    )
		   port map (I => I_pad, C => C_pad, IO => IO);

    iodx: NX_IOM_DRIVER generic map (
		   epath_mode      => b"0100"
		 , cpath_mode      => b"0001"
		 , location        => location
		 , symbol          => "SER"
		 )
		 port map (
			   EI1  => I_int(0)
			 , EI2  => I_int(1)
			 , EI3  => I_int(2)
			 , EI4  => I_int(3)
			 , EI5  => I_int(4)
			 , RI   => OPEN
			 , EO   => I_pad
			 , CO   => C_pad
			 , LINK => LINKP
		);
end generate;

large_ser: if (5 < data_size) generate
attribute syn_noprune of iodp : label is true;
attribute syn_noprune of iodn : label is true;
begin


    iobp: NX_IOB_O generic map (
	  location             => location
	, standard             => standard
	, drive                => drive
	, differential         => differential
	, slewRate             => slewRate
	, outputDelayLine      => outputDelayLine
	, outputCapacity       => outputCapacity
	, locked               => '1'
    )
		   port map (I => I_pad, C => C_pad, IO => IO);

    iodp: NX_IOM_DRIVER generic map (
		   epath_init      => '1'
		 , epath_mode      => b"0100"
		 , cpath_mode      => b"0001"
		 , location        => location
		 , symbol          => "SER"
		 )
		 port map (
			    EI1  => I_int(0)
			  , EI2  => I_int(1)
			  , EI3  => I_int(2)
			  , EI4  => I_int(3)
			  , EI5  => I_int(4)
			  , RI   => OPEN
			  , EO   => I_pad
			  , CO   => C_pad
			  , LINK => LINKP
		);

    iodn: NX_IOM_DRIVER generic map (
		   epath_init      => '1'
		 , epath_mode      => b"0100"
		 , cpath_mode      => b"0001"
		 , chained         => '1'
		 , symbol          => "SER_C"
		 )
		 port map (
			    EI1  => I_int(5)
			  , EI2  => I_int(6)
			  , EI3  => I_int(7)
			  , EI4  => I_int(8)
			  , EI5  => I_int(9)
			  , RI   => OPEN
			  , EO   => OPEN
			  , CO   => OPEN
			  , LINK => LINKN
		);
end generate;

ioc: NX_IOM_SERDES generic map (data_size => data_size, location => location)
		   port map (
			      RTCK  => FCK	    -- ECK
			    , WTCK  => SCK
			    , TRST  => R	    -- ER
			    , LINKN => LINKN
			    , LINKP => LINKP
			    , DCK   => DCK
			    , DRL   => DRL
			    , DS    => DS
			    , DRA   => DRA
			    , DRI   => DRI
			    , DRO   => DRO
			    , DID   => DID
		   );

end NX_RTL;
-- #}}}#

-- NX_DES#{{{#
----------------------------------------------------------------------------------------------------
architecture NX_RTL of NX_DES is

signal I_pad : std_logic;
signal O_pad : std_logic;
signal C_pad : std_logic;
signal sync  : std_logic;
signal O_int : std_logic_vector(9 downto 0);
signal LINKN : std_logic_vector(IOM_LINK_SIZE - 1 downto 0);
signal LINKP : std_logic_vector(IOM_LINK_SIZE - 1 downto 0);

type     switch_dynamic is array (boolean) of bit;
constant switch_dpath : switch_dynamic := (true => '1', false => '0');
-- TODO constant dpath_dynamic : bit := switch_dpath(inputDelayLine = "");

begin

O_net: for j in 0 to (data_size - 1) generate
    O(j) <= O_int(j);
end generate;

single_des: if (data_size <= 5) generate
    iobx: NX_IOB_I generic map (
	  location             => location
	, standard             => standard
	, drive                => drive
	, differential         => differential
	, termination          => termination
	, terminationReference => terminationReference
	, turbo                => turbo
	, weakTermination      => weakTermination
	, inputDelayLine       => inputDelayLine
	, inputSignalSlope     => inputSignalSlope
	, locked               => '1'
    )
		   port map (I => I_pad, O => O_pad, C => C_pad, IO => IO);

    iodx: NX_IOM_DRIVER generic map (
		   rpath_init      => '1'
		 , rpath_mode      => b"0100"
		 , rpath_dynamic   => dpath_dynamic
		 , cpath_mode      => b"0000"
		 , location        => location
		 , symbol          => "DES_D"
		 )
		 port map (
			    RO1  => O_int(4)
			  , RO2  => O_int(3)
			  , RO3  => O_int(2)
			  , RO4  => O_int(1)
			  , RO5  => O_int(0)
			  , RI   => O_pad
			  , EO   => I_pad
			  , CO   => C_pad
			  , LINK => LINKP
		);
end generate;

large_des: if (5 < data_size) generate
    iobp: NX_IOB_I generic map (
	  location             => location
	, standard             => standard
	, drive                => drive
	, differential         => differential
	, termination          => termination
	, terminationReference => terminationReference
	, turbo                => turbo
	, weakTermination      => weakTermination
	, inputDelayLine       => inputDelayLine
	, inputSignalSlope     => inputSignalSlope
	, locked               => '1'
    )
		   port map (I => I_pad, O => O_pad, C => C_pad, IO => IO);

    iodp: NX_IOM_DRIVER generic map (
		   rpath_init      => '1'
		 , rpath_mode      => b"0100"
		 , rpath_dynamic   => dpath_dynamic
		 , cpath_mode      => b"0000"
		 , location        => location
		 , symbol          => "DES_D"
		 )
		 port map (
			    RO1  => O_int(9)
			  , RO2  => O_int(8)
			  , RO3  => O_int(7)
			  , RO4  => O_int(6)
			  , RO5  => O_int(5)
			  , RI   => O_pad
			  , EO   => I_pad
			  , CO   => C_pad
			  , LINK => LINKP
		);

    iodn: NX_IOM_DRIVER generic map (
		  rpath_init       => '1'
		, rpath_mode       => b"0100"
		, cpath_mode       => b"0000"
		, chained          => '1'
		, symbol           => "DES_DC"
		)
		port map (
			   RO1  => O_int(4)
			 , RO2  => O_int(3)
			 , RO3  => O_int(2)
			 , RO4  => O_int(1)
			 , RO5  => O_int(0)
			 , RI   => OPEN
			 , EO   => OPEN
			 , CO   => OPEN
			 , LINK => LINKN
		);
end generate;

ioc: NX_IOM_SERDES generic map (data_size => data_size, location => location)
		   port map (
			      RRCK  => SCK
			    , WRCK  => FCK	    -- RCK
			    , RRST  => R	    -- RR
			    , LINKN => LINKN
			    , LINKP => LINKP
			    , DCK   => DCK
			    , DRL   => DRL
			    , DIG   => DIG
			    , DS    => DS
			    , DRA   => DRA
			    , DRI   => DRI
			    , FZ    => FZ
			    , DRO   => DRO
			    , DID   => DID
			    , FLD   => FLD
			    , FLG   => FLG
		   );

end NX_RTL;
-- #}}}#

-- NX_SERDES#{{{#
----------------------------------------------------------------------------------------------------
architecture NX_RTL of NX_SERDES is

signal I_pad : std_logic;
signal O_pad : std_logic;
signal C_pad : std_logic;
signal sync  : std_logic;
signal I_int : std_logic_vector(9 downto 0);
signal O_int : std_logic_vector(9 downto 0);
signal LINKN : std_logic_vector(IOM_LINK_SIZE - 1 downto 0);
signal LINKP : std_logic_vector(IOM_LINK_SIZE - 1 downto 0);

type switch_mode is array(bit) of bit_vector(3 downto 0);
constant switch : switch_mode := ('0' => b"0010", '1' => b"0011");
constant cpath_mode : bit_vector(3 downto 0) := switch(cpath_registered);

type     switch_dynamic is array (boolean) of bit;
constant switch_dpath : switch_dynamic := (true => '1', false => '0');
-- TODO constant dpath_dynamic : bit := switch_dpath(inputDelayLine = "");

begin

I_net: for j in 0 to (data_size - 1) generate
    I_int(j) <= I(j);
end generate;

I_dummy: for j in (data_size - 1) to 9 generate
    I_int(j) <= '0';
end generate;

O_net: for j in 0 to (data_size - 1) generate
    O(j) <= O_int(j);
end generate;

single_serdes: if (data_size <= 5) generate
    iobx: NX_IOB generic map (
	  location             => location
	, standard             => standard
	, drive                => drive
	, differential         => differential
	, slewRate             => slewRate
	, termination          => termination
	, terminationReference => terminationReference
	, turbo                => turbo
	, weakTermination      => weakTermination
	, inputDelayLine       => inputDelayLine
	, outputDelayLine      => outputDelayLine
	, inputSignalSlope     => inputSignalSlope
	, outputCapacity       => outputCapacity
	, locked               => '1'
    )
		 port map (I => I_pad, O => O_pad, C => C_pad, IO => IO);

    iodx: NX_IOM_DRIVER generic map (
			       epath_init      => '1'
			     , epath_mode      => b"0100"
			     , rpath_init      => '1'
			     , rpath_mode      => b"0100"
			     , rpath_dynamic   => dpath_dynamic
			     , cpath_mode      => cpath_mode
			     , location        => location
			     , symbol          => "SD_DR"
		)
		port map (
			   EI1  => I_int(0)
			 , EI2  => I_int(1)
			 , EI3  => I_int(2)
			 , EI4  => I_int(3)
			 , EI5  => I_int(4)
			 , RO1  => O_int(4)
			 , RO2  => O_int(3)
			 , RO3  => O_int(2)
			 , RO4  => O_int(1)
			 , RO5  => O_int(0)
			 , CI1  => CI
			 , RI   => O_pad
			 , EO   => I_pad
			 , CO   => C_pad
			 , LINK => LINKP
		);
end generate;

large_serdes: if (5 < data_size) generate
    iobp: NX_IOB_I generic map (
	  location             => location
	, standard             => standard
	, drive                => drive
	, differential         => differential
	, slewRate             => slewRate
	, termination          => termination
	, terminationReference => terminationReference
	, turbo                => turbo
	, weakTermination      => weakTermination
	, inputDelayLine       => inputDelayLine
	, outputDelayLine      => outputDelayLine
	, inputSignalSlope     => inputSignalSlope
	, outputCapacity       => outputCapacity
	, locked               => '1'
    )
		   port map (I => I_pad, O => O_pad, C => C_pad, IO => IO);

    iodp: NX_IOM_DRIVER generic map (
			       epath_init      => '1'
			     , epath_mode      => b"0100"
			     , rpath_init      => '1'
			     , rpath_mode      => b"0100"
			     , rpath_dynamic   => dpath_dynamic
			     , cpath_mode      => cpath_mode
			     , location        => location
			     , symbol          => "SD_DR"
		)
		port map (
			   EI1  => I_int(5)
			 , EI2  => I_int(6)
			 , EI3  => I_int(7)
			 , EI4  => I_int(8)
			 , EI5  => I_int(9)
			 , RO1  => O_int(9)
			 , RO2  => O_int(8)
			 , RO3  => O_int(7)
			 , RO4  => O_int(6)
			 , RO5  => O_int(5)
			 , CI1  => CI
			 , RI   => O_pad
			 , EO   => I_pad
			 , CO   => C_pad
			 , LINK => LINKP
		);

    iodn: NX_IOM_DRIVER generic map (
			       epath_init      => '1'
			     , epath_mode      => b"0100"
			     , rpath_init      => '1'
			     , rpath_mode      => b"0100"
			     , cpath_mode      => cpath_mode
			     , chained         => '1'
			     , symbol          => "SD_DRC"
		)
		port map (
			   EI1  => I_int(0)
			 , EI2  => I_int(1)
			 , EI3  => I_int(2)
			 , EI4  => I_int(3)
			 , EI5  => I_int(4)
			 , RO1  => O_int(4)
			 , RO2  => O_int(3)
			 , RO3  => O_int(2)
			 , RO4  => O_int(1)
			 , RO5  => O_int(0)
			 , CI1  => CI
			 , RI   => OPEN
			 , EO   => OPEN
			 , CO   => OPEN
			 , LINK => LINKN
		);
end generate;

ioc: NX_IOM_SERDES generic map (data_size => data_size, location => location)
		   port map (
			      RTCK  => FCK	    -- ECK
			    , WTCK  => SCK
			    , RRCK  => SCK
			    , WRCK  => FCK	    -- RCK
			    , TRST  => RTX	    -- ER
			    , RRST  => RRX	    -- RR
			    , CTCK  => CCK	    -- CCK
			    , CL    => CL	    -- CL
			    , CR    => CR	    -- CR
			    , LINKN => LINKN
			    , LINKP => LINKP
			    , DCK   => DCK
			    , DRL   => DRL
			    , DIG   => DIG
			    , DS    => DS
			    , DRA   => DRA
			    , DRI   => DRI
			    , FZ    => FZ
			    , DRO   => DRO
			    , DID   => DID
			    , FLD   => FLD
			    , FLG   => FLG
		   );

end NX_RTL;
-- #}}}#



library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;

entity NX_RAM is
generic (
   std_mode     : string := ""; -- standard mode [FAST_2kx18, SLOW_2kx18, NOECNOECC24, ...] empty for raw
   mcka_edge    : bit := '0';   -- 0: rising edge for port A clock - 1: falling edge
   mckb_edge    : bit := '0';   -- 0: rising edge for port B clock - 1: falling edge
   pcka_edge    : bit := '0';   -- 0: rising edge for pipe A clock - 1: falling edge
   pckb_edge    : bit := '0';   -- 0: rising edge for pipe B clock - 1: falling edge
   pipe_ia      : bit := '0';   -- 0: no pipe on port A input  - 1: pipe on port A input
   pipe_ib      : bit := '0';   -- 0: no pipe on port B input  - 1: pipe on port B input
   pipe_oa      : bit := '0';   -- 0: no pipe on port A output - 1: pipe on port A output
   pipe_ob      : bit := '0';   -- 0: no pipe on port B output - 1: pipe on port B output

   raw_config0  : bit_vector( 3 downto 0) := B"0000";			-- PRC
   raw_config1  : bit_vector(15 downto 0) := B"0000000000000000";	-- MOD

   -- For specific NG_LARGE Extended Features
   raw_l_enable : bit := '0';                         -- '0' for NG-MEDIUM, '1' for NG-LARGE extended modes (NO_ECC x3 & x6) + scrubbing, test...
   raw_l_extend : bit_vector( 3 downto 0) := B"0000"; -- Extended modes for NG-LARGE (Scrubbing, test... )

   mem_ctxt     : string := ""                        -- context initialization
   );
port (
   ACK   : in  std_logic;
   ACKC  : in  std_logic;
   ACKD  : in  std_logic;
   ACKR  : in  std_logic;
   BCK   : in  std_logic;
   BCKC  : in  std_logic;
   BCKD  : in  std_logic;
   BCKR  : in  std_logic;

   AI1   : in  std_logic;
   AI2   : in  std_logic;
   AI3   : in  std_logic;
   AI4   : in  std_logic;
   AI5   : in  std_logic;
   AI6   : in  std_logic;
   AI7   : in  std_logic;
   AI8   : in  std_logic;
   AI9   : in  std_logic;
   AI10  : in  std_logic;
   AI11  : in  std_logic;
   AI12  : in  std_logic;
   AI13  : in  std_logic;
   AI14  : in  std_logic;
   AI15  : in  std_logic;
   AI16  : in  std_logic;

   AI17  : in  std_logic;
   AI18  : in  std_logic;
   AI19  : in  std_logic;
   AI20  : in  std_logic;
   AI21  : in  std_logic;
   AI22  : in  std_logic;
   AI23  : in  std_logic;
   AI24  : in  std_logic;

   BI1   : in  std_logic;
   BI2   : in  std_logic;
   BI3   : in  std_logic;
   BI4   : in  std_logic;
   BI5   : in  std_logic;
   BI6   : in  std_logic;
   BI7   : in  std_logic;
   BI8   : in  std_logic;
   BI9   : in  std_logic;
   BI10  : in  std_logic;
   BI11  : in  std_logic;
   BI12  : in  std_logic;
   BI13  : in  std_logic;
   BI14  : in  std_logic;
   BI15  : in  std_logic;
   BI16  : in  std_logic;

   BI17  : in  std_logic;
   BI18  : in  std_logic;
   BI19  : in  std_logic;
   BI20  : in  std_logic;
   BI21  : in  std_logic;
   BI22  : in  std_logic;
   BI23  : in  std_logic;
   BI24  : in  std_logic;

   ACOR  : out std_logic;
   AERR  : out std_logic;
   BCOR  : out std_logic;
   BERR  : out std_logic;

   AO1   : out std_logic;
   AO2   : out std_logic;
   AO3   : out std_logic;
   AO4   : out std_logic;
   AO5   : out std_logic;
   AO6   : out std_logic;
   AO7   : out std_logic;
   AO8   : out std_logic;
   AO9   : out std_logic;
   AO10  : out std_logic;
   AO11  : out std_logic;
   AO12  : out std_logic;
   AO13  : out std_logic;
   AO14  : out std_logic;
   AO15  : out std_logic;
   AO16  : out std_logic;

   AO17  : out std_logic;
   AO18  : out std_logic;
   AO19  : out std_logic;
   AO20  : out std_logic;
   AO21  : out std_logic;
   AO22  : out std_logic;
   AO23  : out std_logic;
   AO24  : out std_logic;

   BO1   : out std_logic;
   BO2   : out std_logic;
   BO3   : out std_logic;
   BO4   : out std_logic;
   BO5   : out std_logic;
   BO6   : out std_logic;
   BO7   : out std_logic;
   BO8   : out std_logic;
   BO9   : out std_logic;
   BO10  : out std_logic;
   BO11  : out std_logic;
   BO12  : out std_logic;
   BO13  : out std_logic;
   BO14  : out std_logic;
   BO15  : out std_logic;
   BO16  : out std_logic;

   BO17  : out std_logic;
   BO18  : out std_logic;
   BO19  : out std_logic;
   BO20  : out std_logic;
   BO21  : out std_logic;
   BO22  : out std_logic;
   BO23  : out std_logic;
   BO24  : out std_logic;

   AA1   : in  std_logic;
   AA2   : in  std_logic;
   AA3   : in  std_logic;
   AA4   : in  std_logic;
   AA5   : in  std_logic;
   AA6   : in  std_logic;

   AA7   : in  std_logic;
   AA8   : in  std_logic;
   AA9   : in  std_logic;
   AA10  : in  std_logic;
   AA11  : in  std_logic;
   AA12  : in  std_logic;
   AA13  : in  std_logic;
   AA14  : in  std_logic;
   AA15  : in  std_logic;
   AA16  : in  std_logic;

   ACS   : in  std_logic;
   AWE   : in  std_logic;
   AR    : in  std_logic;

   BA1   : in  std_logic;
   BA2   : in  std_logic;
   BA3   : in  std_logic;
   BA4   : in  std_logic;
   BA5   : in  std_logic;
   BA6   : in  std_logic;

   BA7   : in  std_logic;
   BA8   : in  std_logic;
   BA9   : in  std_logic;
   BA10  : in  std_logic;
   BA11  : in  std_logic;
   BA12  : in  std_logic;
   BA13  : in  std_logic;
   BA14  : in  std_logic;
   BA15  : in  std_logic;
   BA16  : in  std_logic;

   BCS   : in  std_logic;
   BWE   : in  std_logic;
   BR    : in  std_logic
);
end NX_RAM;

architecture NX_RTL of NX_RAM is
    attribute NX_TYPE :string;
    attribute NX_TYPE of NX_RTL: architecture is "PHY";

    attribute NX_USE :string;
    attribute NX_USE of NX_RTL: architecture is "NX_RAM";
begin
end NX_RTL;

----------------------------------------------------------------------------------------------------

-- =================================================================================================
--   NX_RAM_WRAP definition                                                             2017/09/25
-- =================================================================================================

library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;

entity NX_RAM_WRAP is
generic (
   std_mode     : string := ""; -- standard mode [FAST_2kx18, SLOW_2kx18, NOECNOECC24, ...] empty for raw
   mcka_edge    : bit := '0';   -- 0: rising edge for port A clock - 1: falling edge
   mckb_edge    : bit := '0';   -- 0: rising edge for port B clock - 1: falling edge
   pcka_edge    : bit := '0';   -- 0: rising edge for pipe A clock - 1: falling edge
   pckb_edge    : bit := '0';   -- 0: rising edge for pipe B clock - 1: falling edge

   pipe_ia      : bit := '0';   -- 0: no pipe on port A input  - 1: pipe on port A input
   pipe_ib      : bit := '0';   -- 0: no pipe on port B input  - 1: pipe on port B input
   pipe_oa      : bit := '0';   -- 0: no pipe on port A output - 1: pipe on port A output
   pipe_ob      : bit := '0';   -- 0: no pipe on port B output - 1: pipe on port B output

   raw_config0  : bit_vector( 3 downto 0) := B"0000";			-- PRC
   raw_config1  : bit_vector(15 downto 0) := B"0000000000000000";	-- MOD

   -- For specific NG_LARGE Extended Features
   raw_l_enable : bit := '0';                          -- '0' for NG-MEDIUM, '1' for NG-LARGE extended modes (NO_ECC x3 & x6) + scrubbing, test...
   raw_l_extend : bit_vector( 3 downto 0) := B"0000";  -- Extended modes for NG-LARGE (Scrubbing, test... )

   mem_ctxt     : string := ""                         -- context initialization
);
port (
   ACK  : in  std_logic;
   ACKD : in  std_logic;
   ACKR : in  std_logic;
   BCK  : in  std_logic;
   BCKD : in  std_logic;
   BCKR : in  std_logic;

   AI   : in  std_logic_vector(23 downto 0);
   BI   : in  std_logic_vector(23 downto 0);

   ACOR : out std_logic;
   AERR : out std_logic;
   BCOR : out std_logic;
   BERR : out std_logic;

   AO   : out std_logic_vector(23 downto 0);
   BO   : out std_logic_vector(23 downto 0);
   AA   : in  std_logic_vector(15 downto 0);

   ACS  : in  std_logic;
   AWE  : in  std_logic;
   AR   : in  std_logic;

   BA   : in  std_logic_vector(15 downto 0);

   BCS  : in  std_logic;
   BWE  : in  std_logic;
   BR   : in  std_logic
);
end NX_RAM_WRAP;


`protect begin_protected
`protect version = 1
`protect encrypt_agent = "NanoXplore"
`protect key_keyowner = "Mentor Graphics Corporation", key_keyname = "MGC-VERIF-SIM-RSA-2", key_method = "rsa"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 256)
`protect key_block
k9AAWTSke+A10amAnDzbc51M5VstdN/21B8hydHVWhdIxyCUWgMeIbvAf54BkKmU
sZZAakLhJxrizpmYCEYKLcEsOSRAtTIUFT6uFJSxZz8CtWHKHkjKbKCIP6ZHV9zr
VYNnrl7yJ1x/QTqM1DUik83ORM2i6QhwJEi/ixouA1J3zk+mGcoFRVKaht1JmGeW
WfjFzXLOLhwyOB8XFJQtNnVaehL4VpfhVl9GVYIwMOD8Q3al5huvnZH+PPwIWJGp
tql+0EcFTOxWZwNeLFyuihydBfMXcbOsCMIUE1dG8xKVXy7lqqPl5AU7sRalfoTS
tiSuGri2tkD7hQpwtLW8oA==
`protect data_method = "aes256-cbc"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 8672)
`protect data_block
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
`protect end_protected


architecture NX_RTL of NX_RAM_WRAP is
   attribute NX_TYPE :string;
   attribute NX_TYPE of NX_RTL: architecture is "WRAPPER";

component NX_RAM
generic (
   std_mode     : string := ""; -- standard mode [FAST_2kx18, SLOW_2kx18, NOECNOECC24, ...] empty for raw
   mcka_edge    : bit := '0';   -- 0: rising edge for port A clock - 1: falling edge
   mckb_edge    : bit := '0';   -- 0: rising edge for port B clock - 1: falling edge
   pcka_edge    : bit := '0';   -- 0: rising edge for pipe A clock - 1: falling edge
   pckb_edge    : bit := '0';   -- 0: rising edge for pipe B clock - 1: falling edge

   pipe_ia      : bit := '0';   -- 0: no pipe on port A input  - 1: pipe on port A input
   pipe_ib      : bit := '0';   -- 0: no pipe on port B input  - 1: pipe on port B input
   pipe_oa      : bit := '0';   -- 0: no pipe on port A output - 1: pipe on port A output
   pipe_ob      : bit := '0';   -- 0: no pipe on port B output - 1: pipe on port B output

   raw_config0  : bit_vector( 3 downto 0) := B"0000";			-- PRC
   raw_config1  : bit_vector(15 downto 0) := B"0000000000000000";	-- MOD

   raw_l_enable : bit := '0';                         -- '0' for NG-MEDIUM, '1' for NG-LARGE extended modes (NO_ECC x3 & x6) + scrubbing, test...
   raw_l_extend : bit_vector( 3 downto 0) := B"0000"; -- Extended modes for NG-LARGE (Scrubbing, test... )

   mem_ctxt     : string := ""                        -- context initialization
);
port (
   ACK   : in  std_logic;
   ACKC  : in  std_logic;
   ACKD  : in  std_logic;
   ACKR  : in  std_logic;
   BCK   : in  std_logic;
   BCKC  : in  std_logic;
   BCKD  : in  std_logic;
   BCKR  : in  std_logic;

   AI1   : in  std_logic;
   AI2   : in  std_logic;
   AI3   : in  std_logic;
   AI4   : in  std_logic;
   AI5   : in  std_logic;
   AI6   : in  std_logic;
   AI7   : in  std_logic;
   AI8   : in  std_logic;
   AI9   : in  std_logic;
   AI10  : in  std_logic;
   AI11  : in  std_logic;
   AI12  : in  std_logic;
   AI13  : in  std_logic;
   AI14  : in  std_logic;
   AI15  : in  std_logic;
   AI16  : in  std_logic;

   AI17  : in  std_logic;
   AI18  : in  std_logic;
   AI19  : in  std_logic;
   AI20  : in  std_logic;
   AI21  : in  std_logic;
   AI22  : in  std_logic;
   AI23  : in  std_logic;
   AI24  : in  std_logic;

   BI1   : in  std_logic;
   BI2   : in  std_logic;
   BI3   : in  std_logic;
   BI4   : in  std_logic;
   BI5   : in  std_logic;
   BI6   : in  std_logic;
   BI7   : in  std_logic;
   BI8   : in  std_logic;
   BI9   : in  std_logic;
   BI10  : in  std_logic;
   BI11  : in  std_logic;
   BI12  : in  std_logic;
   BI13  : in  std_logic;
   BI14  : in  std_logic;
   BI15  : in  std_logic;
   BI16  : in  std_logic;

   BI17  : in  std_logic;
   BI18  : in  std_logic;
   BI19  : in  std_logic;
   BI20  : in  std_logic;
   BI21  : in  std_logic;
   BI22  : in  std_logic;
   BI23  : in  std_logic;
   BI24  : in  std_logic;

   ACOR  : out std_logic;
   AERR  : out std_logic;
   BCOR  : out std_logic;
   BERR  : out std_logic;

   AO1   : out std_logic;
   AO2   : out std_logic;
   AO3   : out std_logic;
   AO4   : out std_logic;
   AO5   : out std_logic;
   AO6   : out std_logic;
   AO7   : out std_logic;
   AO8   : out std_logic;
   AO9   : out std_logic;
   AO10  : out std_logic;
   AO11  : out std_logic;
   AO12  : out std_logic;
   AO13  : out std_logic;
   AO14  : out std_logic;
   AO15  : out std_logic;
   AO16  : out std_logic;

   AO17  : out std_logic;
   AO18  : out std_logic;
   AO19  : out std_logic;
   AO20  : out std_logic;
   AO21  : out std_logic;
   AO22  : out std_logic;
   AO23  : out std_logic;
   AO24  : out std_logic;

   BO1   : out std_logic;
   BO2   : out std_logic;
   BO3   : out std_logic;
   BO4   : out std_logic;
   BO5   : out std_logic;
   BO6   : out std_logic;
   BO7   : out std_logic;
   BO8   : out std_logic;
   BO9   : out std_logic;
   BO10  : out std_logic;
   BO11  : out std_logic;
   BO12  : out std_logic;
   BO13  : out std_logic;
   BO14  : out std_logic;
   BO15  : out std_logic;
   BO16  : out std_logic;

   BO17  : out std_logic;
   BO18  : out std_logic;
   BO19  : out std_logic;
   BO20  : out std_logic;
   BO21  : out std_logic;
   BO22  : out std_logic;
   BO23  : out std_logic;
   BO24  : out std_logic;

   AA1   : in  std_logic;
   AA2   : in  std_logic;
   AA3   : in  std_logic;
   AA4   : in  std_logic;
   AA5   : in  std_logic;
   AA6   : in  std_logic;

   AA7   : in  std_logic;
   AA8   : in  std_logic;
   AA9   : in  std_logic;
   AA10  : in  std_logic;
   AA11  : in  std_logic;
   AA12  : in  std_logic;
   AA13  : in  std_logic;
   AA14  : in  std_logic;
   AA15  : in  std_logic;
   AA16  : in  std_logic;

   ACS   : in  std_logic;
   AWE   : in  std_logic;
   AR    : in  std_logic;

   BA1   : in  std_logic;
   BA2   : in  std_logic;
   BA3   : in  std_logic;
   BA4   : in  std_logic;
   BA5   : in  std_logic;
   BA6   : in  std_logic;

   BA7   : in  std_logic;
   BA8   : in  std_logic;
   BA9   : in  std_logic;
   BA10  : in  std_logic;
   BA11  : in  std_logic;
   BA12  : in  std_logic;
   BA13  : in  std_logic;
   BA14  : in  std_logic;
   BA15  : in  std_logic;
   BA16  : in  std_logic;

   BCS   : in  std_logic;
   BWE   : in  std_logic;
   BR    : in  std_logic
);
end component;

begin

ram: NX_RAM generic map (
   std_mode     => std_mode,
   mcka_edge    => mcka_edge,
   mckb_edge    => mckb_edge,
   pcka_edge    => pcka_edge,
   pckb_edge    => pckb_edge,
   pipe_ia      => pipe_ia,
   pipe_ib      => pipe_ib,
   pipe_oa      => pipe_oa,
   pipe_ob      => pipe_ob,
   raw_config0  => raw_config0,
   raw_config1  => raw_config1,
   raw_l_enable => raw_l_enable,
   raw_l_extend => raw_l_extend,
   mem_ctxt     => mem_ctxt
)
port map(
   ACK   => ACK,
   ACKC  => ACK,
   ACKD  => ACKD,
   ACKR  => ACKR,
   BCK   => BCK,
   BCKC  => BCK,
   BCKD  => BCKD,
   BCKR  => BCKR,

   AI1   => AI(0),
   AI2   => AI(1),
   AI3   => AI(2),
   AI4   => AI(3),
   AI5   => AI(4),
   AI6   => AI(5),
   AI7   => AI(6),
   AI8   => AI(7),
   AI9   => AI(8),
   AI10  => AI(9),
   AI11  => AI(10),
   AI12  => AI(11),
   AI13  => AI(12),
   AI14  => AI(13),
   AI15  => AI(14),
   AI16  => AI(15),

   AI17  => AI(16),
   AI18  => AI(17),
   AI19  => AI(18),
   AI20  => AI(19),
   AI21  => AI(20),
   AI22  => AI(21),
   AI23  => AI(22),
   AI24  => AI(23),

   BI1   => BI(0),
   BI2   => BI(1),
   BI3   => BI(2),
   BI4   => BI(3),
   BI5   => BI(4),
   BI6   => BI(5),
   BI7   => BI(6),
   BI8   => BI(7),
   BI9   => BI(8),
   BI10  => BI(9),
   BI11  => BI(10),
   BI12  => BI(11),
   BI13  => BI(12),
   BI14  => BI(13),
   BI15  => BI(14),
   BI16  => BI(15),

   BI17  => BI(16),
   BI18  => BI(17),
   BI19  => BI(18),
   BI20  => BI(19),
   BI21  => BI(20),
   BI22  => BI(21),
   BI23  => BI(22),
   BI24  => BI(23),

   ACOR  => ACOR,
   AERR  => AERR,
   BCOR  => BCOR,
   BERR  => BERR,

   AO1   => AO(0),
   AO2   => AO(1),
   AO3   => AO(2),
   AO4   => AO(3),
   AO5   => AO(4),
   AO6   => AO(5),
   AO7   => AO(6),
   AO8   => AO(7),
   AO9   => AO(8),
   AO10  => AO(9),
   AO11  => AO(10),
   AO12  => AO(11),
   AO13  => AO(12),
   AO14  => AO(13),
   AO15  => AO(14),
   AO16  => AO(15),

   AO17  => AO(16),
   AO18  => AO(17),
   AO19  => AO(18),
   AO20  => AO(19),
   AO21  => AO(20),
   AO22  => AO(21),
   AO23  => AO(22),
   AO24  => AO(23),

   BO1   => BO(0),
   BO2   => BO(1),
   BO3   => BO(2),
   BO4   => BO(3),
   BO5   => BO(4),
   BO6   => BO(5),
   BO7   => BO(6),
   BO8   => BO(7),
   BO9   => BO(8),
   BO10  => BO(9),
   BO11  => BO(10),
   BO12  => BO(11),
   BO13  => BO(12),
   BO14  => BO(13),
   BO15  => BO(14),
   BO16  => BO(15),

   BO17  => BO(16),
   BO18  => BO(17),
   BO19  => BO(18),
   BO20  => BO(19),
   BO21  => BO(20),
   BO22  => BO(21),
   BO23  => BO(22),
   BO24  => BO(23),

   AA1   => AA(0),
   AA2   => AA(1),
   AA3   => AA(2),
   AA4   => AA(3),
   AA5   => AA(4),
   AA6   => AA(5),

   AA7   => AA(6),
   AA8   => AA(7),
   AA9   => AA(8),
   AA10  => AA(9),
   AA11  => AA(10),
   AA12  => AA(11),
   AA13  => AA(12),
   AA14  => AA(13),
   AA15  => AA(14),
   AA16  => AA(15),

   ACS   => ACS,
   AWE   => AWE,
   AR    => AR,

   BA1   => BA(0),
   BA2   => BA(1),
   BA3   => BA(2),
   BA4   => BA(3),
   BA5   => BA(4),
   BA6   => BA(5),

   BA7   => BA(6),
   BA8   => BA(7),
   BA9   => BA(8),
   BA10  => BA(9),
   BA11  => BA(10),
   BA12  => BA(11),
   BA13  => BA(12),
   BA14  => BA(13),
   BA15  => BA(14),
   BA16  => BA(15),

   BCS   => BCS,
   BWE   => BWE,
   BR    => BR
   );

end NX_RTL;
`protect begin_protected
`protect version = 1
`protect encrypt_agent = "NanoXplore"
`protect key_keyowner = "Mentor Graphics Corporation", key_keyname = "MGC-VERIF-SIM-RSA-2", key_method = "rsa"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 256)
`protect key_block
kMTJulkfAwPp87TfFJmJ8lKBvHsrLlWCAjwgkM0A0gnOw6gNf8uYT1cEuNKkIpjo
eM1Ve6RqFdeJJCQ/EFdJTD9xDSNvE5JcjAVKBzj39jHjHhlo7pfKdK33mTdSnEVc
vrNHvdfUFutMDOFaIpQsn1JH5d/tiKckkFdqwdonGHXKkYrE25EKirl9wrYkgH6a
hzId3UrRxMVrybTCXP0u8Q5wlNQOSNZlrnDFblggmHWY1vkRvHPMt/YRfivQwvFU
Z+52G2OiejfhWp6evNvzEAZ5zrohOTZsCY0XhNSIdX6/K2xwsVwlkc8GP3PkMe8H
u9rRBh0R5ktX2/SI15tZ7g==
`protect data_method = "aes256-cbc"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 7808)
`protect data_block
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
`protect end_protected

`protect begin_protected
`protect version = 1
`protect encrypt_agent = "NanoXplore"
`protect key_keyowner = "Mentor Graphics Corporation", key_keyname = "MGC-VERIF-SIM-RSA-2", key_method = "rsa"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 256)
`protect key_block
qdEOharSyNMLPF6U2GV2BMUSGn0wrVFRfKHHc0MrmSicIhu+482ABWCjOJD00ODk
m9sh09aeY4Dz8tJzYwuvOXvXHTLN1FurH2bckBhCJxiNrL/dVNvD2FYDkVxDs7dL
RC+ISyJ9lVJ0ATnGHLIkvjcT2VqXVGWJr2pcNi/F+sD3ybJbaLcJo8QOcPrbHPy6
OuTb0gEv8Z6Cbi2yCFIzazKNts/57iqv+8a4ORZKmDD17hTG2TsNXk6PjguwxViO
XqoKLxYCrPUO0cqPJRVE6MXSv9Ky5T7yzgEbZWin6I38zyQXkFoSl+7BG4k3XNF0
BODChbtiJ+Ayz2jhmIP0Mg==
`protect data_method = "aes256-cbc"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 13664)
`protect data_block
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
`protect end_protected

`protect begin_protected
`protect version = 1
`protect encrypt_agent = "NanoXplore"
`protect key_keyowner = "Mentor Graphics Corporation", key_keyname = "MGC-VERIF-SIM-RSA-2", key_method = "rsa"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 256)
`protect key_block
NVhHuUgsnxvhM43YvD3pw2wDdA7TwoofLh+KZLofVe4+OD5zqIH6KF/GtFHKkeua
XcF6mnV+LBplSHujF4e+7ZwrFpKKr+ZU6cPJOTIQUfLxuMDG3EJMaxppjHi0O5tU
QrCDDpH2cNILI5jjVMwPiOhw/y2ylZQkKSvCDvNnVKDTZUrkbzxfm6Bf/2tn6Nxs
AzHznxvr+xVehBQMMee0hAqX0suQb16QYTwoNItJvvWjU5EXXUAGhtNr49MWouBA
fSSLqY2Ol5ReqenG6m/rgZfkvbF/bjWNaOnDUzoNNqPJN9H6hecvB2DDGaIQ51ia
ovz2FmX4/a+C6ZC97pI4fw==
`protect data_method = "aes256-cbc"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 10352)
`protect data_block
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
`protect end_protected

`protect begin_protected
`protect version = 1
`protect encrypt_agent = "NanoXplore"
`protect key_keyowner = "Mentor Graphics Corporation", key_keyname = "MGC-VERIF-SIM-RSA-2", key_method = "rsa"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 256)
`protect key_block
GfK1U8qYPXQOfTUaWO4p2slDDAs4bIGM0WsFgYV0VfAe/YQLAiM0qwwkqw70JvfJ
CwssuvbHMmHVqZc5HwBYpAm/c6VZyid//4h4lMrwjP7WJNHCIL1V3FIWUNVctcQr
96zWBOiqQP4FApTpIR11mbxmnXYFboraJMx25Xb9zMtaB44O3pECeKSW3mZoipRb
JVvQAYxrtYH29kSpeM6J1mxi8JDcZ1bmGIKxNsEdj3jM4u+lENk521Jeq+gyZKD2
e3tQmyg3516IGGBnz2KzgU5cXvKEEr4g03a4ZqZBlipkLwJyIPJxDIW7BQKz/dJ6
m1WNM9oLAb0/B5y29Cm4sw==
`protect data_method = "aes256-cbc"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 1888)
`protect data_block
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
UYUy9EenfSugXi9qalmYVw==
`protect end_protected

`protect begin_protected
`protect version = 1
`protect encrypt_agent = "NanoXplore"
`protect key_keyowner = "Mentor Graphics Corporation", key_keyname = "MGC-VERIF-SIM-RSA-2", key_method = "rsa"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 256)
`protect key_block
c84KXvnlbpTzB1gXZq3Er9XwG3TEjW5wbwhjTzbj2c1ybouV25W122zb7k7/Js4p
V/kgVsg5Skc43QM+AJ1Qn+RZnubCwaUUrFACd1yECTM5Ex0o3I5qAiyDDmJrLc/d
y5FNRiKbvgDtghwcgCp4gGShhsZ3W4FWDOuw5HT7LIRQjtppf8G7Bitbx29ggZWH
XP0PJy3Og3kwl4QwgyRz1Pyt0Q1UWWZaHEdMR0Z+/dpQn4hY6SS6LAeWbr7UEf9y
AOq+AkaoW/avmHeNw1jaLKYm3LLWqlGL9dhjaDE5trizMyxiBGQm4kotnm4wuKov
Be66ggl6c0I5Loh8uPrEZQ==
`protect data_method = "aes256-cbc"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 1680)
`protect data_block
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
`protect end_protected

`protect begin_protected
`protect version = 1
`protect encrypt_agent = "NanoXplore"
`protect key_keyowner = "Mentor Graphics Corporation", key_keyname = "MGC-VERIF-SIM-RSA-2", key_method = "rsa"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 256)
`protect key_block
cB6OI4GQLBkjlX6Xo2nXjEuEzO9u4kYXOwYV6PbNqDHFOSXa2oHsTP1s2MIpFtDg
TNYJYlifABHBdlPeQX9FFzr/S3+blSNXkxI895/i0GahXe+2tp39BInsXVa40tMG
b8l8NGzfF54geSsaao/hGRzJEMb7XZTt4hlHWhRUtLZAitL001Nwpf3Hfq1bW0CF
LFSFYBl9UECKtQHO45HeLj0cE4iYuCGE0Mq5pPczTkFiDaSKAPGhaIlcPvtIroZF
ZuwiGAuZ2oe29YU2udMsMlnEeKiHSpFAJhGqLs3TkL6iGMkDUt621OyUWZWq5V4c
/oUL+i6bQF174dwSQhCx0g==
`protect data_method = "aes256-cbc"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 12624)
`protect data_block
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
`protect end_protected

-- =================================================================================================
--   NX_ECC definition                                                                  2020/05/12
-- =================================================================================================

library ieee;
use ieee.std_logic_1164.all;

entity NX_ECC is
    port(
	CKD : in std_logic;
	CHK : in std_logic;
	COR : out std_logic;
	ERR : out std_logic
    );
end NX_ECC;

architecture NX_RTL of NX_ECC is
    attribute NX_TYPE :string;
    attribute NX_TYPE of NX_RTL: architecture is "PHY";

    attribute NX_USE :string;
    attribute NX_USE of NX_RTL: architecture is "NX_ECC";
begin
end NX_RTL;

----------------------------------------------------------------------------------------------------
