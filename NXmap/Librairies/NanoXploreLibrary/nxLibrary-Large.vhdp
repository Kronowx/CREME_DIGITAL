library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;

package nxPackage is

-- IOM

constant IOM_LINK_SPW_TX_DO             : integer := 0;
constant IOM_LINK_SPW_RX_DATA           : integer := 1;
constant IOM_LINK_DES_CHAIN_OUT         : integer := 2;
constant IOM_LINK_DELAY_VALUE_OUT_LAST  : integer := 3;
constant IOM_LINK_DELAY_VALUE_OUT_FIRST : integer := 8;
constant IOM_LINK_FLD                   : integer := 9;
constant IOM_LINK_SER_CHAIN_OUT         : integer := 10;
constant IOM_LINK_FLG                   : integer := 11;
constant IOM_LINK_DES_CHAIN_IN          : integer := 12;
constant IOM_LINK_SER_FCK_FABRIC        : integer := 13;
constant IOM_LINK_CTCK_FABRIC           : integer := 14;
constant IOM_LINK_SPW_TX_SO             : integer := 15;
constant IOM_LINK_DES_FCK_FABRIC        : integer := 16;
constant IOM_LINK_SPW_TX_OUT_CONFIG     : integer := 17;
constant IOM_LINK_SER_WPTR              : integer := 18;
constant IOM_LINK_SER_SCK_IOM           : integer := 19;
constant IOM_LINK_FZ                    : integer := 20;
constant IOM_LINK_SPW_RX_RCK            : integer := 21;
constant IOM_LINK_SER_CHAIN_IN          : integer := 22;
constant IOM_LINK_SER_RPTR              : integer := 23;
constant IOM_LINK_DES_SCK_IOM           : integer := 24;
constant IOM_LINK_DELAY_VALUE_IN_LAST   : integer := 25;
constant IOM_LINK_DELAY_VALUE_IN_FIRST  : integer := 30;
constant IOM_LINK_SPW_RX_DI             : integer := 31;
constant IOM_LINK_DCK                   : integer := 32;
constant IOM_LINK_DWR                   : integer := 33;
constant IOM_LINK_DES_RPTR              : integer := 34;
constant IOM_LINK_SER_SCK_FABRIC        : integer := 35;
constant IOM_LINK_DELAY_SELECT_LAST     : integer := 36;
constant IOM_LINK_DELAY_SELECT_FIRST    : integer := 37;
constant IOM_LINK_SPW_RX_IN_CONFIG      : integer := 38;
constant IOM_LINK_DES_WPTR              : integer := 39;
constant IOM_LINK_DES_SCK_FABRIC        : integer := 40;
constant IOM_LINK_SIZE                  : integer := 41;
constant IOM_LINK_OUTPUT_MAX            : integer := 29;

-- HSSL

constant CRX_LINK_SIZE                  : integer := 10;

constant CTX_LINK_SIZE                  : integer := 20;

component NX_IOB_I is
generic (
    location             : string := "";
    standard             : string := "";
    drive                : string := "";
    differential         : string := "";
    slewRate             : string := "";
    termination          : string := "";
    terminationReference : string := "";
    turbo                : string := "";
    weakTermination      : string := "";
    inputDelayLine       : string := "";
    outputDelayLine      : string := "";
    inputSignalSlope     : string := "";
    outputCapacity       : string := "";
    locked               : bit    := '0'
);
port (
    I	: in std_logic := '0';
    C	: in std_logic := '0';
    T	: in std_logic := '0';
    IO	: in std_logic := '0';
    O	: out std_logic := '0'
);
end component NX_IOB_I;

component NX_IOB_O is
generic (
    location             : string := "";
    standard             : string := "";
    drive                : string := "";
    differential         : string := "";
    slewRate             : string := "";
    termination          : string := "";
    terminationReference : string := "";
    turbo                : string := "";
    weakTermination      : string := "";
    inputDelayLine       : string := "";
    outputDelayLine      : string := "";
    inputSignalSlope     : string := "";
    outputCapacity       : string := "";
    locked               : bit    := '0'
);
port (
    I	: in std_logic := '0';
    C	: in std_logic := '0';
    T	: in std_logic := '0';
    O	: out std_logic := '0';
    IO	: out std_logic := '0'
);
end component NX_IOB_O;

component NX_IOB is
generic (
    location             : string := "";
    standard             : string := "";
    drive                : string := "";
    differential         : string := "";
    slewRate             : string := "";
    termination          : string := "";
    terminationReference : string := "";
    turbo                : string := "";
    weakTermination      : string := "";
    inputDelayLine       : string := "";
    outputDelayLine      : string := "";
    inputSignalSlope     : string := "";
    outputCapacity       : string := "";
    locked               : bit    := '0'
);
port (
    I	: in std_logic := '0';
    C	: in std_logic := '0';
    T	: in std_logic := '0';
    O	: out std_logic := '0';
    IO	: inout std_logic := '0'
);
end component NX_IOB;

component NX_IOM_L is
generic (
    mode_side1   : integer := 0;
    sel_clkw_rx1 : bit_vector(1 downto 0) := "00";
    sel_clkr_rx1 : bit := '0';
    div_tx1      : bit_vector(3 downto 0) := "0000";
    div_rx1      : bit_vector(3 downto 0) := "0000";
--  inv_di_fclk1 : bit := '0';
--  latency1     : bit := '0';
    mode_side2   : integer := 0;
    sel_clkw_rx2 : bit_vector(1 downto 0) := "00";
    sel_clkr_rx2 : bit := '0';
    div_tx2      : bit_vector(3 downto 0) := "0000";
    div_rx2      : bit_vector(3 downto 0) := "0000";
--  inv_di_fclk2 : bit := '0';
--  latency2     : bit := '0';
--  sel_clk_out2 : bit_vector(1 downto 0) := "00";
--  sel_clk_out3 : bit_vector(1 downto 0) := "00";
    sel_clk_out1 : bit := '0';
    sel_clk_out2 : bit := '0';
    mode_io_cal  : bit := '0';
    pads_dict    : string := "";
    pads_path    : string := ""
);
port (
    RTCK1	: in std_logic := '0';
    RRCK1	: in std_logic := '0';
    WTCK1	: in std_logic := '0';
    WRCK1	: in std_logic := '0';
    RTCK2	: in std_logic := '0';
    RRCK2	: in std_logic := '0';
    WTCK2	: in std_logic := '0';
    WRCK2	: in std_logic := '0';
    CTCK	: in std_logic := '0';
    CCK	: in std_logic := '0';
    DCK	: in std_logic := '0';

    C1TW	: in std_logic := '0';
    C1TS	: in std_logic := '0';
    C1RW1	: in std_logic := '0';
    C1RW2	: in std_logic := '0';
    C1RW3	: in std_logic := '0';
    C1RNE	: in std_logic := '0';
    C1RS	: in std_logic := '0';
    C2TW	: in std_logic := '0';
    C2TS	: in std_logic := '0';
    C2RW1	: in std_logic := '0';
    C2RW2	: in std_logic := '0';
    C2RW3	: in std_logic := '0';
    C2RNE	: in std_logic := '0';
    C2RS	: in std_logic := '0';
    FA1	: in std_logic := '0';
    FA2	: in std_logic := '0';
    FA3	: in std_logic := '0';
    FA4	: in std_logic := '0';
    FA5	: in std_logic := '0';
    FA6	: in std_logic := '0';
    FZ	: in std_logic := '0';
    DC	: in std_logic := '0';
    SE	: in std_logic := '0';
    SCI	: in std_logic := '0';
    SPI1	: in std_logic := '0';
    SPI2	: in std_logic := '0';
    SPI3	: in std_logic := '0';
    SPI4	: in std_logic := '0';
    SPI5	: in std_logic := '0';
    SPI6	: in std_logic := '0';
    DRI1	: in std_logic := '0';
    DRI2	: in std_logic := '0';
    DRI3	: in std_logic := '0';
    DRI4	: in std_logic := '0';
    DRI5	: in std_logic := '0';
    DRI6	: in std_logic := '0';
    DRA1	: in std_logic := '0';
    DRA2	: in std_logic := '0';
    DRA3	: in std_logic := '0';
    DRA4	: in std_logic := '0';
    DRA5	: in std_logic := '0';
    DRA6	: in std_logic := '0';
    DRL	: in std_logic := '0';
    DOS	: in std_logic := '0';
    DOG	: in std_logic := '0';
    DIS	: in std_logic := '0';
    DIG	: in std_logic := '0';
    DPAS	: in std_logic := '0';
    DPAG	: in std_logic := '0';
    DQSS	: in std_logic := '0';
    DQSG	: in std_logic := '0';
    DS1	: in std_logic := '0';
    DS2	: in std_logic := '0';
    CAD1	: in std_logic := '0';
    CAD2	: in std_logic := '0';
    CAD3	: in std_logic := '0';
    CAD4	: in std_logic := '0';
    CAD5	: in std_logic := '0';
    CAD6	: in std_logic := '0';
    CAP1	: in std_logic := '0';
    CAP2	: in std_logic := '0';
    CAP3	: in std_logic := '0';
    CAP4	: in std_logic := '0';
    CAN1	: in std_logic := '0';
    CAN2	: in std_logic := '0';
    CAN3	: in std_logic := '0';
    CAN4	: in std_logic := '0';
    CAT1	: in std_logic := '0';
    CAT2	: in std_logic := '0';
    CAT3	: in std_logic := '0';
    CAT4	: in std_logic := '0';

    FLD	: out std_logic := '0';
    FLG	: out std_logic := '0';
    C1RED	: out std_logic := '0';
    C2RED	: out std_logic := '0';
    DRO1	: out std_logic := '0';
    DRO2	: out std_logic := '0';
    DRO3	: out std_logic := '0';
    DRO4	: out std_logic := '0';
    DRO5	: out std_logic := '0';
    DRO6	: out std_logic := '0';
    DRE	: out std_logic := '0';
    DRR	: out std_logic := '0';
    SCO	: out std_logic := '0';
    SPO1	: out std_logic := '0';
    SPO2	: out std_logic := '0';
    SPO3	: out std_logic := '0';
    SPO4	: out std_logic := '0';
    SPO5	: out std_logic := '0';

    P1CI1	: in std_logic := '0';
    P1CL	: in std_logic := '0';
    P1CR	: in std_logic := '0';
    P1CO	: out std_logic := '0';
    P1EI1	: in std_logic := '0';
    P1EI2	: in std_logic := '0';
    P1EI3	: in std_logic := '0';
    P1EI4	: in std_logic := '0';
    P1EI5	: in std_logic := '0';
    P1EL	: in std_logic := '0';
    P1ER	: in std_logic := '0';
    P1EO	: out std_logic := '0';
    P1RI	: in std_logic := '0';
    P1RL	: in std_logic := '0';
    P1RR	: in std_logic := '0';
    P1RO1	: out std_logic := '0';
    P1RO2	: out std_logic := '0';
    P1RO3	: out std_logic := '0';
    P1RO4	: out std_logic := '0';
    P1RO5	: out std_logic := '0';

    P2CI1	: in std_logic := '0';
    P2CL	: in std_logic := '0';
    P2CR	: in std_logic := '0';
    P2CO	: out std_logic := '0';
    P2EI1	: in std_logic := '0';
    P2EI2	: in std_logic := '0';
    P2EI3	: in std_logic := '0';
    P2EI4	: in std_logic := '0';
    P2EI5	: in std_logic := '0';
    P2EL	: in std_logic := '0';
    P2ER	: in std_logic := '0';
    P2EO	: out std_logic := '0';
    P2RI	: in std_logic := '0';
    P2RL	: in std_logic := '0';
    P2RR	: in std_logic := '0';
    P2RO1	: out std_logic := '0';
    P2RO2	: out std_logic := '0';
    P2RO3	: out std_logic := '0';
    P2RO4	: out std_logic := '0';
    P2RO5	: out std_logic := '0';

    P3CI1	: in std_logic := '0';
    P3CL	: in std_logic := '0';
    P3CR	: in std_logic := '0';
    P3CO	: out std_logic := '0';
    P3EI1	: in std_logic := '0';
    P3EI2	: in std_logic := '0';
    P3EI3	: in std_logic := '0';
    P3EI4	: in std_logic := '0';
    P3EI5	: in std_logic := '0';
    P3EL	: in std_logic := '0';
    P3ER	: in std_logic := '0';
    P3EO	: out std_logic := '0';
    P3RI	: in std_logic := '0';
    P3RL	: in std_logic := '0';
    P3RR	: in std_logic := '0';
    P3RO1	: out std_logic := '0';
    P3RO2	: out std_logic := '0';
    P3RO3	: out std_logic := '0';
    P3RO4	: out std_logic := '0';
    P3RO5	: out std_logic := '0';

    P4CI1	: in std_logic := '0';
    P4CL	: in std_logic := '0';
    P4CR	: in std_logic := '0';
    P4CO	: out std_logic := '0';
    P4EI1	: in std_logic := '0';
    P4EI2	: in std_logic := '0';
    P4EI3	: in std_logic := '0';
    P4EI4	: in std_logic := '0';
    P4EI5	: in std_logic := '0';
    P4EL	: in std_logic := '0';
    P4ER	: in std_logic := '0';
    P4EO	: out std_logic := '0';
    P4RI	: in std_logic := '0';
    P4RL	: in std_logic := '0';
    P4RR	: in std_logic := '0';
    P4RO1	: out std_logic := '0';
    P4RO2	: out std_logic := '0';
    P4RO3	: out std_logic := '0';
    P4RO4	: out std_logic := '0';
    P4RO5	: out std_logic := '0';

    P5CI1	: in std_logic := '0';
    P5CI2	: in std_logic := '0';
    P5CI3	: in std_logic := '0';
    P5CI4	: in std_logic := '0';
    P5CI5	: in std_logic := '0';
    P5CL	: in std_logic := '0';
    P5CR	: in std_logic := '0';
    P5CO	: out std_logic := '0';
    P5EI1	: in std_logic := '0';
    P5EI2	: in std_logic := '0';
    P5EI3	: in std_logic := '0';
    P5EI4	: in std_logic := '0';
    P5EI5	: in std_logic := '0';
    P5EL	: in std_logic := '0';
    P5ER	: in std_logic := '0';
    P5EO	: out std_logic := '0';
    P5RI	: in std_logic := '0';
    P5RL	: in std_logic := '0';
    P5RR	: in std_logic := '0';
    P5RO1	: out std_logic := '0';
    P5RO2	: out std_logic := '0';
    P5RO3	: out std_logic := '0';
    P5RO4	: out std_logic := '0';
    P5RO5	: out std_logic := '0';

    P6CI1	: in std_logic := '0';
    P6CL	: in std_logic := '0';
    P6CR	: in std_logic := '0';
    P6CO	: out std_logic := '0';
    P6EI1	: in std_logic := '0';
    P6EI2	: in std_logic := '0';
    P6EI3	: in std_logic := '0';
    P6EI4	: in std_logic := '0';
    P6EI5	: in std_logic := '0';
    P6EL	: in std_logic := '0';
    P6ER	: in std_logic := '0';
    P6EO	: out std_logic := '0';
    P6RI	: in std_logic := '0';
    P6RL	: in std_logic := '0';
    P6RR	: in std_logic := '0';
    P6RO1	: out std_logic := '0';
    P6RO2	: out std_logic := '0';
    P6RO3	: out std_logic := '0';
    P6RO4	: out std_logic := '0';
    P6RO5	: out std_logic := '0';

    P7CI1	: in std_logic := '0';
    P7CL	: in std_logic := '0';
    P7CR	: in std_logic := '0';
    P7CO	: out std_logic := '0';
    P7EI1	: in std_logic := '0';
    P7EI2	: in std_logic := '0';
    P7EI3	: in std_logic := '0';
    P7EI4	: in std_logic := '0';
    P7EI5	: in std_logic := '0';
    P7EL	: in std_logic := '0';
    P7ER	: in std_logic := '0';
    P7EO	: out std_logic := '0';
    P7RI	: in std_logic := '0';
    P7RL	: in std_logic := '0';
    P7RR	: in std_logic := '0';
    P7RO1	: out std_logic := '0';
    P7RO2	: out std_logic := '0';
    P7RO3	: out std_logic := '0';
    P7RO4	: out std_logic := '0';
    P7RO5	: out std_logic := '0';

    P8CI1	: in std_logic := '0';
    P8CL	: in std_logic := '0';
    P8CR	: in std_logic := '0';
    P8CO	: out std_logic := '0';
    P8EI1	: in std_logic := '0';
    P8EI2	: in std_logic := '0';
    P8EI3	: in std_logic := '0';
    P8EI4	: in std_logic := '0';
    P8EI5	: in std_logic := '0';
    P8EL	: in std_logic := '0';
    P8ER	: in std_logic := '0';
    P8EO	: out std_logic := '0';
    P8RI	: in std_logic := '0';
    P8RL	: in std_logic := '0';
    P8RR	: in std_logic := '0';
    P8RO1	: out std_logic := '0';
    P8RO2	: out std_logic := '0';
    P8RO3	: out std_logic := '0';
    P8RO4	: out std_logic := '0';
    P8RO5	: out std_logic := '0';

    P9CI1	: in std_logic := '0';
    P9CL	: in std_logic := '0';
    P9CR	: in std_logic := '0';
    P9CO	: out std_logic := '0';
    P9EI1	: in std_logic := '0';
    P9EI2	: in std_logic := '0';
    P9EI3	: in std_logic := '0';
    P9EI4	: in std_logic := '0';
    P9EI5	: in std_logic := '0';
    P9EL	: in std_logic := '0';
    P9ER	: in std_logic := '0';
    P9EO	: out std_logic := '0';
    P9RI	: in std_logic := '0';
    P9RL	: in std_logic := '0';
    P9RR	: in std_logic := '0';
    P9RO1	: out std_logic := '0';
    P9RO2	: out std_logic := '0';
    P9RO3	: out std_logic := '0';
    P9RO4	: out std_logic := '0';
    P9RO5	: out std_logic := '0';

    P10CI1	: in std_logic := '0';
    P10CL	: in std_logic := '0';
    P10CR	: in std_logic := '0';
    P10CO	: out std_logic := '0';
    P10EI1	: in std_logic := '0';
    P10EI2	: in std_logic := '0';
    P10EI3	: in std_logic := '0';
    P10EI4	: in std_logic := '0';
    P10EI5	: in std_logic := '0';
    P10EL	: in std_logic := '0';
    P10ER	: in std_logic := '0';
    P10EO	: out std_logic := '0';
    P10RI	: in std_logic := '0';
    P10RL	: in std_logic := '0';
    P10RR	: in std_logic := '0';
    P10RO1	: out std_logic := '0';
    P10RO2	: out std_logic := '0';
    P10RO3	: out std_logic := '0';
    P10RO4	: out std_logic := '0';
    P10RO5	: out std_logic := '0';

    P11CI1	: in std_logic := '0';
    P11CL	: in std_logic := '0';
    P11CR	: in std_logic := '0';
    P11CO	: out std_logic := '0';
    P11EI1	: in std_logic := '0';
    P11EI2	: in std_logic := '0';
    P11EI3	: in std_logic := '0';
    P11EI4	: in std_logic := '0';
    P11EI5	: in std_logic := '0';
    P11EL	: in std_logic := '0';
    P11ER	: in std_logic := '0';
    P11EO	: out std_logic := '0';
    P11RI	: in std_logic := '0';
    P11RL	: in std_logic := '0';
    P11RR	: in std_logic := '0';
    P11RO1	: out std_logic := '0';
    P11RO2	: out std_logic := '0';
    P11RO3	: out std_logic := '0';
    P11RO4	: out std_logic := '0';
    P11RO5	: out std_logic := '0';

    P12CI1	: in std_logic := '0';
    P12CL	: in std_logic := '0';
    P12CR	: in std_logic := '0';
    P12CO	: out std_logic := '0';
    P12EI1	: in std_logic := '0';
    P12EI2	: in std_logic := '0';
    P12EI3	: in std_logic := '0';
    P12EI4	: in std_logic := '0';
    P12EI5	: in std_logic := '0';
    P12EL	: in std_logic := '0';
    P12ER	: in std_logic := '0';
    P12EO	: out std_logic := '0';
    P12RI	: in std_logic := '0';
    P12RL	: in std_logic := '0';
    P12RR	: in std_logic := '0';
    P12RO1	: out std_logic := '0';
    P12RO2	: out std_logic := '0';
    P12RO3	: out std_logic := '0';
    P12RO4	: out std_logic := '0';
    P12RO5	: out std_logic := '0';

    P13CI1	: in std_logic := '0';
    P13CL	: in std_logic := '0';
    P13CR	: in std_logic := '0';
    P13CO	: out std_logic := '0';
    P13EI1	: in std_logic := '0';
    P13EI2	: in std_logic := '0';
    P13EI3	: in std_logic := '0';
    P13EI4	: in std_logic := '0';
    P13EI5	: in std_logic := '0';
    P13EL	: in std_logic := '0';
    P13ER	: in std_logic := '0';
    P13EO	: out std_logic := '0';
    P13RI	: in std_logic := '0';
    P13RL	: in std_logic := '0';
    P13RR	: in std_logic := '0';
    P13RO1	: out std_logic := '0';
    P13RO2	: out std_logic := '0';
    P13RO3	: out std_logic := '0';
    P13RO4	: out std_logic := '0';
    P13RO5	: out std_logic := '0';

    P14CI1	: in std_logic := '0';
    P14CL	: in std_logic := '0';
    P14CR	: in std_logic := '0';
    P14CO	: out std_logic := '0';
    P14EI1	: in std_logic := '0';
    P14EI2	: in std_logic := '0';
    P14EI3	: in std_logic := '0';
    P14EI4	: in std_logic := '0';
    P14EI5	: in std_logic := '0';
    P14EL	: in std_logic := '0';
    P14ER	: in std_logic := '0';
    P14EO	: out std_logic := '0';
    P14RI	: in std_logic := '0';
    P14RL	: in std_logic := '0';
    P14RR	: in std_logic := '0';
    P14RO1	: out std_logic := '0';
    P14RO2	: out std_logic := '0';
    P14RO3	: out std_logic := '0';
    P14RO4	: out std_logic := '0';
    P14RO5	: out std_logic := '0';

    P15CI1	: in std_logic := '0';
    P15CL	: in std_logic := '0';
    P15CR	: in std_logic := '0';
    P15CO	: out std_logic := '0';
    P15EI1	: in std_logic := '0';
    P15EI2	: in std_logic := '0';
    P15EI3	: in std_logic := '0';
    P15EI4	: in std_logic := '0';
    P15EI5	: in std_logic := '0';
    P15EL	: in std_logic := '0';
    P15ER	: in std_logic := '0';
    P15EO	: out std_logic := '0';
    P15RI	: in std_logic := '0';
    P15RL	: in std_logic := '0';
    P15RR	: in std_logic := '0';
    P15RO1	: out std_logic := '0';
    P15RO2	: out std_logic := '0';
    P15RO3	: out std_logic := '0';
    P15RO4	: out std_logic := '0';
    P15RO5	: out std_logic := '0';

    P16CI1	: in std_logic := '0';
    P16CL	: in std_logic := '0';
    P16CR	: in std_logic := '0';
    P16CO	: out std_logic := '0';
    P16EI1	: in std_logic := '0';
    P16EI2	: in std_logic := '0';
    P16EI3	: in std_logic := '0';
    P16EI4	: in std_logic := '0';
    P16EI5	: in std_logic := '0';
    P16EL	: in std_logic := '0';
    P16ER	: in std_logic := '0';
    P16EO	: out std_logic := '0';
    P16RI	: in std_logic := '0';
    P16RL	: in std_logic := '0';
    P16RR	: in std_logic := '0';
    P16RO1	: out std_logic := '0';
    P16RO2	: out std_logic := '0';
    P16RO3	: out std_logic := '0';
    P16RO4	: out std_logic := '0';
    P16RO5	: out std_logic := '0';

    P17CI1	: in std_logic := '0';
    P17CL	: in std_logic := '0';
    P17CR	: in std_logic := '0';
    P17CO	: out std_logic := '0';
    P17EI1	: in std_logic := '0';
    P17EI2	: in std_logic := '0';
    P17EI3	: in std_logic := '0';
    P17EI4	: in std_logic := '0';
    P17EI5	: in std_logic := '0';
    P17EL	: in std_logic := '0';
    P17ER	: in std_logic := '0';
    P17EO	: out std_logic := '0';
    P17RI	: in std_logic := '0';
    P17RL	: in std_logic := '0';
    P17RR	: in std_logic := '0';
    P17RO1	: out std_logic := '0';
    P17RO2	: out std_logic := '0';
    P17RO3	: out std_logic := '0';
    P17RO4	: out std_logic := '0';
    P17RO5	: out std_logic := '0';

    P18CI1	: in std_logic := '0';
    P18CL	: in std_logic := '0';
    P18CR	: in std_logic := '0';
    P18CO	: out std_logic := '0';
    P18EI1	: in std_logic := '0';
    P18EI2	: in std_logic := '0';
    P18EI3	: in std_logic := '0';
    P18EI4	: in std_logic := '0';
    P18EI5	: in std_logic := '0';
    P18EL	: in std_logic := '0';
    P18ER	: in std_logic := '0';
    P18EO	: out std_logic := '0';
    P18RI	: in std_logic := '0';
    P18RL	: in std_logic := '0';
    P18RR	: in std_logic := '0';
    P18RO1	: out std_logic := '0';
    P18RO2	: out std_logic := '0';
    P18RO3	: out std_logic := '0';
    P18RO4	: out std_logic := '0';
    P18RO5	: out std_logic := '0';

    P19CI1	: in std_logic := '0';
    P19CL	: in std_logic := '0';
    P19CR	: in std_logic := '0';
    P19CO	: out std_logic := '0';
    P19EI1	: in std_logic := '0';
    P19EI2	: in std_logic := '0';
    P19EI3	: in std_logic := '0';
    P19EI4	: in std_logic := '0';
    P19EI5	: in std_logic := '0';
    P19EL	: in std_logic := '0';
    P19ER	: in std_logic := '0';
    P19EO	: out std_logic := '0';
    P19RI	: in std_logic := '0';
    P19RL	: in std_logic := '0';
    P19RR	: in std_logic := '0';
    P19RO1	: out std_logic := '0';
    P19RO2	: out std_logic := '0';
    P19RO3	: out std_logic := '0';
    P19RO4	: out std_logic := '0';
    P19RO5	: out std_logic := '0';

    P20CI1	: in std_logic := '0';
    P20CL	: in std_logic := '0';
    P20CR	: in std_logic := '0';
    P20CO	: out std_logic := '0';
    P20EI1	: in std_logic := '0';
    P20EI2	: in std_logic := '0';
    P20EI3	: in std_logic := '0';
    P20EI4	: in std_logic := '0';
    P20EI5	: in std_logic := '0';
    P20EL	: in std_logic := '0';
    P20ER	: in std_logic := '0';
    P20EO	: out std_logic := '0';
    P20RI	: in std_logic := '0';
    P20RL	: in std_logic := '0';
    P20RR	: in std_logic := '0';
    P20RO1	: out std_logic := '0';
    P20RO2	: out std_logic := '0';
    P20RO3	: out std_logic := '0';
    P20RO4	: out std_logic := '0';
    P20RO5	: out std_logic := '0';

    P21CI1	: in std_logic := '0';
    P21CL	: in std_logic := '0';
    P21CR	: in std_logic := '0';
    P21CO	: out std_logic := '0';
    P21EI1	: in std_logic := '0';
    P21EI2	: in std_logic := '0';
    P21EI3	: in std_logic := '0';
    P21EI4	: in std_logic := '0';
    P21EI5	: in std_logic := '0';
    P21EL	: in std_logic := '0';
    P21ER	: in std_logic := '0';
    P21EO	: out std_logic := '0';
    P21RI	: in std_logic := '0';
    P21RL	: in std_logic := '0';
    P21RR	: in std_logic := '0';
    P21RO1	: out std_logic := '0';
    P21RO2	: out std_logic := '0';
    P21RO3	: out std_logic := '0';
    P21RO4	: out std_logic := '0';
    P21RO5	: out std_logic := '0';

    P22CI1	: in std_logic := '0';
    P22CL	: in std_logic := '0';
    P22CR	: in std_logic := '0';
    P22CO	: out std_logic := '0';
    P22EI1	: in std_logic := '0';
    P22EI2	: in std_logic := '0';
    P22EI3	: in std_logic := '0';
    P22EI4	: in std_logic := '0';
    P22EI5	: in std_logic := '0';
    P22EL	: in std_logic := '0';
    P22ER	: in std_logic := '0';
    P22EO	: out std_logic := '0';
    P22RI	: in std_logic := '0';
    P22RL	: in std_logic := '0';
    P22RR	: in std_logic := '0';
    P22RO1	: out std_logic := '0';
    P22RO2	: out std_logic := '0';
    P22RO3	: out std_logic := '0';
    P22RO4	: out std_logic := '0';
    P22RO5	: out std_logic := '0';

    P23CI1	: in std_logic := '0';
    P23CL	: in std_logic := '0';
    P23CR	: in std_logic := '0';
    P23CO	: out std_logic := '0';
    P23EI1	: in std_logic := '0';
    P23EI2	: in std_logic := '0';
    P23EI3	: in std_logic := '0';
    P23EI4	: in std_logic := '0';
    P23EI5	: in std_logic := '0';
    P23EL	: in std_logic := '0';
    P23ER	: in std_logic := '0';
    P23EO	: out std_logic := '0';
    P23RI	: in std_logic := '0';
    P23RL	: in std_logic := '0';
    P23RR	: in std_logic := '0';
    P23RO1	: out std_logic := '0';
    P23RO2	: out std_logic := '0';
    P23RO3	: out std_logic := '0';
    P23RO4	: out std_logic := '0';
    P23RO5	: out std_logic := '0';

    P24CI1	: in std_logic := '0';
    P24CL	: in std_logic := '0';
    P24CR	: in std_logic := '0';
    P24CO	: out std_logic := '0';
    P24EI1	: in std_logic := '0';
    P24EI2	: in std_logic := '0';
    P24EI3	: in std_logic := '0';
    P24EI4	: in std_logic := '0';
    P24EI5	: in std_logic := '0';
    P24EL	: in std_logic := '0';
    P24ER	: in std_logic := '0';
    P24EO	: out std_logic := '0';
    P24RI	: in std_logic := '0';
    P24RL	: in std_logic := '0';
    P24RR	: in std_logic := '0';
    P24RO1	: out std_logic := '0';
    P24RO2	: out std_logic := '0';
    P24RO3	: out std_logic := '0';
    P24RO4	: out std_logic := '0';
    P24RO5	: out std_logic := '0';

    P25CI1	: in std_logic := '0';
    P25CL	: in std_logic := '0';
    P25CR	: in std_logic := '0';
    P25CO	: out std_logic := '0';
    P25EI1	: in std_logic := '0';
    P25EI2	: in std_logic := '0';
    P25EI3	: in std_logic := '0';
    P25EI4	: in std_logic := '0';
    P25EI5	: in std_logic := '0';
    P25EL	: in std_logic := '0';
    P25ER	: in std_logic := '0';
    P25EO	: out std_logic := '0';
    P25RI	: in std_logic := '0';
    P25RL	: in std_logic := '0';
    P25RR	: in std_logic := '0';
    P25RO1	: out std_logic := '0';
    P25RO2	: out std_logic := '0';
    P25RO3	: out std_logic := '0';
    P25RO4	: out std_logic := '0';
    P25RO5	: out std_logic := '0';

    P26CI1	: in std_logic := '0';
    P26CL	: in std_logic := '0';
    P26CR	: in std_logic := '0';
    P26CO	: out std_logic := '0';
    P26EI1	: in std_logic := '0';
    P26EI2	: in std_logic := '0';
    P26EI3	: in std_logic := '0';
    P26EI4	: in std_logic := '0';
    P26EI5	: in std_logic := '0';
    P26EL	: in std_logic := '0';
    P26ER	: in std_logic := '0';
    P26EO	: out std_logic := '0';
    P26RI	: in std_logic := '0';
    P26RL	: in std_logic := '0';
    P26RR	: in std_logic := '0';
    P26RO1	: out std_logic := '0';
    P26RO2	: out std_logic := '0';
    P26RO3	: out std_logic := '0';
    P26RO4	: out std_logic := '0';
    P26RO5	: out std_logic := '0';

    P27CI1	: in std_logic := '0';
    P27CL	: in std_logic := '0';
    P27CR	: in std_logic := '0';
    P27CO	: out std_logic := '0';
    P27EI1	: in std_logic := '0';
    P27EI2	: in std_logic := '0';
    P27EI3	: in std_logic := '0';
    P27EI4	: in std_logic := '0';
    P27EI5	: in std_logic := '0';
    P27EL	: in std_logic := '0';
    P27ER	: in std_logic := '0';
    P27EO	: out std_logic := '0';
    P27RI	: in std_logic := '0';
    P27RL	: in std_logic := '0';
    P27RR	: in std_logic := '0';
    P27RO1	: out std_logic := '0';
    P27RO2	: out std_logic := '0';
    P27RO3	: out std_logic := '0';
    P27RO4	: out std_logic := '0';
    P27RO5	: out std_logic := '0';

    P28CI1	: in std_logic := '0';
    P28CL	: in std_logic := '0';
    P28CR	: in std_logic := '0';
    P28CO	: out std_logic := '0';
    P28EI1	: in std_logic := '0';
    P28EI2	: in std_logic := '0';
    P28EI3	: in std_logic := '0';
    P28EI4	: in std_logic := '0';
    P28EI5	: in std_logic := '0';
    P28EL	: in std_logic := '0';
    P28ER	: in std_logic := '0';
    P28EO	: out std_logic := '0';
    P28RI	: in std_logic := '0';
    P28RL	: in std_logic := '0';
    P28RR	: in std_logic := '0';
    P28RO1	: out std_logic := '0';
    P28RO2	: out std_logic := '0';
    P28RO3	: out std_logic := '0';
    P28RO4	: out std_logic := '0';
    P28RO5	: out std_logic := '0';

    P29CI1	: in std_logic := '0';
    P29CI2	: in std_logic := '0';
    P29CI3	: in std_logic := '0';
    P29CI4	: in std_logic := '0';
    P29CI5	: in std_logic := '0';
    P29CL	: in std_logic := '0';
    P29CR	: in std_logic := '0';
    P29CO	: out std_logic := '0';
    P29EI1	: in std_logic := '0';
    P29EI2	: in std_logic := '0';
    P29EI3	: in std_logic := '0';
    P29EI4	: in std_logic := '0';
    P29EI5	: in std_logic := '0';
    P29EL	: in std_logic := '0';
    P29ER	: in std_logic := '0';
    P29EO	: out std_logic := '0';
    P29RI	: in std_logic := '0';
    P29RL	: in std_logic := '0';
    P29RR	: in std_logic := '0';
    P29RO1	: out std_logic := '0';
    P29RO2	: out std_logic := '0';
    P29RO3	: out std_logic := '0';
    P29RO4	: out std_logic := '0';
    P29RO5	: out std_logic := '0';

    P30CI1	: in std_logic := '0';
    P30CL	: in std_logic := '0';
    P30CR	: in std_logic := '0';
    P30CO	: out std_logic := '0';
    P30EI1	: in std_logic := '0';
    P30EI2	: in std_logic := '0';
    P30EI3	: in std_logic := '0';
    P30EI4	: in std_logic := '0';
    P30EI5	: in std_logic := '0';
    P30EL	: in std_logic := '0';
    P30ER	: in std_logic := '0';
    P30EO	: out std_logic := '0';
    P30RI	: in std_logic := '0';
    P30RL	: in std_logic := '0';
    P30RR	: in std_logic := '0';
    P30RO1	: out std_logic := '0';
    P30RO2	: out std_logic := '0';
    P30RO3	: out std_logic := '0';
    P30RO4	: out std_logic := '0';
    P30RO5	: out std_logic := '0';

    P31CI1	: in std_logic := '0';
    P31CL	: in std_logic := '0';
    P31CR	: in std_logic := '0';
    P31CO	: out std_logic := '0';
    P31EI1	: in std_logic := '0';
    P31EI2	: in std_logic := '0';
    P31EI3	: in std_logic := '0';
    P31EI4	: in std_logic := '0';
    P31EI5	: in std_logic := '0';
    P31EL	: in std_logic := '0';
    P31ER	: in std_logic := '0';
    P31EO	: out std_logic := '0';
    P31RI	: in std_logic := '0';
    P31RL	: in std_logic := '0';
    P31RR	: in std_logic := '0';
    P31RO1	: out std_logic := '0';
    P31RO2	: out std_logic := '0';
    P31RO3	: out std_logic := '0';
    P31RO4	: out std_logic := '0';
    P31RO5	: out std_logic := '0';

    P32CI1	: in std_logic := '0';
    P32CL	: in std_logic := '0';
    P32CR	: in std_logic := '0';
    P32CO	: out std_logic := '0';
    P32EI1	: in std_logic := '0';
    P32EI2	: in std_logic := '0';
    P32EI3	: in std_logic := '0';
    P32EI4	: in std_logic := '0';
    P32EI5	: in std_logic := '0';
    P32EL	: in std_logic := '0';
    P32ER	: in std_logic := '0';
    P32EO	: out std_logic := '0';
    P32RI	: in std_logic := '0';
    P32RL	: in std_logic := '0';
    P32RR	: in std_logic := '0';
    P32RO1	: out std_logic := '0';
    P32RO2	: out std_logic := '0';
    P32RO3	: out std_logic := '0';
    P32RO4	: out std_logic := '0';
    P32RO5	: out std_logic := '0';

    P33CI1	: in std_logic := '0';
    P33CL	: in std_logic := '0';
    P33CR	: in std_logic := '0';
    P33CO	: out std_logic := '0';
    P33EI1	: in std_logic := '0';
    P33EI2	: in std_logic := '0';
    P33EI3	: in std_logic := '0';
    P33EI4	: in std_logic := '0';
    P33EI5	: in std_logic := '0';
    P33EL	: in std_logic := '0';
    P33ER	: in std_logic := '0';
    P33EO	: out std_logic := '0';
    P33RI	: in std_logic := '0';
    P33RL	: in std_logic := '0';
    P33RR	: in std_logic := '0';
    P33RO1	: out std_logic := '0';
    P33RO2	: out std_logic := '0';
    P33RO3	: out std_logic := '0';
    P33RO4	: out std_logic := '0';
    P33RO5	: out std_logic := '0';

    P34CI1	: in std_logic := '0';
    P34CL	: in std_logic := '0';
    P34CR	: in std_logic := '0';
    P34CO	: out std_logic := '0';
    P34EI1	: in std_logic := '0';
    P34EI2	: in std_logic := '0';
    P34EI3	: in std_logic := '0';
    P34EI4	: in std_logic := '0';
    P34EI5	: in std_logic := '0';
    P34EL	: in std_logic := '0';
    P34ER	: in std_logic := '0';
    P34EO	: out std_logic := '0';
    P34RI	: in std_logic := '0';
    P34RL	: in std_logic := '0';
    P34RR	: in std_logic := '0';
    P34RO1	: out std_logic := '0';
    P34RO2	: out std_logic := '0';
    P34RO3	: out std_logic := '0';
    P34RO4	: out std_logic := '0';
    P34RO5	: out std_logic := '0'
);
end component NX_IOM_L;

component NX_IOM_CONTROL is
generic (
    mode_side1   : integer := 0;
    sel_clkw_rx1 : bit_vector(1 downto 0) := "00";
    sel_clkr_rx1 : bit := '0';
    div_tx1      : bit_vector(3 downto 0) := "0000";
    div_rx1      : bit_vector(3 downto 0) := "0000";
    inv_di_fclk1 : bit := '0';
    latency1     : bit := '0';
    mode_side2   : integer := 0;
    sel_clkw_rx2 : bit_vector(1 downto 0) := "00";
    sel_clkr_rx2 : bit := '0';
    div_tx2      : bit_vector(3 downto 0) := "0000";
    div_rx2      : bit_vector(3 downto 0) := "0000";
    inv_di_fclk2 : bit := '0';
    latency2     : bit := '0';
    sel_clk_out1 : bit := '0';
    sel_clk_out2 : bit := '0';
    mode_rpath   : string := "";
    mode_epath   : string := "";
    mode_cpath   : string := "";
    mode_tpath   : string := "";
    mode_io_cal  : bit    := '0';
    location  : string    := ""
);
port (
    RTCK1	: in std_logic := '0';
    RRCK1	: in std_logic := '0';
    WTCK1	: in std_logic := '0';
    WRCK1	: in std_logic := '0';
    RTCK2	: in std_logic := '0';
    RRCK2	: in std_logic := '0';
    WTCK2	: in std_logic := '0';
    WRCK2	: in std_logic := '0';
    CTCK	: in std_logic := '0';

    C1TW	: in std_logic := '0';
    C1TS	: in std_logic := '0';
    C1RW1	: in std_logic := '0';
    C1RW2	: in std_logic := '0';
    C1RW3	: in std_logic := '0';
    C1RNE	: in std_logic := '0';
    C1RS	: in std_logic := '0';
    C2TW	: in std_logic := '0';
    C2TS	: in std_logic := '0';
    C2RW1	: in std_logic := '0';
    C2RW2	: in std_logic := '0';
    C2RW3	: in std_logic := '0';
    C2RNE	: in std_logic := '0';
    C2RS	: in std_logic := '0';
    FA1	: in std_logic := '0';
    FA2	: in std_logic := '0';
    FA3	: in std_logic := '0';
    FA4	: in std_logic := '0';
    FA5	: in std_logic := '0';
    FA6	: in std_logic := '0';
    FZ	: in std_logic := '0';
    DC	: in std_logic := '0';
    SE	: in std_logic := '0';
    SCI	: in std_logic := '0';
    SPI1	: in std_logic := '0';
    SPI2	: in std_logic := '0';
    SPI3	: in std_logic := '0';
    SPI4	: in std_logic := '0';
    SPI5	: in std_logic := '0';
    SPI6	: in std_logic := '0';
    CCK	: in std_logic := '0';
    DCK	: in std_logic := '0';
    DRI1	: in std_logic := '0';
    DRI2	: in std_logic := '0';
    DRI3	: in std_logic := '0';
    DRI4	: in std_logic := '0';
    DRI5	: in std_logic := '0';
    DRI6	: in std_logic := '0';
    DRA1	: in std_logic := '0';
    DRA2	: in std_logic := '0';
    DRA3	: in std_logic := '0';
    DRA4	: in std_logic := '0';
    DRA5	: in std_logic := '0';
    DRA6	: in std_logic := '0';
    DRL	: in std_logic := '0';
    DOS	: in std_logic := '0';
    DOG	: in std_logic := '0';
    DIS	: in std_logic := '0';
    DIG	: in std_logic := '0';
    DPAS	: in std_logic := '0';
    DPAG	: in std_logic := '0';
    DQSS	: in std_logic := '0';
    DQSG	: in std_logic := '0';
    DS1	: in std_logic := '0';
    DS2	: in std_logic := '0';
    CAD1	: in std_logic := '0';
    CAD2	: in std_logic := '0';
    CAD3	: in std_logic := '0';
    CAD4	: in std_logic := '0';
    CAD5	: in std_logic := '0';
    CAD6	: in std_logic := '0';
    CAP1	: in std_logic := '0';
    CAP2	: in std_logic := '0';
    CAP3	: in std_logic := '0';
    CAP4	: in std_logic := '0';
    CAN1	: in std_logic := '0';
    CAN2	: in std_logic := '0';
    CAN3	: in std_logic := '0';
    CAN4	: in std_logic := '0';
    CAT1	: in std_logic := '0';
    CAT2	: in std_logic := '0';
    CAT3	: in std_logic := '0';
    CAT4	: in std_logic := '0';

    FLD	: out std_logic := '0';
    FLG	: out std_logic := '0';
    C1RED	: out std_logic := '0';
    C2RED	: out std_logic := '0';
    DRO1	: out std_logic := '0';
    DRO2	: out std_logic := '0';
    DRO3	: out std_logic := '0';
    DRO4	: out std_logic := '0';
    DRO5	: out std_logic := '0';
    DRO6	: out std_logic := '0';
    DRE	: out std_logic := '0';
    DRR	: out std_logic := '0';
    SCO	: out std_logic := '0';
    SPO1	: out std_logic := '0';
    SPO2	: out std_logic := '0';
    SPO3	: out std_logic := '0';
    SPO4	: out std_logic := '0';
    SPO5	: out std_logic := '0';

    LINK1	: inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0) := (others => '0');
    LINK2	: inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0) := (others => '0');
    LINK3	: inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0) := (others => '0');
    LINK4	: inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0) := (others => '0');
    LINK5	: inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0) := (others => '0');
    LINK6	: inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0) := (others => '0');
    LINK7	: inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0) := (others => '0');
    LINK8	: inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0) := (others => '0');
    LINK9	: inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0) := (others => '0');
    LINK10	: inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0) := (others => '0');
    LINK11	: inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0) := (others => '0');
    LINK12	: inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0) := (others => '0');
    LINK13	: inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0) := (others => '0');
    LINK14	: inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0) := (others => '0');
    LINK15	: inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0) := (others => '0');
    LINK16	: inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0) := (others => '0');
    LINK17	: inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0) := (others => '0');
    LINK18	: inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0) := (others => '0');
    LINK19	: inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0) := (others => '0');
    LINK20	: inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0) := (others => '0');
    LINK21	: inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0) := (others => '0');
    LINK22	: inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0) := (others => '0');
    LINK23	: inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0) := (others => '0');
    LINK24	: inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0) := (others => '0');
    LINK25	: inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0) := (others => '0');
    LINK26	: inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0) := (others => '0');
    LINK27	: inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0) := (others => '0');
    LINK28	: inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0) := (others => '0');
    LINK29	: inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0) := (others => '0');
    LINK30	: inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0) := (others => '0');
    LINK31	: inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0) := (others => '0');
    LINK32	: inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0) := (others => '0');
    LINK33	: inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0) := (others => '0');
    LINK34	: inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0) := (others => '0')
);
end component NX_IOM_CONTROL;

component NX_IOM_DRIVER is
generic (
    epath_edge      : bit := '0';
    epath_init      : bit := '0';
    epath_load      : bit := '0';
    epath_mode      : bit_vector(3 downto 0) := "0000";
    epath_sync      : bit := '0';
    epath_dynamic   : bit := '0'; --0: off/fixed delay, 1: dynamic delay

    rpath_edge      : bit := '0';
    rpath_init      : bit := '0';
    rpath_load      : bit := '0';
    rpath_mode      : bit_vector(3 downto 0) := "0000";
    rpath_sync      : bit := '0';
    rpath_dynamic   : bit := '0'; --0: off/fixed delay, 1: dynamic delay

    cpath_edge      : bit := '0';
    cpath_init      : bit := '0';
    cpath_load      : bit := '0';
    cpath_mode      : bit_vector(3 downto 0) := "0000";
    cpath_sync      : bit := '0';
    cpath_inv       : bit := '0';

    tpath_mode      : bit_vector(1 downto 0) := "00";

    location        : string := "";
    chained         : bit    := '0';
    symbol          : string := ""
);
port (
    EI1	: in std_logic := '0';
    EI2	: in std_logic := '0';
    EI3	: in std_logic := '0';
    EI4	: in std_logic := '0';
    EI5	: in std_logic := '0';
    EL	: in std_logic := '0';
    ER	: in std_logic := '0';
    CI1	: in std_logic := '0';
    CI2	: in std_logic := '0';
    CI3	: in std_logic := '0';
    CI4	: in std_logic := '0';
    CI5	: in std_logic := '0';
    CL	: in std_logic := '0';
    CR	: in std_logic := '0';
    CT	: in std_logic := '0';
    RI	: in std_logic := '0';
    RL	: in std_logic := '0';
    RR	: in std_logic := '0';
    CO	: out std_logic := '0';
    EO	: out std_logic := '0';
    RO1	: out std_logic := '0';
    RO2	: out std_logic := '0';
    RO3	: out std_logic := '0';
    RO4	: out std_logic := '0';
    RO5	: out std_logic := '0';
    LINK	: inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0) := (others => '0')
);
end component NX_IOM_DRIVER;

component NX_IOM_SERDES is
generic (
    data_size : integer range 2 to 10 := 5;
    location  : string := ""
);
port (
    RTCK	: in std_logic := '0';
    WRCK	: in std_logic := '0';
    WTCK	: in std_logic := '0';
    RRCK	: in std_logic := '0';
    TRST	: in std_logic := '0';
    RRST	: in std_logic := '0';
    CTCK	: in std_logic := '0';
    CL	: in std_logic := '0';
    CR	: in std_logic := '0';
    DCK	: in std_logic := '0';
    DRL	: in std_logic := '0';
    DIG	: in std_logic := '0';
    DS	: in std_logic_vector(1 downto 0) := (others => '0');
    DRA	: in std_logic_vector(5 downto 0) := (others => '0');
    DRI	: in std_logic_vector(5 downto 0) := (others => '0');
    FZ	: in std_logic := '0';
    DRO	: out std_logic_vector(5 downto 0) := (others => '0');
    DID	: out std_logic_vector(5 downto 0) := (others => '0');
    FLD	: out std_logic := '0';
    FLG	: out std_logic := '0';
    LINKN	: inout std_logic_vector(IOM_LINK_SIZE-1 downto 0) := (others => '0');
    LINKP	: inout std_logic_vector(IOM_LINK_SIZE-1 downto 0) := (others => '0')
);
end component NX_IOM_SERDES;

component NX_LUT is
generic (
    lut_table : bit_vector(15 downto 0) := B"0000000000000000" -- truthTable t15 ... t0
);
port (
    I1	: in std_logic := '0';
    I2	: in std_logic := '0';
    I3	: in std_logic := '0';
    I4	: in std_logic := '0';
    O	: out std_logic := '0'
);
end component NX_LUT;

component NX_DFF is
generic (
    dff_edge   : bit := '0';
    dff_init   : bit := '0';
    dff_load   : bit := '0';
    dff_sync   : bit := '0';
    dff_ctxt   : std_logic := 'U'
);
port (
    I	: in std_logic := '0';
    CK	: in std_logic := '0';
    L	: in std_logic := '0';
    R	: in std_logic := '0';
    O	: out std_logic := '0'
);
end component NX_DFF;

component NX_BFF is
port (
    I	: in std_logic := '0';
    O	: out std_logic := '0'
);
end component NX_BFF;

component NX_DFR is
generic (
    location   : string := "";
    path       : integer := 0;
    mode       : integer := 0;
    dff_edge   : bit := '0';
    dff_init   : bit := '0';
    dff_load   : bit := '0';
    dff_sync   : bit := '0'
);
port (
    I	: in std_logic := '0';
    CK	: in std_logic := '0';
    L	: in std_logic := '0';
    R	: in std_logic := '0';
    O	: out std_logic := '0'
);
end component NX_DFR;

component NX_BFR is
generic (
    location   : string := "";
    path       : integer := 0;
    mode       : integer := 0
);
port (
    I	: in std_logic := '0';
    O	: out std_logic := '0'
);
end component NX_BFR;

component NX_CY is
generic (
    add_carry  : integer := 0      -- 0: low - 1: high - 2: propagate
);
port (
    A1	: in std_logic := '0';
    A2	: in std_logic := '0';
    A3	: in std_logic := '0';
    A4	: in std_logic := '0';
    B1	: in std_logic := '0';
    B2	: in std_logic := '0';
    B3	: in std_logic := '0';
    B4	: in std_logic := '0';
    CI	: in std_logic := '0';
    CO	: out std_logic := '0';
    S1	: out std_logic := '0';
    S2	: out std_logic := '0';
    S3	: out std_logic := '0';
    S4	: out std_logic := '0'
);
end component NX_CY;

component NX_RFB_L is
generic (
    rck_edge  : bit := '0';   -- 0: read clock rising edge - 1: read clock falling edge
    wck_edge  : bit := '0';   -- 0: write clock rising edge - 1: write clock falling edge
    mem_ctxt  : string := "" -- memory initial context
);
port (
    RCK	: in std_logic := '0';
    WCK	: in std_logic := '0';
    I1	: in std_logic := '0';
    I2	: in std_logic := '0';
    I3	: in std_logic := '0';
    I4	: in std_logic := '0';
    I5	: in std_logic := '0';
    I6	: in std_logic := '0';
    I7	: in std_logic := '0';
    I8	: in std_logic := '0';
    I9	: in std_logic := '0';
    I10	: in std_logic := '0';
    I11	: in std_logic := '0';
    I12	: in std_logic := '0';
    I13	: in std_logic := '0';
    I14	: in std_logic := '0';
    I15	: in std_logic := '0';
    I16	: in std_logic := '0';
    COR	: out std_logic := '0';
    ERR	: out std_logic := '0';
    O1	: out std_logic := '0';
    O2	: out std_logic := '0';
    O3	: out std_logic := '0';
    O4	: out std_logic := '0';
    O5	: out std_logic := '0';
    O6	: out std_logic := '0';
    O7	: out std_logic := '0';
    O8	: out std_logic := '0';
    O9	: out std_logic := '0';
    O10	: out std_logic := '0';
    O11	: out std_logic := '0';
    O12	: out std_logic := '0';
    O13	: out std_logic := '0';
    O14	: out std_logic := '0';
    O15	: out std_logic := '0';
    O16	: out std_logic := '0';
    RA1	: in std_logic := '0';
    RA2	: in std_logic := '0';
    RA3	: in std_logic := '0';
    RA4	: in std_logic := '0';
    RA5	: in std_logic := '0';
    RA6	: in std_logic := '0';
    RE	: in std_logic := '0';
    WA1	: in std_logic := '0';
    WA2	: in std_logic := '0';
    WA3	: in std_logic := '0';
    WA4	: in std_logic := '0';
    WA5	: in std_logic := '0';
    WA6	: in std_logic := '0';
    WE	: in std_logic := '0';
    XRCK	: out std_logic := '0';
    XRO1	: out std_logic := '0';
    XRO2	: out std_logic := '0';
    XRO3	: out std_logic := '0';
    XRO4	: out std_logic := '0';
    XRO5	: out std_logic := '0';
    XRO6	: out std_logic := '0';
    XWCK	: out std_logic := '0';
    XWO1	: out std_logic := '0';
    XWO2	: out std_logic := '0';
    XWO3	: out std_logic := '0';
    XWO4	: out std_logic := '0';
    XWO5	: out std_logic := '0';
    XWO6	: out std_logic := '0'
);
end component NX_RFB_L;

component NX_RFB_L_WRAP is
generic (
    rck_edge  : bit := '0';   -- 0: read clock rising edge - 1: read clock falling edge
    wck_edge  : bit := '0';   -- 0: write clock rising edge - 1: write clock falling edge
    mem_ctxt  : string := "" -- memory initial context
);
port (
    RCK	: in std_logic := '0';
    WCK	: in std_logic := '0';
    I	: in std_logic_vector(15 downto 0) := (others => '0');
    COR	: out std_logic := '0';
    ERR	: out std_logic := '0';
    O	: out std_logic_vector(15 downto 0) := (others => '0');
    RA	: in std_logic_vector(5 downto 0) := (others => '0');
    RE	: in std_logic := '0';
    WA	: in std_logic_vector(5 downto 0) := (others => '0');
    WE	: in std_logic := '0';
    XRCK	: out std_logic := '0';
    XRO	: out std_logic_vector(5 downto 0) := (others => '0');
    XWCK	: out std_logic := '0';
    XWO	: out std_logic_vector(5 downto 0) := (others => '0')
);
end component NX_RFB_L_WRAP;

component NX_CKS is
port (
    CKI	: in std_logic := '0';
    CMD	: in std_logic := '0';
    CKO	: out std_logic := '0'
);
end component NX_CKS;

component NX_DSP_L is
generic (
    std_mode    : string := ""; -- standard mode [ADD36, SUB36, SMUL18, UMUL18, ...] empty for raw
    raw_config0 : bit_vector(19 downto 0) := B"00000000000000000000";   -- MUX
    raw_config1 : bit_vector(18 downto 0) := B"0000000000000000000";    -- PRC
    raw_config2 : bit_vector(12 downto 0) := B"0000000000000";          -- PRR
    raw_config3 : bit_vector( 6 downto 0) := B"0000000"                 -- ALU
);
port (
    A1	: in std_logic := '0';
    A2	: in std_logic := '0';
    A3	: in std_logic := '0';
    A4	: in std_logic := '0';
    A5	: in std_logic := '0';
    A6	: in std_logic := '0';
    A7	: in std_logic := '0';
    A8	: in std_logic := '0';
    A9	: in std_logic := '0';
    A10	: in std_logic := '0';
    A11	: in std_logic := '0';
    A12	: in std_logic := '0';
    A13	: in std_logic := '0';
    A14	: in std_logic := '0';
    A15	: in std_logic := '0';
    A16	: in std_logic := '0';
    A17	: in std_logic := '0';
    A18	: in std_logic := '0';
    A19	: in std_logic := '0';
    A20	: in std_logic := '0';
    A21	: in std_logic := '0';
    A22	: in std_logic := '0';
    A23	: in std_logic := '0';
    A24	: in std_logic := '0';

    B1	: in std_logic := '0';
    B2	: in std_logic := '0';
    B3	: in std_logic := '0';
    B4	: in std_logic := '0';
    B5	: in std_logic := '0';
    B6	: in std_logic := '0';
    B7	: in std_logic := '0';
    B8	: in std_logic := '0';
    B9	: in std_logic := '0';
    B10	: in std_logic := '0';
    B11	: in std_logic := '0';
    B12	: in std_logic := '0';
    B13	: in std_logic := '0';
    B14	: in std_logic := '0';
    B15	: in std_logic := '0';
    B16	: in std_logic := '0';
    B17	: in std_logic := '0';
    B18	: in std_logic := '0';

    C1	: in std_logic := '0';
    C2	: in std_logic := '0';
    C3	: in std_logic := '0';
    C4	: in std_logic := '0';
    C5	: in std_logic := '0';
    C6	: in std_logic := '0';
    C7	: in std_logic := '0';
    C8	: in std_logic := '0';
    C9	: in std_logic := '0';
    C10	: in std_logic := '0';
    C11	: in std_logic := '0';
    C12	: in std_logic := '0';
    C13	: in std_logic := '0';
    C14	: in std_logic := '0';
    C15	: in std_logic := '0';
    C16	: in std_logic := '0';
    C17	: in std_logic := '0';
    C18	: in std_logic := '0';
    C19	: in std_logic := '0';
    C20	: in std_logic := '0';
    C21	: in std_logic := '0';
    C22	: in std_logic := '0';
    C23	: in std_logic := '0';
    C24	: in std_logic := '0';
    C25	: in std_logic := '0';
    C26	: in std_logic := '0';
    C27	: in std_logic := '0';
    C28	: in std_logic := '0';
    C29	: in std_logic := '0';
    C30	: in std_logic := '0';
    C31	: in std_logic := '0';
    C32	: in std_logic := '0';
    C33	: in std_logic := '0';
    C34	: in std_logic := '0';
    C35	: in std_logic := '0';
    C36	: in std_logic := '0';

    CAI1	: in std_logic := '0';
    CAI2	: in std_logic := '0';
    CAI3	: in std_logic := '0';
    CAI4	: in std_logic := '0';
    CAI5	: in std_logic := '0';
    CAI6	: in std_logic := '0';
    CAI7	: in std_logic := '0';
    CAI8	: in std_logic := '0';
    CAI9	: in std_logic := '0';
    CAI10	: in std_logic := '0';
    CAI11	: in std_logic := '0';
    CAI12	: in std_logic := '0';
    CAI13	: in std_logic := '0';
    CAI14	: in std_logic := '0';
    CAI15	: in std_logic := '0';
    CAI16	: in std_logic := '0';
    CAI17	: in std_logic := '0';
    CAI18	: in std_logic := '0';
    CAI19	: in std_logic := '0';
    CAI20	: in std_logic := '0';
    CAI21	: in std_logic := '0';
    CAI22	: in std_logic := '0';
    CAI23	: in std_logic := '0';
    CAI24	: in std_logic := '0';

    CAO1	: out std_logic := '0';
    CAO2	: out std_logic := '0';
    CAO3	: out std_logic := '0';
    CAO4	: out std_logic := '0';
    CAO5	: out std_logic := '0';
    CAO6	: out std_logic := '0';
    CAO7	: out std_logic := '0';
    CAO8	: out std_logic := '0';
    CAO9	: out std_logic := '0';
    CAO10	: out std_logic := '0';
    CAO11	: out std_logic := '0';
    CAO12	: out std_logic := '0';
    CAO13	: out std_logic := '0';
    CAO14	: out std_logic := '0';
    CAO15	: out std_logic := '0';
    CAO16	: out std_logic := '0';
    CAO17	: out std_logic := '0';
    CAO18	: out std_logic := '0';
    CAO19	: out std_logic := '0';
    CAO20	: out std_logic := '0';
    CAO21	: out std_logic := '0';
    CAO22	: out std_logic := '0';
    CAO23	: out std_logic := '0';
    CAO24	: out std_logic := '0';

    CBI1	: in std_logic := '0';
    CBI2	: in std_logic := '0';
    CBI3	: in std_logic := '0';
    CBI4	: in std_logic := '0';
    CBI5	: in std_logic := '0';
    CBI6	: in std_logic := '0';
    CBI7	: in std_logic := '0';
    CBI8	: in std_logic := '0';
    CBI9	: in std_logic := '0';
    CBI10	: in std_logic := '0';
    CBI11	: in std_logic := '0';
    CBI12	: in std_logic := '0';
    CBI13	: in std_logic := '0';
    CBI14	: in std_logic := '0';
    CBI15	: in std_logic := '0';
    CBI16	: in std_logic := '0';
    CBI17	: in std_logic := '0';
    CBI18	: in std_logic := '0';

    CBO1	: out std_logic := '0';
    CBO2	: out std_logic := '0';
    CBO3	: out std_logic := '0';
    CBO4	: out std_logic := '0';
    CBO5	: out std_logic := '0';
    CBO6	: out std_logic := '0';
    CBO7	: out std_logic := '0';
    CBO8	: out std_logic := '0';
    CBO9	: out std_logic := '0';
    CBO10	: out std_logic := '0';
    CBO11	: out std_logic := '0';
    CBO12	: out std_logic := '0';
    CBO13	: out std_logic := '0';
    CBO14	: out std_logic := '0';
    CBO15	: out std_logic := '0';
    CBO16	: out std_logic := '0';
    CBO17	: out std_logic := '0';
    CBO18	: out std_logic := '0';

    CCI	: in std_logic := '0';
    CCO	: out std_logic := '0';
    CI	: in std_logic := '0';
    CK	: in std_logic := '0';
    CO	: out std_logic := '0';
    CO37	: out std_logic := '0';
    CO57	: out std_logic := '0';

    CZI1	: in std_logic := '0';
    CZI2	: in std_logic := '0';
    CZI3	: in std_logic := '0';
    CZI4	: in std_logic := '0';
    CZI5	: in std_logic := '0';
    CZI6	: in std_logic := '0';
    CZI7	: in std_logic := '0';
    CZI8	: in std_logic := '0';
    CZI9	: in std_logic := '0';
    CZI10	: in std_logic := '0';
    CZI11	: in std_logic := '0';
    CZI12	: in std_logic := '0';
    CZI13	: in std_logic := '0';
    CZI14	: in std_logic := '0';
    CZI15	: in std_logic := '0';
    CZI16	: in std_logic := '0';
    CZI17	: in std_logic := '0';
    CZI18	: in std_logic := '0';
    CZI19	: in std_logic := '0';
    CZI20	: in std_logic := '0';
    CZI21	: in std_logic := '0';
    CZI22	: in std_logic := '0';
    CZI23	: in std_logic := '0';
    CZI24	: in std_logic := '0';
    CZI25	: in std_logic := '0';
    CZI26	: in std_logic := '0';
    CZI27	: in std_logic := '0';
    CZI28	: in std_logic := '0';
    CZI29	: in std_logic := '0';
    CZI30	: in std_logic := '0';
    CZI31	: in std_logic := '0';
    CZI32	: in std_logic := '0';
    CZI33	: in std_logic := '0';
    CZI34	: in std_logic := '0';
    CZI35	: in std_logic := '0';
    CZI36	: in std_logic := '0';
    CZI37	: in std_logic := '0';
    CZI38	: in std_logic := '0';
    CZI39	: in std_logic := '0';
    CZI40	: in std_logic := '0';
    CZI41	: in std_logic := '0';
    CZI42	: in std_logic := '0';
    CZI43	: in std_logic := '0';
    CZI44	: in std_logic := '0';
    CZI45	: in std_logic := '0';
    CZI46	: in std_logic := '0';
    CZI47	: in std_logic := '0';
    CZI48	: in std_logic := '0';
    CZI49	: in std_logic := '0';
    CZI50	: in std_logic := '0';
    CZI51	: in std_logic := '0';
    CZI52	: in std_logic := '0';
    CZI53	: in std_logic := '0';
    CZI54	: in std_logic := '0';
    CZI55	: in std_logic := '0';
    CZI56	: in std_logic := '0';

    CZO1	: out std_logic := '0';
    CZO2	: out std_logic := '0';
    CZO3	: out std_logic := '0';
    CZO4	: out std_logic := '0';
    CZO5	: out std_logic := '0';
    CZO6	: out std_logic := '0';
    CZO7	: out std_logic := '0';
    CZO8	: out std_logic := '0';
    CZO9	: out std_logic := '0';
    CZO10	: out std_logic := '0';
    CZO11	: out std_logic := '0';
    CZO12	: out std_logic := '0';
    CZO13	: out std_logic := '0';
    CZO14	: out std_logic := '0';
    CZO15	: out std_logic := '0';
    CZO16	: out std_logic := '0';
    CZO17	: out std_logic := '0';
    CZO18	: out std_logic := '0';
    CZO19	: out std_logic := '0';
    CZO20	: out std_logic := '0';
    CZO21	: out std_logic := '0';
    CZO22	: out std_logic := '0';
    CZO23	: out std_logic := '0';
    CZO24	: out std_logic := '0';
    CZO25	: out std_logic := '0';
    CZO26	: out std_logic := '0';
    CZO27	: out std_logic := '0';
    CZO28	: out std_logic := '0';
    CZO29	: out std_logic := '0';
    CZO30	: out std_logic := '0';
    CZO31	: out std_logic := '0';
    CZO32	: out std_logic := '0';
    CZO33	: out std_logic := '0';
    CZO34	: out std_logic := '0';
    CZO35	: out std_logic := '0';
    CZO36	: out std_logic := '0';
    CZO37	: out std_logic := '0';
    CZO38	: out std_logic := '0';
    CZO39	: out std_logic := '0';
    CZO40	: out std_logic := '0';
    CZO41	: out std_logic := '0';
    CZO42	: out std_logic := '0';
    CZO43	: out std_logic := '0';
    CZO44	: out std_logic := '0';
    CZO45	: out std_logic := '0';
    CZO46	: out std_logic := '0';
    CZO47	: out std_logic := '0';
    CZO48	: out std_logic := '0';
    CZO49	: out std_logic := '0';
    CZO50	: out std_logic := '0';
    CZO51	: out std_logic := '0';
    CZO52	: out std_logic := '0';
    CZO53	: out std_logic := '0';
    CZO54	: out std_logic := '0';
    CZO55	: out std_logic := '0';
    CZO56	: out std_logic := '0';

    D1	: in std_logic := '0';
    D2	: in std_logic := '0';
    D3	: in std_logic := '0';
    D4	: in std_logic := '0';
    D5	: in std_logic := '0';
    D6	: in std_logic := '0';
    D7	: in std_logic := '0';
    D8	: in std_logic := '0';
    D9	: in std_logic := '0';
    D10	: in std_logic := '0';
    D11	: in std_logic := '0';
    D12	: in std_logic := '0';
    D13	: in std_logic := '0';
    D14	: in std_logic := '0';
    D15	: in std_logic := '0';
    D16	: in std_logic := '0';
    D17	: in std_logic := '0';
    D18	: in std_logic := '0';

    OVF	: out std_logic := '0';
    R	: in std_logic := '0';
    RZ	: in std_logic := '0';
    WE	: in std_logic := '0';

    Z1	: out std_logic := '0';
    Z2	: out std_logic := '0';
    Z3	: out std_logic := '0';
    Z4	: out std_logic := '0';
    Z5	: out std_logic := '0';
    Z6	: out std_logic := '0';
    Z7	: out std_logic := '0';
    Z8	: out std_logic := '0';
    Z9	: out std_logic := '0';
    Z10	: out std_logic := '0';
    Z11	: out std_logic := '0';
    Z12	: out std_logic := '0';
    Z13	: out std_logic := '0';
    Z14	: out std_logic := '0';
    Z15	: out std_logic := '0';
    Z16	: out std_logic := '0';
    Z17	: out std_logic := '0';
    Z18	: out std_logic := '0';
    Z19	: out std_logic := '0';
    Z20	: out std_logic := '0';
    Z21	: out std_logic := '0';
    Z22	: out std_logic := '0';
    Z23	: out std_logic := '0';
    Z24	: out std_logic := '0';
    Z25	: out std_logic := '0';
    Z26	: out std_logic := '0';
    Z27	: out std_logic := '0';
    Z28	: out std_logic := '0';
    Z29	: out std_logic := '0';
    Z30	: out std_logic := '0';
    Z31	: out std_logic := '0';
    Z32	: out std_logic := '0';
    Z33	: out std_logic := '0';
    Z34	: out std_logic := '0';
    Z35	: out std_logic := '0';
    Z36	: out std_logic := '0';
    Z37	: out std_logic := '0';
    Z38	: out std_logic := '0';
    Z39	: out std_logic := '0';
    Z40	: out std_logic := '0';
    Z41	: out std_logic := '0';
    Z42	: out std_logic := '0';
    Z43	: out std_logic := '0';
    Z44	: out std_logic := '0';
    Z45	: out std_logic := '0';
    Z46	: out std_logic := '0';
    Z47	: out std_logic := '0';
    Z48	: out std_logic := '0';
    Z49	: out std_logic := '0';
    Z50	: out std_logic := '0';
    Z51	: out std_logic := '0';
    Z52	: out std_logic := '0';
    Z53	: out std_logic := '0';
    Z54	: out std_logic := '0';
    Z55	: out std_logic := '0';
    Z56	: out std_logic := '0'
);
end component NX_DSP_L;

component NX_DSP_L_WRAP is
generic (
    std_mode    : string := "";
    raw_config0 : bit_vector(19 downto 0) := B"00000000000000000000";        -- MUX
    raw_config1 : bit_vector(18 downto 0) := B"0000000000000000000";         -- PRC
    raw_config2 : bit_vector(12 downto 0) := B"0000000000000";               -- PRR
    raw_config3 : bit_vector( 6 downto 0) := B"0000000"                      -- ALU
);
port (
    A	: in std_logic_vector(23 downto 0) := (others => '0');
    B	: in std_logic_vector(17 downto 0) := (others => '0');
    C	: in std_logic_vector(35 downto 0) := (others => '0');

    CAI	: in std_logic_vector(23 downto 0) := (others => '0');
    CAO	: out std_logic_vector(23 downto 0) := (others => '0');
    CBI	: in std_logic_vector(17 downto 0) := (others => '0');
    CBO	: out std_logic_vector(17 downto 0) := (others => '0');

    CCI	: in std_logic := '0';
    CCO	: out std_logic := '0';
    CI	: in std_logic := '0';
    CK	: in std_logic := '0';
    CO	: out std_logic := '0';
    CO37	: out std_logic := '0';
    CO57	: out std_logic := '0';

    CZI	: in std_logic_vector(55 downto 0) := (others => '0');
    CZO	: out std_logic_vector(55 downto 0) := (others => '0');

    D	: in std_logic_vector(17 downto 0) := (others => '0');

    OVF	: out std_logic := '0';
    R	: in std_logic := '0';
    RZ	: in std_logic := '0';
    WE	: in std_logic := '0';

    Z	: out std_logic_vector(55 downto 0) := (others => '0')
);
end component NX_DSP_L_WRAP;

component NX_DSP_L_SPLIT is
generic (
-------------------------------------------------------------------------
-- Generic declaration to define the "raw_config0" (cfg_mode). Defines :
------------------------------------------------------------------------- 
   SIGNED_MODE          : bit                    := '0';
   PRE_ADDER_OP         : bit                    := '0';       -- '0' = Additon, '1' = Subraction
   MUX_A                : bit                    := '0';       -- '0' = A input, '1' = CAI input
   MUX_B                : bit                    := '0';       -- '0' = B input, '1' = CBI input
   MUX_P                : bit                    := '0';       -- '0' for PRE_ADDER, '0' for B input
   MUX_X                : bit_vector(1 downto 0) := B"00";     -- Select X operand   "00" = C,
                                                               --                    "01" = CZI,
                                                               --                    "11" = SHFT(CZI) & C(11:0),
                                                               --                    "10" Select Z feedback
   MUX_Y                : bit                    := '0';       -- '0' Select MULT output, '1' for (B & A)
   MUX_CI               : bit                    := '0';       -- Select fabric input (not cascade)
   MUX_Z                : bit                    := '0';       -- Select ALU output
                                                               -- (not ALU input operand coming from PR_Y)

   Z_FEEDBACK_SHL12     : bit                    := '0';       -- '0' for No shift, '1' for 12-bit left shift
   ENABLE_SATURATION    : bit                    := '0';       -- '0' for Disable,  '1' for Enable
   SATURATION_RANK      : bit_vector(5 downto 0) := B"000000"; -- Weight of useful MSB
                                                               --        on Z and CZO result
                                                               --(to define saturation and overflow)

   ALU_DYNAMIC_OP       : bit                    := '0';       -- '0' for Static,
                                                               -- '1' for Dynamic
                                                               -- (D6 ... D1 is not used for dynamic operation)
   CO_SEL               : bit                    := '0';       -- '0' for C0 = ALU(36), '1' for CO = ALU(48)

-------------------------------------------------------------------------
-- Generic declaration to define the "raw_config1" (cfg_pipe_mux)
-------------------------------------------------------------------------
   PR_A_MUX                : bit_vector(1 downto 0) := B"00"; -- Number of pipe reg levels
                                                              --        on A input
   PR_A_CASCADE_MUX        : bit_vector(1 downto 0) := B"00"; -- Number of pipe reg levels
                                                              --        for CAO output
   PR_B_MUX                : bit_vector(1 downto 0) := B"00"; -- Number of pipe reg levels
                                                              --        on B input
   PR_B_CASCADE_MUX        : bit_vector(1 downto 0) := B"00"; -- Number of pipe reg levels
                                                              --        for CAO output

   PR_C_MUX                : bit                    := '0';   -- '0' for No pipe reg, '1' for 1 pipe reg
   PR_D_MUX                : bit                    := '0';   -- '0' for No pipe reg, '1' for 1 pipe reg
   PR_CI_MUX               : bit                    := '0';   -- '0' for No pipe reg, '1' for 1 pipe reg
   PR_P_MUX                : bit                    := '0';   -- '0' for No pipe reg, '1' for 1 pipe reg (Pre-adder)
   PR_X_MUX                : bit                    := '0';   -- '0' for No pipe reg, '1' for 1 pipe reg
   PR_Y_MUX                : bit                    := '0';   -- '0' for No pipe reg, '1' for 1 pipe reg

   PR_MULT_MUX             : bit                    := '0';   -- No pipe reg  -- Register inside MULT
   PR_ALU_MUX              : bit                    := '0';   -- No pipe reg  -- Register inside ALU
   PR_Z_MUX                : bit                    := '0';   -- Registered output

   PR_CO_MUX               : bit                    := '0';   -- '0' for No pipe reg, '1' for 1 pipe reg
   PR_OV_MUX               : bit                    := '0';   -- '0' for No pipe reg, '1' for 1 pipe reg

-------------------------------------------------------------------------
-- Generic declaration to define the "raw_config2" (cfg_pipe_rst)
-------------------------------------------------------------------------
   ENABLE_PR_A_RST         : bit                    := '0';   -- '0' for Disable, '1' for Enable 
   ENABLE_PR_B_RST         : bit                    := '0';   -- '0' for Disable, '1' for Enable 
   ENABLE_PR_C_RST         : bit                    := '0';   -- '0' for Disable, '1' for Enable 
   ENABLE_PR_D_RST         : bit                    := '0';   -- '0' for Disable, '1' for Enable 
   ENABLE_PR_CI_RST        : bit                    := '0';   -- '0' for Disable, '1' for Enable 
   ENABLE_PR_P_RST         : bit                    := '0';   -- '0' for Disable, '1' for Enable 
   ENABLE_PR_X_RST         : bit                    := '0';   -- '0' for Disable, '1' for Enable 
   ENABLE_PR_Y_RST         : bit                    := '0';   -- '0' for Disable, '1' for Enable 
   ENABLE_PR_MULT_RST      : bit                    := '0';   -- '0' for Disable, '1' for Enable 
   ENABLE_PR_ALU_RST       : bit                    := '0';   -- '0' for Disable, '1' for Enable 
   ENABLE_PR_Z_RST         : bit                    := '0';   -- '0' for Disable, '1' for Enable 
   ENABLE_PR_CO_RST        : bit                    := '0';   -- '0' for Disable, '1' for Enable 
   ENABLE_PR_OV_RST        : bit                    := '0';   -- '0' for Disable, '1' for Enable 

-------------------------------------------------------------------------
-- Constants declaration to define the "cfg_pipe_rst" -- raw_config3(6 downto 0)
-------------------------------------------------------------------------
   ALU_OP                  : bit_vector(5 downto 0) := B"000000"; -- Addition = "000000", Subtract = "001010"
   ALU_MUX                 : bit                    := '0'        -- '0' for Don't swap ALU operands,
                                                                  -- '1' for ALU Swap operands
    );
port (
    CK	: IN std_logic := '0';
    R	: IN std_logic := '0';
    RZ	: IN std_logic := '0';
    WE	: IN std_logic := '0';

    CI	: IN std_logic := '0';
    A	: IN std_logic_vector(23 downto 0) := (others => '0');
    B	: IN std_logic_vector(17 downto 0) := (others => '0');
    C	: IN std_logic_vector(35 downto 0) := (others => '0');
    D	: IN std_logic_vector(17 downto 0) := (others => '0');
    CAI	: IN std_logic_vector(23 downto 0) := (others => '0');
    CBI	: IN std_logic_vector(17 downto 0) := (others => '0');
    CZI	: IN std_logic_vector(55 downto 0) := (others => '0');
    CCI	: IN std_logic := '0';

    Z	: out std_logic_vector(55 downto 0) := (others => '0');
    CO	: OUT std_logic := '0';
    CO36	: OUT std_logic := '0';
    CO56	: OUT std_logic := '0';
    OVF	: OUT std_logic := '0';
    CAO	: OUT std_logic_vector(23 downto 0) := (others => '0');
    CBO	: OUT std_logic_vector(17 downto 0) := (others => '0');
    CZO	: OUT std_logic_vector(55 downto 0) := (others => '0');
    CCO	: OUT std_logic := '0'
  );
end component NX_DSP_L_SPLIT;

-- beware following components are only intended for internal use. Do not try to instantiate them.
component NX_BUFFER is
port (
    I	: in std_logic := '0';
    O	: out std_logic := '0'
);
end component NX_BUFFER;

component NX_CSC is
port (
    I	: in std_logic := '0';
    O	: out std_logic := '0'
);
end component NX_CSC;

component NX_SCC is
port (
    I	: in std_logic := '0';
    O	: out std_logic := '0'
);
end component NX_SCC;

component NX_syn_tp is
port (
    I	: in std_logic := '0'
);
end component NX_syn_tp;

component NX_BD is
generic (
    system: bit := '1'
);
port (
    I	: in std_logic := '0';
    O	: out std_logic := '0'
);
end component NX_BD;

component NX_SER is
generic (
    data_size            : integer range 2 to 10 := 5;	-- Number of serialization factor
    location             : string := "";		-- Pad location
    standard             : string := "";		-- Pad electrical standard
    drive                : string := "";		-- Pad electrical drive
    differential         : string := "";		-- Single ended ("0") or differential ("1")
    slewRate             : string := "";		-- Slow, Medium or Fast
    outputDelayLine      : string := "";		-- "0_to_63_delay_value"
    outputCapacity       : string := "";		-- 0 to 40 (value in pF)
    -- Delay Control
    spath_dynamic        : bit := '0'			-- 0: off/fixed delay, 1: dynamic delay

);
port (
    FCK	: in std_logic := '0';
    SCK	: in std_logic := '0';
    R	: in std_logic := '0';
    I	: in std_logic_vector(data_size - 1 downto 0) := (others => '0');
    IO	: out std_logic := '0';
    -- Delay Control
    DCK	: in std_logic := '0';
    DRL	: in std_logic := '0';
    DS	: in std_logic_vector(1 downto 0) := (others => '0');
    DRA	: in std_logic_vector(5 downto 0) := (others => '0');
    DRI	: in std_logic_vector(5 downto 0) := (others => '0');
    DRO	: out std_logic_vector(5 downto 0) := (others => '0');
    DID	: out std_logic_vector(5 downto 0) := (others => '0')
);
end component NX_SER;

component NX_DES is
generic (
    data_size            : integer range 2 to 10 := 5;	-- -- Pad locationNumber of deserialization factor
    location             : string := "";		-- Pad location
    standard             : string := "";		-- Pad electrical standard
    drive                : string := "";		-- Pad electrical drive
    differential         : string := "";		-- Single ended ("0") or differential ("1")
    termination          : string := "";		-- Input impedance adaptatio    terminationReference : string := "";
    terminationReference : string := "";		-- "floating" or "VTT"
    turbo                : string := "";		-- Input impedance adaptation
    weakTermination      : string := "";		-- "floating" or "VTT"
    inputDelayLine       : string := "";		-- "0_to_63_delay_value"
    inputSignalSlope     : string := "";		-- Decimal value "0.5" to "20" (value in V/ns)
    -- Delay Control
    dpath_dynamic        : bit := '0'			-- 0: off/fixed delay, 1: dynamic delay

);
port (
    FCK	: in std_logic := '0';
    SCK	: in std_logic := '0';
    R	: in std_logic := '0';
    IO	: in std_logic := '0';
    O	: out std_logic_vector(data_size - 1 downto 0) := (others => '0');
    -- Delay Control
    DCK	: in std_logic := '0';
    DRL	: in std_logic := '0';
    DIG	: in std_logic := '0';
    DS	: in std_logic_vector(1 downto 0) := (others => '0');
    DRA	: in std_logic_vector(5 downto 0) := (others => '0');
    DRI	: in std_logic_vector(5 downto 0) := (others => '0');
    FZ	: in std_logic := '0';
    DRO	: out std_logic_vector(5 downto 0) := (others => '0');
    DID	: out std_logic_vector(5 downto 0) := (others => '0');
    FLD	: out std_logic := '0';
    FLG	: out std_logic := '0'
);
end component NX_DES;

component NX_SERDES is
generic (
    data_size            : integer range 2 to 10 := 5;	-- Serialiser/deserializer factor 
    location             : string := "";		-- Pad location
    standard             : string := "";		-- Pad electrical standard
    drive                : string := "";		-- Pad electrical drive
    differential         : string := "";		-- Single ended ("0" or differential ("1")
    slewRate             : string := "";		-- Slow, Medium or Fast
    termination          : string := "";		-- Input impedance adaptation
    terminationReference : string := "";		-- "floating" or "VTT"
    turbo                : string := "";		-- "true" or "false"
    weakTermination      : string := "";		-- "PullUp" or "None"
    inputDelayLine       : string := "";		-- "O_to_63_delay_value"
    outputDelayLine      : string := "";		-- "O_to_63_delay_value"
    inputSignalSlope     : string := "";		-- Decimal value "0.5" to "20" (value in V/ns)
    outputCapacity       : string := "";		-- "0" to "40" (value in pF)
    cpath_registered     : bit := '0';			-- Use Register in Enable Path ('1')
    -- Delay Control
    spath_dynamic        : bit := '0';			-- 0: off/fixed delay, 1: dynamic delay
    dpath_dynamic        : bit := '0'			-- 0: off/fixed delay, 1: dynamic delay
);
port (
    FCK	: in std_logic := '0';
    SCK	: in std_logic := '0';
    RTX	: in std_logic := '0';
    RRX	: in std_logic := '0';
    CI	: in std_logic := '0';
    CCK	: in std_logic := '0';
    CL	: in std_logic := '0';
    CR	: in std_logic := '0';
    I	: in std_logic_vector(data_size - 1 downto 0) := (others => '0');
    IO	: inout std_logic := '0';
    O	: out std_logic_vector(data_size - 1 downto 0) := (others => '0');
    -- Delay Control
    DCK	: in std_logic := '0';
    DRL	: in std_logic := '0';
    DIG	: in std_logic := '0';
    DS	: in std_logic_vector(1 downto 0) := (others => '0');
    DRA	: in std_logic_vector(5 downto 0) := (others => '0');
    DRI	: in std_logic_vector(5 downto 0) := (others => '0');
    FZ	: in std_logic := '0';
    DRO	: out std_logic_vector(5 downto 0) := (others => '0');
    DID	: out std_logic_vector(5 downto 0) := (others => '0');
    FLD	: out std_logic := '0';
    FLG	: out std_logic := '0'
);
end component NX_SERDES;

component NX_RAM is
generic (
   std_mode     : string := ""; -- standard mode [FAST_2kx18, SLOW_2kx18, NOECNOECC24, ...] empty for raw
   mcka_edge    : bit := '0';   -- 0: rising edge for port A clock - 1: falling edge
   mckb_edge    : bit := '0';   -- 0: rising edge for port B clock - 1: falling edge
   pcka_edge    : bit := '0';   -- 0: rising edge for pipe A clock - 1: falling edge
   pckb_edge    : bit := '0';   -- 0: rising edge for pipe B clock - 1: falling edge
   pipe_ia      : bit := '0';   -- 0: no pipe on port A input  - 1: pipe on port A input
   pipe_ib      : bit := '0';   -- 0: no pipe on port B input  - 1: pipe on port B input
   pipe_oa      : bit := '0';   -- 0: no pipe on port A output - 1: pipe on port A output
   pipe_ob      : bit := '0';   -- 0: no pipe on port B output - 1: pipe on port B output

   raw_config0  : bit_vector( 3 downto 0) := B"0000";			-- PRC
   raw_config1  : bit_vector(15 downto 0) := B"0000000000000000";	-- MOD

   -- For specific NG_LARGE Extended Features
   raw_l_enable : bit := '0';                         -- '0' for NG-MEDIUM, '1' for NG-LARGE extended modes (NO_ECC x3 & x6) + scrubbing, test...
   raw_l_extend : bit_vector( 3 downto 0) := B"0000"; -- Extended modes for NG-LARGE (Scrubbing, test... )

   mem_ctxt     : string := ""                        -- context initialization
   );
port (
    ACK	: in std_logic := '0';
    ACKC	: in std_logic := '0';
    ACKD	: in std_logic := '0';
    ACKR	: in std_logic := '0';
    BCK	: in std_logic := '0';
    BCKC	: in std_logic := '0';
    BCKD	: in std_logic := '0';
    BCKR	: in std_logic := '0';

    AI1	: in std_logic := '0';
    AI2	: in std_logic := '0';
    AI3	: in std_logic := '0';
    AI4	: in std_logic := '0';
    AI5	: in std_logic := '0';
    AI6	: in std_logic := '0';
    AI7	: in std_logic := '0';
    AI8	: in std_logic := '0';
    AI9	: in std_logic := '0';
    AI10	: in std_logic := '0';
    AI11	: in std_logic := '0';
    AI12	: in std_logic := '0';
    AI13	: in std_logic := '0';
    AI14	: in std_logic := '0';
    AI15	: in std_logic := '0';
    AI16	: in std_logic := '0';

    AI17	: in std_logic := '0';
    AI18	: in std_logic := '0';
    AI19	: in std_logic := '0';
    AI20	: in std_logic := '0';
    AI21	: in std_logic := '0';
    AI22	: in std_logic := '0';
    AI23	: in std_logic := '0';
    AI24	: in std_logic := '0';

    BI1	: in std_logic := '0';
    BI2	: in std_logic := '0';
    BI3	: in std_logic := '0';
    BI4	: in std_logic := '0';
    BI5	: in std_logic := '0';
    BI6	: in std_logic := '0';
    BI7	: in std_logic := '0';
    BI8	: in std_logic := '0';
    BI9	: in std_logic := '0';
    BI10	: in std_logic := '0';
    BI11	: in std_logic := '0';
    BI12	: in std_logic := '0';
    BI13	: in std_logic := '0';
    BI14	: in std_logic := '0';
    BI15	: in std_logic := '0';
    BI16	: in std_logic := '0';

    BI17	: in std_logic := '0';
    BI18	: in std_logic := '0';
    BI19	: in std_logic := '0';
    BI20	: in std_logic := '0';
    BI21	: in std_logic := '0';
    BI22	: in std_logic := '0';
    BI23	: in std_logic := '0';
    BI24	: in std_logic := '0';

    ACOR	: out std_logic := '0';
    AERR	: out std_logic := '0';
    BCOR	: out std_logic := '0';
    BERR	: out std_logic := '0';

    AO1	: out std_logic := '0';
    AO2	: out std_logic := '0';
    AO3	: out std_logic := '0';
    AO4	: out std_logic := '0';
    AO5	: out std_logic := '0';
    AO6	: out std_logic := '0';
    AO7	: out std_logic := '0';
    AO8	: out std_logic := '0';
    AO9	: out std_logic := '0';
    AO10	: out std_logic := '0';
    AO11	: out std_logic := '0';
    AO12	: out std_logic := '0';
    AO13	: out std_logic := '0';
    AO14	: out std_logic := '0';
    AO15	: out std_logic := '0';
    AO16	: out std_logic := '0';

    AO17	: out std_logic := '0';
    AO18	: out std_logic := '0';
    AO19	: out std_logic := '0';
    AO20	: out std_logic := '0';
    AO21	: out std_logic := '0';
    AO22	: out std_logic := '0';
    AO23	: out std_logic := '0';
    AO24	: out std_logic := '0';

    BO1	: out std_logic := '0';
    BO2	: out std_logic := '0';
    BO3	: out std_logic := '0';
    BO4	: out std_logic := '0';
    BO5	: out std_logic := '0';
    BO6	: out std_logic := '0';
    BO7	: out std_logic := '0';
    BO8	: out std_logic := '0';
    BO9	: out std_logic := '0';
    BO10	: out std_logic := '0';
    BO11	: out std_logic := '0';
    BO12	: out std_logic := '0';
    BO13	: out std_logic := '0';
    BO14	: out std_logic := '0';
    BO15	: out std_logic := '0';
    BO16	: out std_logic := '0';

    BO17	: out std_logic := '0';
    BO18	: out std_logic := '0';
    BO19	: out std_logic := '0';
    BO20	: out std_logic := '0';
    BO21	: out std_logic := '0';
    BO22	: out std_logic := '0';
    BO23	: out std_logic := '0';
    BO24	: out std_logic := '0';

    AA1	: in std_logic := '0';
    AA2	: in std_logic := '0';
    AA3	: in std_logic := '0';
    AA4	: in std_logic := '0';
    AA5	: in std_logic := '0';
    AA6	: in std_logic := '0';

    AA7	: in std_logic := '0';
    AA8	: in std_logic := '0';
    AA9	: in std_logic := '0';
    AA10	: in std_logic := '0';
    AA11	: in std_logic := '0';
    AA12	: in std_logic := '0';
    AA13	: in std_logic := '0';
    AA14	: in std_logic := '0';
    AA15	: in std_logic := '0';
    AA16	: in std_logic := '0';

    ACS	: in std_logic := '0';
    AWE	: in std_logic := '0';
    AR	: in std_logic := '0';

    BA1	: in std_logic := '0';
    BA2	: in std_logic := '0';
    BA3	: in std_logic := '0';
    BA4	: in std_logic := '0';
    BA5	: in std_logic := '0';
    BA6	: in std_logic := '0';

    BA7	: in std_logic := '0';
    BA8	: in std_logic := '0';
    BA9	: in std_logic := '0';
    BA10	: in std_logic := '0';
    BA11	: in std_logic := '0';
    BA12	: in std_logic := '0';
    BA13	: in std_logic := '0';
    BA14	: in std_logic := '0';
    BA15	: in std_logic := '0';
    BA16	: in std_logic := '0';

    BCS	: in std_logic := '0';
    BWE	: in std_logic := '0';
    BR	: in std_logic := '0'
);
end component NX_RAM;

component NX_RAM_WRAP is
generic (
   std_mode     : string := ""; -- standard mode [FAST_2kx18, SLOW_2kx18, NOECNOECC24, ...] empty for raw
   mcka_edge    : bit := '0';   -- 0: rising edge for port A clock - 1: falling edge
   mckb_edge    : bit := '0';   -- 0: rising edge for port B clock - 1: falling edge
   pcka_edge    : bit := '0';   -- 0: rising edge for pipe A clock - 1: falling edge
   pckb_edge    : bit := '0';   -- 0: rising edge for pipe B clock - 1: falling edge

   pipe_ia      : bit := '0';   -- 0: no pipe on port A input  - 1: pipe on port A input
   pipe_ib      : bit := '0';   -- 0: no pipe on port B input  - 1: pipe on port B input
   pipe_oa      : bit := '0';   -- 0: no pipe on port A output - 1: pipe on port A output
   pipe_ob      : bit := '0';   -- 0: no pipe on port B output - 1: pipe on port B output

   raw_config0  : bit_vector( 3 downto 0) := B"0000";			-- PRC
   raw_config1  : bit_vector(15 downto 0) := B"0000000000000000";	-- MOD

   -- For specific NG_LARGE Extended Features
   raw_l_enable : bit := '0';                          -- '0' for NG-MEDIUM, '1' for NG-LARGE extended modes (NO_ECC x3 & x6) + scrubbing, test...
   raw_l_extend : bit_vector( 3 downto 0) := B"0000";  -- Extended modes for NG-LARGE (Scrubbing, test... )

   mem_ctxt     : string := ""                         -- context initialization
);
port (
    ACK	: in std_logic := '0';
    ACKD	: in std_logic := '0';
    ACKR	: in std_logic := '0';
    BCK	: in std_logic := '0';
    BCKD	: in std_logic := '0';
    BCKR	: in std_logic := '0';

    AI	: in std_logic_vector(23 downto 0) := (others => '0');
    BI	: in std_logic_vector(23 downto 0) := (others => '0');

    ACOR	: out std_logic := '0';
    AERR	: out std_logic := '0';
    BCOR	: out std_logic := '0';
    BERR	: out std_logic := '0';

    AO	: out std_logic_vector(23 downto 0) := (others => '0');
    BO	: out std_logic_vector(23 downto 0) := (others => '0');
    AA	: in std_logic_vector(15 downto 0) := (others => '0');

    ACS	: in std_logic := '0';
    AWE	: in std_logic := '0';
    AR	: in std_logic := '0';

    BA	: in std_logic_vector(15 downto 0) := (others => '0');

    BCS	: in std_logic := '0';
    BWE	: in std_logic := '0';
    BR	: in std_logic := '0'
);
end component NX_RAM_WRAP;

component NX_ECC is
port (
    CKD	: in std_logic := '0';
    CHK	: in std_logic := '0';
    COR	: out std_logic := '0';
    ERR	: out std_logic := '0'
    );
end component NX_ECC;

component NX_PLL_L is
generic (
    location	      : string := "";
                      
    ref_intdiv        : integer   range 0 to 31 := 0;  -- 0 to 31  (%1 to %32)
    ref_osc_on        : bit := '0';                    -- 0: disabled - 1: enabled
                      
    cfg_use_pll       : std_logic:='1';                -- use or bypass PLL
                      
    ext_fbk_on        : bit := '0';                    -- 0: disabled - 1: enabled
                      
    fbk_intdiv        : integer   range 0 to 31 := 2;  -- 0 to 31  (%4 to %66 by step 2)
                      
    fbk_delay_on      : bit := '0';                    -- 0: no delay - 1: delay
    fbk_delay         : integer   range 0 to 63 := 0;  -- 0 to 63

    clk_outdivp1      : integer   range 0 to 7 := 0;   -- 0 to 7  P1 (2^n    : %1 to %128)
    clk_outdivp2      : integer   range 0 to 7 := 0;   -- 0 to 7  P2 (2^(n+1): %2 to %256)
    clk_outdivo1      : integer   range 0 to 7 := 0;   -- 0 to 7  O1 ((2n)+3 : %3 to  %17)
    clk_outdivp3o2    : integer   range 0 to 7 := 0    -- 0 to 7  P3 (2^(n+2): %4 to %512)
                                                       --         O2 ((2n)+5 : %5 to  %19)
);
port (
    REF	: in std_logic := '0';
    FBK	: in std_logic := '0';

    R	: in std_logic := '0';

    VCO	: out std_logic := '0';
    LDFO	: out std_logic := '0';
    REFO	: out std_logic := '0';

    DIVO1	: out std_logic := '0';
    DIVO2	: out std_logic := '0';

    DIVP1	: out std_logic := '0';
    DIVP2	: out std_logic := '0';
    DIVP3	: out std_logic := '0';
    OSC	: out std_logic := '0';

    PLL_LOCKED	: out std_logic := '0';
    CAL_LOCKED	: out std_logic := '0'
);
end component NX_PLL_L;

component NX_WFG_L is
generic (
    location    : string := "";
    wfg_edge    : bit := '0';                              -- 0: no invert / Rising
                                                           -- 1:    invert / Falling

    mode        : bit := '0';                              -- 0: no pattern - 1: pattern
    pattern_end : integer   range 0 to 15 := 1;            -- 0: to 15 (1 step to 16 steps)
    pattern     : bit_vector(0 to 15) := (others => '0');  -- pattern p0 ... p15

    delay_on    : bit := '0';                              -- 0: no delay - 1: delay
    delay       : integer   range 0 to 63 := 0             -- 0 to 63 (1 unit to 64 unit)
);
port (
    R	: in std_logic := '0';
    SI	: in std_logic := '0';
    ZI	: in std_logic := '0';
    RDY	: in std_logic := '1';
    SO	: out std_logic := '0';
    ZO	: out std_logic := '0'
);
end component NX_WFG_L;


end nxPackage;
-- =================================================================================================
--   NX_IOB definition                                                                  2017/09/04
-- =================================================================================================

library ieee;
use ieee.std_logic_1164.all;

entity NX_IOB_I is
generic (
    location             : string := "";
    standard             : string := "";
    drive                : string := "";
    differential         : string := "";
    slewRate             : string := "";
    termination          : string := "";
    terminationReference : string := "";
    turbo                : string := "";
    weakTermination      : string := "";
    inputDelayLine       : string := "";
    outputDelayLine      : string := "";
    inputSignalSlope     : string := "";
    outputCapacity       : string := "";
    locked               : bit    := '0'
);
port (
    I  : in  std_logic;
    C  : in  std_logic;
    T  : in  std_logic;
    IO : in  std_logic;
    O  : out std_logic
);
end NX_IOB_I;

architecture NX_RTL of NX_IOB_I is
    attribute NX_TYPE: string;
    attribute NX_TYPE of NX_RTL: architecture is "PHY";

    attribute NX_USE: string;
    attribute NX_USE of NX_RTL: architecture is "NX_IOB";
begin
end NX_RTL;

----------------------------------------------------------------------------------------------------

library ieee;
use ieee.std_logic_1164.all;

entity NX_IOB_O is
generic (
    location             : string := "";
    standard             : string := "";
    drive                : string := "";
    differential         : string := "";
    slewRate             : string := "";
    termination          : string := "";
    terminationReference : string := "";
    turbo                : string := "";
    weakTermination      : string := "";
    inputDelayLine       : string := "";
    outputDelayLine      : string := "";
    inputSignalSlope     : string := "";
    outputCapacity       : string := "";
    locked               : bit    := '0'
);
port (
    I  : in  std_logic;
    C  : in  std_logic;
    T  : in  std_logic;
    O  : out std_logic;
    IO : out std_logic
);
end NX_IOB_O;

architecture NX_RTL of NX_IOB_O is
    attribute NX_TYPE: string;
    attribute NX_TYPE of NX_RTL: architecture is "PHY";

    attribute NX_USE: string;
    attribute NX_USE of NX_RTL: architecture is "NX_IOB";
begin
end NX_RTL;

----------------------------------------------------------------------------------------------------

library ieee;
use ieee.std_logic_1164.all;

entity NX_IOB is
generic (
    location             : string := "";
    standard             : string := "";
    drive                : string := "";
    differential         : string := "";
    slewRate             : string := "";
    termination          : string := "";
    terminationReference : string := "";
    turbo                : string := "";
    weakTermination      : string := "";
    inputDelayLine       : string := "";
    outputDelayLine      : string := "";
    inputSignalSlope     : string := "";
    outputCapacity       : string := "";
    locked               : bit    := '0'
);
port (
    I  : in    std_logic;
    C  : in    std_logic;
    T  : in    std_logic;
    O  : out   std_logic;
    IO : inout std_logic
);
end NX_IOB;

architecture NX_RTL of NX_IOB is
    attribute NX_TYPE: string;
    attribute NX_TYPE of NX_RTL: architecture is "PHY";

    attribute NX_USE: string;
    attribute NX_USE of NX_RTL: architecture is "NX_IOB";
begin
end NX_RTL;

----------------------------------------------------------------------------------------------------

`protect begin_protected
`protect version = 1
`protect encrypt_agent = "NanoXplore"
`protect key_keyowner = "Mentor Graphics Corporation", key_keyname = "MGC-VERIF-SIM-RSA-2", key_method = "rsa"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 256)
`protect key_block
HYPkMKvP29F9xCFui2KHT4VWJbqfyD5JNzMTddzGEC+Ko0vkW+JVwaKBurZsk3wA
77XkjyJxUgDk6LubWxJ8mkGKpz1dSejz5Zq9VjNczcZdcgxVt5W3KWYJXaFmEdY9
pNyHVrRixaDJ7ngABs+l10OqKZxe8uP6djGAsCQHw9/u5/0+kJR7GhTLyJaX7srf
hKc2idCTLOVydRuCSW07VqShzRFMZWcwgbpUsCb5qfrskWPkQdEapyzjcUDi0L73
oCWzAAULV5J/XIJQsgJ2tx/xjMlKv/TCVYP4kqN0rhaZM412Xms03UWcmRXxmqQY
ewtw9B+4bKU5E00rprwlNg==
`protect data_method = "aes256-cbc"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 2624)
`protect data_block
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
`protect end_protected

-- =================================================================================================
--   NX_IOM_L definition
-- =================================================================================================

library ieee;
use ieee.std_logic_1164.all;
use ieee.std_logic_unsigned.all;
use ieee.numeric_std.all;

library NX;
use NX.nxPackage.all;

entity NX_IOM_L is
generic (
    mode_side1   : integer := 0;
    sel_clkw_rx1 : bit_vector(1 downto 0) := "00";
    sel_clkr_rx1 : bit := '0';
    div_tx1      : bit_vector(3 downto 0) := "0000";
    div_rx1      : bit_vector(3 downto 0) := "0000";
--  inv_di_fclk1 : bit := '0';
--  latency1     : bit := '0';
    mode_side2   : integer := 0;
    sel_clkw_rx2 : bit_vector(1 downto 0) := "00";
    sel_clkr_rx2 : bit := '0';
    div_tx2      : bit_vector(3 downto 0) := "0000";
    div_rx2      : bit_vector(3 downto 0) := "0000";
--  inv_di_fclk2 : bit := '0';
--  latency2     : bit := '0';
--  sel_clk_out2 : bit_vector(1 downto 0) := "00";
--  sel_clk_out3 : bit_vector(1 downto 0) := "00";
    sel_clk_out1 : bit := '0';
    sel_clk_out2 : bit := '0';
    mode_io_cal  : bit := '0';
    pads_dict    : string := "";
    pads_path    : string := ""
);
port(
    RTCK1   : in    std_logic;
    RRCK1   : in    std_logic;
    WTCK1   : in    std_logic;
    WRCK1   : in    std_logic;
    RTCK2   : in    std_logic;
    RRCK2   : in    std_logic;
    WTCK2   : in    std_logic;
    WRCK2   : in    std_logic;
    CTCK    : in    std_logic;
    CCK     : in    std_logic;
    DCK     : in    std_logic;

    C1TW    : in    std_logic;
    C1TS    : in    std_logic;
    C1RW1   : in    std_logic;
    C1RW2   : in    std_logic;
    C1RW3   : in    std_logic;
    C1RNE   : in    std_logic;
    C1RS    : in    std_logic;
    C2TW    : in    std_logic;
    C2TS    : in    std_logic;
    C2RW1   : in    std_logic;
    C2RW2   : in    std_logic;
    C2RW3   : in    std_logic;
    C2RNE   : in    std_logic;
    C2RS    : in    std_logic;
    FA1     : in    std_logic;
    FA2     : in    std_logic;
    FA3     : in    std_logic;
    FA4     : in    std_logic;
    FA5     : in    std_logic;
    FA6     : in    std_logic;
    FZ      : in    std_logic;
    DC      : in    std_logic;
    SE      : in    std_logic;
    SCI     : in    std_logic;
    SPI1    : in    std_logic;
    SPI2    : in    std_logic;
    SPI3    : in    std_logic;
    SPI4    : in    std_logic;
    SPI5    : in    std_logic;
    SPI6    : in    std_logic;
    DRI1    : in    std_logic;
    DRI2    : in    std_logic;
    DRI3    : in    std_logic;
    DRI4    : in    std_logic;
    DRI5    : in    std_logic;
    DRI6    : in    std_logic;
    DRA1    : in    std_logic;
    DRA2    : in    std_logic;
    DRA3    : in    std_logic;
    DRA4    : in    std_logic;
    DRA5    : in    std_logic;
    DRA6    : in    std_logic;
    DRL     : in    std_logic;
    DOS     : in    std_logic;
    DOG     : in    std_logic;
    DIS     : in    std_logic;
    DIG     : in    std_logic;
    DPAS    : in    std_logic;
    DPAG    : in    std_logic;
    DQSS    : in    std_logic;
    DQSG    : in    std_logic;
    DS1     : in    std_logic;
    DS2     : in    std_logic;
    CAD1    : in    std_logic;
    CAD2    : in    std_logic;
    CAD3    : in    std_logic;
    CAD4    : in    std_logic;
    CAD5    : in    std_logic;
    CAD6    : in    std_logic;
    CAP1    : in    std_logic;
    CAP2    : in    std_logic;
    CAP3    : in    std_logic;
    CAP4    : in    std_logic;
    CAN1    : in    std_logic;
    CAN2    : in    std_logic;
    CAN3    : in    std_logic;
    CAN4    : in    std_logic;
    CAT1    : in    std_logic;
    CAT2    : in    std_logic;
    CAT3    : in    std_logic;
    CAT4    : in    std_logic;

    FLD     : out   std_logic;
    FLG     : out   std_logic;
    C1RED   : out   std_logic;
    C2RED   : out   std_logic;
    DRO1    : out   std_logic;
    DRO2    : out   std_logic;
    DRO3    : out   std_logic;
    DRO4    : out   std_logic;
    DRO5    : out   std_logic;
    DRO6    : out   std_logic;
    DRE     : out   std_logic;
    DRR     : out   std_logic;
    SCO     : out   std_logic;
    SPO1    : out   std_logic;
    SPO2    : out   std_logic;
    SPO3    : out   std_logic;
    SPO4    : out   std_logic;
    SPO5    : out   std_logic;

    P1CI1   : in    std_logic;
    P1CL    : in    std_logic;
    P1CR    : in    std_logic;
    P1CO    : out   std_logic;
    P1EI1   : in    std_logic;
    P1EI2   : in    std_logic;
    P1EI3   : in    std_logic;
    P1EI4   : in    std_logic;
    P1EI5   : in    std_logic;
    P1EL    : in    std_logic;
    P1ER    : in    std_logic;
    P1EO    : out   std_logic;
    P1RI    : in    std_logic;
    P1RL    : in    std_logic;
    P1RR    : in    std_logic;
    P1RO1   : out   std_logic;
    P1RO2   : out   std_logic;
    P1RO3   : out   std_logic;
    P1RO4   : out   std_logic;
    P1RO5   : out   std_logic;

    P2CI1   : in    std_logic;
    P2CL    : in    std_logic;
    P2CR    : in    std_logic;
    P2CO    : out   std_logic;
    P2EI1   : in    std_logic;
    P2EI2   : in    std_logic;
    P2EI3   : in    std_logic;
    P2EI4   : in    std_logic;
    P2EI5   : in    std_logic;
    P2EL    : in    std_logic;
    P2ER    : in    std_logic;
    P2EO    : out   std_logic;
    P2RI    : in    std_logic;
    P2RL    : in    std_logic;
    P2RR    : in    std_logic;
    P2RO1   : out   std_logic;
    P2RO2   : out   std_logic;
    P2RO3   : out   std_logic;
    P2RO4   : out   std_logic;
    P2RO5   : out   std_logic;

    P3CI1   : in    std_logic;
    P3CL    : in    std_logic;
    P3CR    : in    std_logic;
    P3CO    : out   std_logic;
    P3EI1   : in    std_logic;
    P3EI2   : in    std_logic;
    P3EI3   : in    std_logic;
    P3EI4   : in    std_logic;
    P3EI5   : in    std_logic;
    P3EL    : in    std_logic;
    P3ER    : in    std_logic;
    P3EO    : out   std_logic;
    P3RI    : in    std_logic;
    P3RL    : in    std_logic;
    P3RR    : in    std_logic;
    P3RO1   : out   std_logic;
    P3RO2   : out   std_logic;
    P3RO3   : out   std_logic;
    P3RO4   : out   std_logic;
    P3RO5   : out   std_logic;

    P4CI1   : in    std_logic;
    P4CL    : in    std_logic;
    P4CR    : in    std_logic;
    P4CO    : out   std_logic;
    P4EI1   : in    std_logic;
    P4EI2   : in    std_logic;
    P4EI3   : in    std_logic;
    P4EI4   : in    std_logic;
    P4EI5   : in    std_logic;
    P4EL    : in    std_logic;
    P4ER    : in    std_logic;
    P4EO    : out   std_logic;
    P4RI    : in    std_logic;
    P4RL    : in    std_logic;
    P4RR    : in    std_logic;
    P4RO1   : out   std_logic;
    P4RO2   : out   std_logic;
    P4RO3   : out   std_logic;
    P4RO4   : out   std_logic;
    P4RO5   : out   std_logic;

    P5CI1   : in    std_logic;
    P5CI2   : in    std_logic;	-- DQS
    P5CI3   : in    std_logic;	-- DQS
    P5CI4   : in    std_logic;	-- DQS
    P5CI5   : in    std_logic;	-- DQS
    P5CL    : in    std_logic;
    P5CR    : in    std_logic;
    P5CO    : out   std_logic;
    P5EI1   : in    std_logic;
    P5EI2   : in    std_logic;
    P5EI3   : in    std_logic;
    P5EI4   : in    std_logic;
    P5EI5   : in    std_logic;
    P5EL    : in    std_logic;
    P5ER    : in    std_logic;
    P5EO    : out   std_logic;
    P5RI    : in    std_logic;
    P5RL    : in    std_logic;
    P5RR    : in    std_logic;
    P5RO1   : out   std_logic;
    P5RO2   : out   std_logic;
    P5RO3   : out   std_logic;
    P5RO4   : out   std_logic;
    P5RO5   : out   std_logic;

    P6CI1   : in    std_logic;
    P6CL    : in    std_logic;
    P6CR    : in    std_logic;
    P6CO    : out   std_logic;
    P6EI1   : in    std_logic;
    P6EI2   : in    std_logic;
    P6EI3   : in    std_logic;
    P6EI4   : in    std_logic;
    P6EI5   : in    std_logic;
    P6EL    : in    std_logic;
    P6ER    : in    std_logic;
    P6EO    : out   std_logic;
    P6RI    : in    std_logic;
    P6RL    : in    std_logic;
    P6RR    : in    std_logic;
    P6RO1   : out   std_logic;
    P6RO2   : out   std_logic;
    P6RO3   : out   std_logic;
    P6RO4   : out   std_logic;
    P6RO5   : out   std_logic;

    P7CI1   : in    std_logic;
    P7CL    : in    std_logic;
    P7CR    : in    std_logic;
    P7CO    : out   std_logic;
    P7EI1   : in    std_logic;
    P7EI2   : in    std_logic;
    P7EI3   : in    std_logic;
    P7EI4   : in    std_logic;
    P7EI5   : in    std_logic;
    P7EL    : in    std_logic;
    P7ER    : in    std_logic;
    P7EO    : out   std_logic;
    P7RI    : in    std_logic;
    P7RL    : in    std_logic;
    P7RR    : in    std_logic;
    P7RO1   : out   std_logic;
    P7RO2   : out   std_logic;
    P7RO3   : out   std_logic;
    P7RO4   : out   std_logic;
    P7RO5   : out   std_logic;

    P8CI1   : in    std_logic;
    P8CL    : in    std_logic;
    P8CR    : in    std_logic;
    P8CO    : out   std_logic;
    P8EI1   : in    std_logic;
    P8EI2   : in    std_logic;
    P8EI3   : in    std_logic;
    P8EI4   : in    std_logic;
    P8EI5   : in    std_logic;
    P8EL    : in    std_logic;
    P8ER    : in    std_logic;
    P8EO    : out   std_logic;
    P8RI    : in    std_logic;
    P8RL    : in    std_logic;
    P8RR    : in    std_logic;
    P8RO1   : out   std_logic;
    P8RO2   : out   std_logic;
    P8RO3   : out   std_logic;
    P8RO4   : out   std_logic;
    P8RO5   : out   std_logic;

    P9CI1   : in    std_logic;
    P9CL    : in    std_logic;
    P9CR    : in    std_logic;
    P9CO    : out   std_logic;
    P9EI1   : in    std_logic;
    P9EI2   : in    std_logic;
    P9EI3   : in    std_logic;
    P9EI4   : in    std_logic;
    P9EI5   : in    std_logic;
    P9EL    : in    std_logic;
    P9ER    : in    std_logic;
    P9EO    : out   std_logic;
    P9RI    : in    std_logic;
    P9RL    : in    std_logic;
    P9RR    : in    std_logic;
    P9RO1   : out   std_logic;
    P9RO2   : out   std_logic;
    P9RO3   : out   std_logic;
    P9RO4   : out   std_logic;
    P9RO5   : out   std_logic;

    P10CI1  : in    std_logic;
    P10CL   : in    std_logic;
    P10CR   : in    std_logic;
    P10CO   : out   std_logic;
    P10EI1  : in    std_logic;
    P10EI2  : in    std_logic;
    P10EI3  : in    std_logic;
    P10EI4  : in    std_logic;
    P10EI5  : in    std_logic;
    P10EL   : in    std_logic;
    P10ER   : in    std_logic;
    P10EO   : out   std_logic;
    P10RI   : in    std_logic;
    P10RL   : in    std_logic;
    P10RR   : in    std_logic;
    P10RO1  : out   std_logic;
    P10RO2  : out   std_logic;
    P10RO3  : out   std_logic;
    P10RO4  : out   std_logic;
    P10RO5  : out   std_logic;

    P11CI1  : in    std_logic;
    P11CL   : in    std_logic;
    P11CR   : in    std_logic;
    P11CO   : out   std_logic;
    P11EI1  : in    std_logic;
    P11EI2  : in    std_logic;
    P11EI3  : in    std_logic;
    P11EI4  : in    std_logic;
    P11EI5  : in    std_logic;
    P11EL   : in    std_logic;
    P11ER   : in    std_logic;
    P11EO   : out   std_logic;
    P11RI   : in    std_logic;
    P11RL   : in    std_logic;
    P11RR   : in    std_logic;
    P11RO1  : out   std_logic;
    P11RO2  : out   std_logic;
    P11RO3  : out   std_logic;
    P11RO4  : out   std_logic;
    P11RO5  : out   std_logic;

    P12CI1  : in    std_logic;
    P12CL   : in    std_logic;
    P12CR   : in    std_logic;
    P12CO   : out   std_logic;
    P12EI1  : in    std_logic;
    P12EI2  : in    std_logic;
    P12EI3  : in    std_logic;
    P12EI4  : in    std_logic;
    P12EI5  : in    std_logic;
    P12EL   : in    std_logic;
    P12ER   : in    std_logic;
    P12EO   : out   std_logic;
    P12RI   : in    std_logic;
    P12RL   : in    std_logic;
    P12RR   : in    std_logic;
    P12RO1  : out   std_logic;
    P12RO2  : out   std_logic;
    P12RO3  : out   std_logic;
    P12RO4  : out   std_logic;
    P12RO5  : out   std_logic;

    P13CI1  : in    std_logic;
    P13CL   : in    std_logic;
    P13CR   : in    std_logic;
    P13CO   : out   std_logic;
    P13EI1  : in    std_logic;
    P13EI2  : in    std_logic;
    P13EI3  : in    std_logic;
    P13EI4  : in    std_logic;
    P13EI5  : in    std_logic;
    P13EL   : in    std_logic;
    P13ER   : in    std_logic;
    P13EO   : out   std_logic;
    P13RI   : in    std_logic;
    P13RL   : in    std_logic;
    P13RR   : in    std_logic;
    P13RO1  : out   std_logic;
    P13RO2  : out   std_logic;
    P13RO3  : out   std_logic;
    P13RO4  : out   std_logic;
    P13RO5  : out   std_logic;

    P14CI1  : in    std_logic;
    P14CL   : in    std_logic;
    P14CR   : in    std_logic;
    P14CO   : out   std_logic;
    P14EI1  : in    std_logic;
    P14EI2  : in    std_logic;
    P14EI3  : in    std_logic;
    P14EI4  : in    std_logic;
    P14EI5  : in    std_logic;
    P14EL   : in    std_logic;
    P14ER   : in    std_logic;
    P14EO   : out   std_logic;
    P14RI   : in    std_logic;
    P14RL   : in    std_logic;
    P14RR   : in    std_logic;
    P14RO1  : out   std_logic;
    P14RO2  : out   std_logic;
    P14RO3  : out   std_logic;
    P14RO4  : out   std_logic;
    P14RO5  : out   std_logic;

    P15CI1  : in    std_logic;
    P15CL   : in    std_logic;
    P15CR   : in    std_logic;
    P15CO   : out   std_logic;
    P15EI1  : in    std_logic;
    P15EI2  : in    std_logic;
    P15EI3  : in    std_logic;
    P15EI4  : in    std_logic;
    P15EI5  : in    std_logic;
    P15EL   : in    std_logic;
    P15ER   : in    std_logic;
    P15EO   : out   std_logic;
    P15RI   : in    std_logic;
    P15RL   : in    std_logic;
    P15RR   : in    std_logic;
    P15RO1  : out   std_logic;
    P15RO2  : out   std_logic;
    P15RO3  : out   std_logic;
    P15RO4  : out   std_logic;
    P15RO5  : out   std_logic;

    P16CI1  : in    std_logic;
    P16CL   : in    std_logic;
    P16CR   : in    std_logic;
    P16CO   : out   std_logic;
    P16EI1  : in    std_logic;
    P16EI2  : in    std_logic;
    P16EI3  : in    std_logic;
    P16EI4  : in    std_logic;
    P16EI5  : in    std_logic;
    P16EL   : in    std_logic;
    P16ER   : in    std_logic;
    P16EO   : out   std_logic;
    P16RI   : in    std_logic;
    P16RL   : in    std_logic;
    P16RR   : in    std_logic;
    P16RO1  : out   std_logic;
    P16RO2  : out   std_logic;
    P16RO3  : out   std_logic;
    P16RO4  : out   std_logic;
    P16RO5  : out   std_logic;

    P17CI1  : in    std_logic;
    P17CL   : in    std_logic;
    P17CR   : in    std_logic;
    P17CO   : out   std_logic;
    P17EI1  : in    std_logic;
    P17EI2  : in    std_logic;
    P17EI3  : in    std_logic;
    P17EI4  : in    std_logic;
    P17EI5  : in    std_logic;
    P17EL   : in    std_logic;
    P17ER   : in    std_logic;
    P17EO   : out   std_logic;
    P17RI   : in    std_logic;
    P17RL   : in    std_logic;
    P17RR   : in    std_logic;
    P17RO1  : out   std_logic;
    P17RO2  : out   std_logic;
    P17RO3  : out   std_logic;
    P17RO4  : out   std_logic;
    P17RO5  : out   std_logic;

    P18CI1  : in    std_logic;
    P18CL   : in    std_logic;
    P18CR   : in    std_logic;
    P18CO   : out   std_logic;
    P18EI1  : in    std_logic;
    P18EI2  : in    std_logic;
    P18EI3  : in    std_logic;
    P18EI4  : in    std_logic;
    P18EI5  : in    std_logic;
    P18EL   : in    std_logic;
    P18ER   : in    std_logic;
    P18EO   : out   std_logic;
    P18RI   : in    std_logic;
    P18RL   : in    std_logic;
    P18RR   : in    std_logic;
    P18RO1  : out   std_logic;
    P18RO2  : out   std_logic;
    P18RO3  : out   std_logic;
    P18RO4  : out   std_logic;
    P18RO5  : out   std_logic;

    P19CI1  : in    std_logic;
    P19CL   : in    std_logic;
    P19CR   : in    std_logic;
    P19CO   : out   std_logic;
    P19EI1  : in    std_logic;
    P19EI2  : in    std_logic;
    P19EI3  : in    std_logic;
    P19EI4  : in    std_logic;
    P19EI5  : in    std_logic;
    P19EL   : in    std_logic;
    P19ER   : in    std_logic;
    P19EO   : out   std_logic;
    P19RI   : in    std_logic;
    P19RL   : in    std_logic;
    P19RR   : in    std_logic;
    P19RO1  : out   std_logic;
    P19RO2  : out   std_logic;
    P19RO3  : out   std_logic;
    P19RO4  : out   std_logic;
    P19RO5  : out   std_logic;

    P20CI1  : in    std_logic;
    P20CL   : in    std_logic;
    P20CR   : in    std_logic;
    P20CO   : out   std_logic;
    P20EI1  : in    std_logic;
    P20EI2  : in    std_logic;
    P20EI3  : in    std_logic;
    P20EI4  : in    std_logic;
    P20EI5  : in    std_logic;
    P20EL   : in    std_logic;
    P20ER   : in    std_logic;
    P20EO   : out   std_logic;
    P20RI   : in    std_logic;
    P20RL   : in    std_logic;
    P20RR   : in    std_logic;
    P20RO1  : out   std_logic;
    P20RO2  : out   std_logic;
    P20RO3  : out   std_logic;
    P20RO4  : out   std_logic;
    P20RO5  : out   std_logic;

    P21CI1  : in    std_logic;
    P21CL   : in    std_logic;
    P21CR   : in    std_logic;
    P21CO   : out   std_logic;
    P21EI1  : in    std_logic;
    P21EI2  : in    std_logic;
    P21EI3  : in    std_logic;
    P21EI4  : in    std_logic;
    P21EI5  : in    std_logic;
    P21EL   : in    std_logic;
    P21ER   : in    std_logic;
    P21EO   : out   std_logic;
    P21RI   : in    std_logic;
    P21RL   : in    std_logic;
    P21RR   : in    std_logic;
    P21RO1  : out   std_logic;
    P21RO2  : out   std_logic;
    P21RO3  : out   std_logic;
    P21RO4  : out   std_logic;
    P21RO5  : out   std_logic;

    P22CI1  : in    std_logic;
    P22CL   : in    std_logic;
    P22CR   : in    std_logic;
    P22CO   : out   std_logic;
    P22EI1  : in    std_logic;
    P22EI2  : in    std_logic;
    P22EI3  : in    std_logic;
    P22EI4  : in    std_logic;
    P22EI5  : in    std_logic;
    P22EL   : in    std_logic;
    P22ER   : in    std_logic;
    P22EO   : out   std_logic;
    P22RI   : in    std_logic;
    P22RL   : in    std_logic;
    P22RR   : in    std_logic;
    P22RO1  : out   std_logic;
    P22RO2  : out   std_logic;
    P22RO3  : out   std_logic;
    P22RO4  : out   std_logic;
    P22RO5  : out   std_logic;

    P23CI1  : in    std_logic;
    P23CL   : in    std_logic;
    P23CR   : in    std_logic;
    P23CO   : out   std_logic;
    P23EI1  : in    std_logic;
    P23EI2  : in    std_logic;
    P23EI3  : in    std_logic;
    P23EI4  : in    std_logic;
    P23EI5  : in    std_logic;
    P23EL   : in    std_logic;
    P23ER   : in    std_logic;
    P23EO   : out   std_logic;
    P23RI   : in    std_logic;
    P23RL   : in    std_logic;
    P23RR   : in    std_logic;
    P23RO1  : out   std_logic;
    P23RO2  : out   std_logic;
    P23RO3  : out   std_logic;
    P23RO4  : out   std_logic;
    P23RO5  : out   std_logic;

    P24CI1  : in    std_logic;
    P24CL   : in    std_logic;
    P24CR   : in    std_logic;
    P24CO   : out   std_logic;
    P24EI1  : in    std_logic;
    P24EI2  : in    std_logic;
    P24EI3  : in    std_logic;
    P24EI4  : in    std_logic;
    P24EI5  : in    std_logic;
    P24EL   : in    std_logic;
    P24ER   : in    std_logic;
    P24EO   : out   std_logic;
    P24RI   : in    std_logic;
    P24RL   : in    std_logic;
    P24RR   : in    std_logic;
    P24RO1  : out   std_logic;
    P24RO2  : out   std_logic;
    P24RO3  : out   std_logic;
    P24RO4  : out   std_logic;
    P24RO5  : out   std_logic;

    P25CI1  : in    std_logic;
    P25CL   : in    std_logic;
    P25CR   : in    std_logic;
    P25CO   : out   std_logic;
    P25EI1  : in    std_logic;
    P25EI2  : in    std_logic;
    P25EI3  : in    std_logic;
    P25EI4  : in    std_logic;
    P25EI5  : in    std_logic;
    P25EL   : in    std_logic;
    P25ER   : in    std_logic;
    P25EO   : out   std_logic;
    P25RI   : in    std_logic;
    P25RL   : in    std_logic;
    P25RR   : in    std_logic;
    P25RO1  : out   std_logic;
    P25RO2  : out   std_logic;
    P25RO3  : out   std_logic;
    P25RO4  : out   std_logic;
    P25RO5  : out   std_logic;

    P26CI1  : in    std_logic;
    P26CL   : in    std_logic;
    P26CR   : in    std_logic;
    P26CO   : out   std_logic;
    P26EI1  : in    std_logic;
    P26EI2  : in    std_logic;
    P26EI3  : in    std_logic;
    P26EI4  : in    std_logic;
    P26EI5  : in    std_logic;
    P26EL   : in    std_logic;
    P26ER   : in    std_logic;
    P26EO   : out   std_logic;
    P26RI   : in    std_logic;
    P26RL   : in    std_logic;
    P26RR   : in    std_logic;
    P26RO1  : out   std_logic;
    P26RO2  : out   std_logic;
    P26RO3  : out   std_logic;
    P26RO4  : out   std_logic;
    P26RO5  : out   std_logic;

    P27CI1  : in    std_logic;
    P27CL   : in    std_logic;
    P27CR   : in    std_logic;
    P27CO   : out   std_logic;
    P27EI1  : in    std_logic;
    P27EI2  : in    std_logic;
    P27EI3  : in    std_logic;
    P27EI4  : in    std_logic;
    P27EI5  : in    std_logic;
    P27EL   : in    std_logic;
    P27ER   : in    std_logic;
    P27EO   : out   std_logic;
    P27RI   : in    std_logic;
    P27RL   : in    std_logic;
    P27RR   : in    std_logic;
    P27RO1  : out   std_logic;
    P27RO2  : out   std_logic;
    P27RO3  : out   std_logic;
    P27RO4  : out   std_logic;
    P27RO5  : out   std_logic;

    P28CI1  : in    std_logic;
    P28CL   : in    std_logic;
    P28CR   : in    std_logic;
    P28CO   : out   std_logic;
    P28EI1  : in    std_logic;
    P28EI2  : in    std_logic;
    P28EI3  : in    std_logic;
    P28EI4  : in    std_logic;
    P28EI5  : in    std_logic;
    P28EL   : in    std_logic;
    P28ER   : in    std_logic;
    P28EO   : out   std_logic;
    P28RI   : in    std_logic;
    P28RL   : in    std_logic;
    P28RR   : in    std_logic;
    P28RO1  : out   std_logic;
    P28RO2  : out   std_logic;
    P28RO3  : out   std_logic;
    P28RO4  : out   std_logic;
    P28RO5  : out   std_logic;

    P29CI1  : in    std_logic;
    P29CI2  : in    std_logic;	-- DQS
    P29CI3  : in    std_logic;	-- DQS
    P29CI4  : in    std_logic;	-- DQS
    P29CI5  : in    std_logic;	-- DQS
    P29CL   : in    std_logic;
    P29CR   : in    std_logic;
    P29CO   : out   std_logic;
    P29EI1  : in    std_logic;
    P29EI2  : in    std_logic;
    P29EI3  : in    std_logic;
    P29EI4  : in    std_logic;
    P29EI5  : in    std_logic;
    P29EL   : in    std_logic;
    P29ER   : in    std_logic;
    P29EO   : out   std_logic;
    P29RI   : in    std_logic;
    P29RL   : in    std_logic;
    P29RR   : in    std_logic;
    P29RO1  : out   std_logic;
    P29RO2  : out   std_logic;
    P29RO3  : out   std_logic;
    P29RO4  : out   std_logic;
    P29RO5  : out   std_logic;

    P30CI1  : in    std_logic;
    P30CL   : in    std_logic;
    P30CR   : in    std_logic;
    P30CO   : out   std_logic;
    P30EI1  : in    std_logic;
    P30EI2  : in    std_logic;
    P30EI3  : in    std_logic;
    P30EI4  : in    std_logic;
    P30EI5  : in    std_logic;
    P30EL   : in    std_logic;
    P30ER   : in    std_logic;
    P30EO   : out   std_logic;
    P30RI   : in    std_logic;
    P30RL   : in    std_logic;
    P30RR   : in    std_logic;
    P30RO1  : out   std_logic;
    P30RO2  : out   std_logic;
    P30RO3  : out   std_logic;
    P30RO4  : out   std_logic;
    P30RO5  : out   std_logic;

    P31CI1  : in    std_logic;
    P31CL   : in    std_logic;
    P31CR   : in    std_logic;
    P31CO   : out   std_logic;
    P31EI1  : in    std_logic;
    P31EI2  : in    std_logic;
    P31EI3  : in    std_logic;
    P31EI4  : in    std_logic;
    P31EI5  : in    std_logic;
    P31EL   : in    std_logic;
    P31ER   : in    std_logic;
    P31EO   : out   std_logic;
    P31RI   : in    std_logic;
    P31RL   : in    std_logic;
    P31RR   : in    std_logic;
    P31RO1  : out   std_logic;
    P31RO2  : out   std_logic;
    P31RO3  : out   std_logic;
    P31RO4  : out   std_logic;
    P31RO5  : out   std_logic;

    P32CI1  : in    std_logic;
    P32CL   : in    std_logic;
    P32CR   : in    std_logic;
    P32CO   : out   std_logic;
    P32EI1  : in    std_logic;
    P32EI2  : in    std_logic;
    P32EI3  : in    std_logic;
    P32EI4  : in    std_logic;
    P32EI5  : in    std_logic;
    P32EL   : in    std_logic;
    P32ER   : in    std_logic;
    P32EO   : out   std_logic;
    P32RI   : in    std_logic;
    P32RL   : in    std_logic;
    P32RR   : in    std_logic;
    P32RO1  : out   std_logic;
    P32RO2  : out   std_logic;
    P32RO3  : out   std_logic;
    P32RO4  : out   std_logic;
    P32RO5  : out   std_logic;

    P33CI1  : in    std_logic;
    P33CL   : in    std_logic;
    P33CR   : in    std_logic;
    P33CO   : out   std_logic;
    P33EI1  : in    std_logic;
    P33EI2  : in    std_logic;
    P33EI3  : in    std_logic;
    P33EI4  : in    std_logic;
    P33EI5  : in    std_logic;
    P33EL   : in    std_logic;
    P33ER   : in    std_logic;
    P33EO   : out   std_logic;
    P33RI   : in    std_logic;
    P33RL   : in    std_logic;
    P33RR   : in    std_logic;
    P33RO1  : out   std_logic;
    P33RO2  : out   std_logic;
    P33RO3  : out   std_logic;
    P33RO4  : out   std_logic;
    P33RO5  : out   std_logic;

    P34CI1  : in    std_logic;
    P34CL   : in    std_logic;
    P34CR   : in    std_logic;
    P34CO   : out   std_logic;
    P34EI1  : in    std_logic;
    P34EI2  : in    std_logic;
    P34EI3  : in    std_logic;
    P34EI4  : in    std_logic;
    P34EI5  : in    std_logic;
    P34EL   : in    std_logic;
    P34ER   : in    std_logic;
    P34EO   : out   std_logic;
    P34RI   : in    std_logic;
    P34RL   : in    std_logic;
    P34RR   : in    std_logic;
    P34RO1  : out   std_logic;
    P34RO2  : out   std_logic;
    P34RO3  : out   std_logic;
    P34RO4  : out   std_logic;
    P34RO5  : out   std_logic
);
end NX_IOM_L;

architecture NX_RTL of NX_IOM_L is
    attribute NX_TYPE: string;
    attribute NX_TYPE of NX_RTL: architecture is "PHY";

    attribute NX_USE: string;
    attribute NX_USE of NX_RTL: architecture is "NX_IOM_L";
begin
end NX_RTL;

----------------------------------------------------------------------------------------------------

`protect begin_protected
`protect version = 1
`protect encrypt_agent = "NanoXplore"
`protect key_keyowner = "Mentor Graphics Corporation", key_keyname = "MGC-VERIF-SIM-RSA-2", key_method = "rsa"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 256)
`protect key_block
m/UU2jUq+6IQ8t9i2Mu2iN/cmDV5ael3NGHw1gsqN4+JfpspISdIzYV1d/nSyaCn
aoL3VWEOKI4+zaVSyQ3kuUchZfx9JRa+UDP1LsCzKfsQOrUBuOTYE/EJR+Z0+QLa
RSzOfxxtQjPdi6Tx7ocdW+yxXwLgGyQ6DtYJexOU5MRB+MjoSgksYaKIAUuRI7dG
R2E+8bn//5lgo9leVRMPW//5Q9kyM1ieAQbR5O8PChA7cumFaELGnx5lxWxjmD1h
IwOiVdavPfsJLaJZKCKF2qICV5qE3Rd9o1tMEFp7bqaHAwl8BTNT9/YYTYEjE7WN
DkteHr8IF0oC/bj9gKMCsw==
`protect data_method = "aes256-cbc"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 27280)
`protect data_block
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
3WmMzF0tyOytqDBT6noI2Q==
`protect end_protected


-- =================================================================================================
--   NX_IOM_CONTROL definition                                                            2017/09/04
-- =================================================================================================

library ieee;
use ieee.std_logic_1164.all;
use ieee.std_logic_unsigned.all;
use ieee.numeric_std.all;

library NX;
use NX.nxPackage.all;

entity NX_IOM_CONTROL is
generic (
    mode_side1   : integer := 0;
    sel_clkw_rx1 : bit_vector(1 downto 0) := "00";
    sel_clkr_rx1 : bit := '0';
    div_tx1      : bit_vector(3 downto 0) := "0000";
    div_rx1      : bit_vector(3 downto 0) := "0000";
    inv_di_fclk1 : bit := '0';
    latency1     : bit := '0';
    mode_side2   : integer := 0;
    sel_clkw_rx2 : bit_vector(1 downto 0) := "00";
    sel_clkr_rx2 : bit := '0';
    div_tx2      : bit_vector(3 downto 0) := "0000";
    div_rx2      : bit_vector(3 downto 0) := "0000";
    inv_di_fclk2 : bit := '0';
    latency2     : bit := '0';
    sel_clk_out1 : bit := '0';
    sel_clk_out2 : bit := '0';
    mode_rpath   : string := "";
    mode_epath   : string := "";
    mode_cpath   : string := "";
    mode_tpath   : string := "";
    mode_io_cal  : bit    := '0';
    location  : string    := ""
);
port(
    RTCK1   : in    std_logic;
    RRCK1   : in    std_logic;
    WTCK1   : in    std_logic;
    WRCK1   : in    std_logic;
    RTCK2   : in    std_logic;
    RRCK2   : in    std_logic;
    WTCK2   : in    std_logic;
    WRCK2   : in    std_logic;
    CTCK    : in    std_logic;

    C1TW    : in    std_logic;
    C1TS    : in    std_logic;
    C1RW1   : in    std_logic;
    C1RW2   : in    std_logic;
    C1RW3   : in    std_logic;
    C1RNE   : in    std_logic;
    C1RS    : in    std_logic;
    C2TW    : in    std_logic;
    C2TS    : in    std_logic;
    C2RW1   : in    std_logic;
    C2RW2   : in    std_logic;
    C2RW3   : in    std_logic;
    C2RNE   : in    std_logic;
    C2RS    : in    std_logic;
    FA1     : in    std_logic;
    FA2     : in    std_logic;
    FA3     : in    std_logic;
    FA4     : in    std_logic;
    FA5     : in    std_logic;
    FA6     : in    std_logic;
    FZ      : in    std_logic;
    DC      : in    std_logic;
    SE      : in    std_logic;
    SCI     : in    std_logic;
    SPI1    : in    std_logic;
    SPI2    : in    std_logic;
    SPI3    : in    std_logic;
    SPI4    : in    std_logic;
    SPI5    : in    std_logic;
    SPI6    : in    std_logic;
    CCK     : in    std_logic;
    DCK     : in    std_logic;
    DRI1    : in    std_logic;
    DRI2    : in    std_logic;
    DRI3    : in    std_logic;
    DRI4    : in    std_logic;
    DRI5    : in    std_logic;
    DRI6    : in    std_logic;
    DRA1    : in    std_logic;
    DRA2    : in    std_logic;
    DRA3    : in    std_logic;
    DRA4    : in    std_logic;
    DRA5    : in    std_logic;
    DRA6    : in    std_logic;
    DRL     : in    std_logic;
    DOS     : in    std_logic;
    DOG     : in    std_logic;
    DIS     : in    std_logic;
    DIG     : in    std_logic;
    DPAS    : in    std_logic;
    DPAG    : in    std_logic;
    DQSS    : in    std_logic;
    DQSG    : in    std_logic;
    DS1     : in    std_logic;
    DS2     : in    std_logic;
    CAD1    : in    std_logic;
    CAD2    : in    std_logic;
    CAD3    : in    std_logic;
    CAD4    : in    std_logic;
    CAD5    : in    std_logic;
    CAD6    : in    std_logic;
    CAP1    : in    std_logic;
    CAP2    : in    std_logic;
    CAP3    : in    std_logic;
    CAP4    : in    std_logic;
    CAN1    : in    std_logic;
    CAN2    : in    std_logic;
    CAN3    : in    std_logic;
    CAN4    : in    std_logic;
    CAT1    : in    std_logic;
    CAT2    : in    std_logic;
    CAT3    : in    std_logic;
    CAT4    : in    std_logic;

    FLD     : out   std_logic;
    FLG     : out   std_logic;
    C1RED   : out   std_logic;
    C2RED   : out   std_logic;
    DRO1    : out   std_logic;
    DRO2    : out   std_logic;
    DRO3    : out   std_logic;
    DRO4    : out   std_logic;
    DRO5    : out   std_logic;
    DRO6    : out   std_logic;
    DRE     : out   std_logic;
    DRR     : out   std_logic;
    SCO     : out   std_logic;
    SPO1    : out   std_logic;
    SPO2    : out   std_logic;
    SPO3    : out   std_logic;
    SPO4    : out   std_logic;
    SPO5    : out   std_logic;

    LINK1  : inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0);
    LINK2  : inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0);
    LINK3  : inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0);
    LINK4  : inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0);
    LINK5  : inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0);
    LINK6  : inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0);
    LINK7  : inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0);
    LINK8  : inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0);
    LINK9  : inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0);
    LINK10 : inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0);
    LINK11 : inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0);
    LINK12 : inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0);
    LINK13 : inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0);
    LINK14 : inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0);
    LINK15 : inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0);
    LINK16 : inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0);
    LINK17 : inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0);
    LINK18 : inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0);
    LINK19 : inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0);
    LINK20 : inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0);
    LINK21 : inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0);
    LINK22 : inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0);
    LINK23 : inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0);
    LINK24 : inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0);
    LINK25 : inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0);
    LINK26 : inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0);
    LINK27 : inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0);
    LINK28 : inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0);
    LINK29 : inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0);
    LINK30 : inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0);
    LINK31 : inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0);
    LINK32 : inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0);
    LINK33 : inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0);
    LINK34 : inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0)
);
end NX_IOM_CONTROL;

architecture NX_RTL of NX_IOM_CONTROL is
    attribute NX_TYPE: string;
    attribute NX_TYPE of NX_RTL: architecture is "PHY";

    attribute NX_USE: string;
    attribute NX_USE of NX_RTL: architecture is "NX_IOM_CONTROL";
    attribute NX_USE of LINK1  : signal is "LINK";
    attribute NX_USE of LINK2  : signal is "LINK";
    attribute NX_USE of LINK3  : signal is "LINK";
    attribute NX_USE of LINK4  : signal is "LINK";
    attribute NX_USE of LINK5  : signal is "LINK";
    attribute NX_USE of LINK6  : signal is "LINK";
    attribute NX_USE of LINK7  : signal is "LINK";
    attribute NX_USE of LINK8  : signal is "LINK";
    attribute NX_USE of LINK9  : signal is "LINK";
    attribute NX_USE of LINK10 : signal is "LINK";
    attribute NX_USE of LINK11 : signal is "LINK";
    attribute NX_USE of LINK12 : signal is "LINK";
    attribute NX_USE of LINK13 : signal is "LINK";
    attribute NX_USE of LINK14 : signal is "LINK";
    attribute NX_USE of LINK15 : signal is "LINK";
    attribute NX_USE of LINK16 : signal is "LINK";
    attribute NX_USE of LINK17 : signal is "LINK";
    attribute NX_USE of LINK18 : signal is "LINK";
    attribute NX_USE of LINK19 : signal is "LINK";
    attribute NX_USE of LINK20 : signal is "LINK";
    attribute NX_USE of LINK21 : signal is "LINK";
    attribute NX_USE of LINK22 : signal is "LINK";
    attribute NX_USE of LINK23 : signal is "LINK";
    attribute NX_USE of LINK24 : signal is "LINK";
    attribute NX_USE of LINK25 : signal is "LINK";
    attribute NX_USE of LINK26 : signal is "LINK";
    attribute NX_USE of LINK27 : signal is "LINK";
    attribute NX_USE of LINK28 : signal is "LINK";
    attribute NX_USE of LINK29 : signal is "LINK";
    attribute NX_USE of LINK30 : signal is "LINK";
    attribute NX_USE of LINK31 : signal is "LINK";
    attribute NX_USE of LINK32 : signal is "LINK";
    attribute NX_USE of LINK33 : signal is "LINK";
    attribute NX_USE of LINK34 : signal is "LINK";

begin
end NX_RTL;


`protect begin_protected
`protect version = 1
`protect encrypt_agent = "NanoXplore"
`protect key_keyowner = "Mentor Graphics Corporation", key_keyname = "MGC-VERIF-SIM-RSA-2", key_method = "rsa"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 256)
`protect key_block
si0ZkBKDKjAzqgQamsYYasDHoucOqrgDIGICXod6It6omREtWZ1Gwff/ybCCKMfp
lfmc8M9FL17cYgnPK7pN/xG5wALefesD2NF6XTooMKxMUHBLIfbEiTt0tkbwGSTj
T4t6Ji+cnmSav/WTfEfmCVTmHtoqSx2cEO1tQj8ZX0b5SzkLcegd3o/B44bfLuOf
P0S5pJOn5vkXwbWVfm2pD6tV/ZYKPgOB1fy8keId5iQGQQdAEt2cnYB0GSJgBXVP
rAj3UWGAcD+7ALmvlMclB3sjLfyGlbFZTaztjXIY+nJtRSpGuYRwXPsQ6OEpmNcv
TKuI1eyWB7zncsM3mrymhw==
`protect data_method = "aes256-cbc"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 10960)
`protect data_block
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
yS7yL2y1q0i9S86yizT0dkcVIh0YewYZiONDcyYGllx79r5ZdQ34TToegK85CVSS
eoTcPlfPFHRUz6pyULYoFnscHmHPLl0cB/Z+PgiYGlgPbMTLQm3+BCgJ+q11Wi8c
sqXcbHJOkIvtc3BApa8QaEv8MvO8dz5wBKiYNUAbDGDwDmZUoW7QjzqVi0r4AVuX
vkjPCUzu8Qs6ZFrxRbzML+mAPzQVe6RK3j4a04xEu9bIG/CwLitUO1yzJkL+rkFu
rCOwM9WvqqRJ3Zp1ZCUXz1JInqS04JoHTUU9TsZTohfXqF9yoM90d66/UDr8ODV3
YVZ/cOxQaZN8c5JjSTBtCuEWJkb2EHojs6E1rbwJ8OeEFM8hK9ee3UndzStfmWmY
n7C7uorp2Z+yvtGfnjQjnJOsFYb08I0n5zwwJYPeUtV1t2kuVew6Gjdr8TvcavO3
JsqDCPVJu+qy724hPQtlR7BMSHBWtEd66RSpL9np1knREyVOCRTPw/Jar8LFYcRY
C1emjEcOEOjzv5ZYKCq/evfKqLGej5B6x2+Miz9YUIBiiXplnIY7ZZ6G3nBSgYGb
Olwt9m64wDIjtlkHvSZ2wSWRZg2ZciBJBlwKBVe/ezUzRX0UQZ7FgggEcOjHBq5d
4CpiDJuGltxXfEKM/A5cuX0J/+o7wd6uoFV3r3stz32PELjHfwjqU+TeVjsudSld
AhTFNCO/ZpPLAyHoHEl6jNqjW5bz/Day3A2tvv6GNTmoNEtxkOCn24GOCT9E176V
C5YLVMi6mNNLOd3OTiDGdMVwHpFRnTBSR4zZpakNDRRIUk5vDpEY9vncWMXPjga9
g9q2somQxQaalP5mKW1dhQ4B4RW5bUfs7aP3+zbY5rXdoVF6Dlc7nT3991CkDwKb
7Gd46CRetp6EBhhEShnYcaaCBQbARCEJmxXQ2XR9aINJX3SrtoLJLdPewWItgwFW
9OKmInx3Fvby8qIfCdmup80xk+xpF5r4MQnmfwrtMj5gkv/7UWUaCokxMGxiIom2
Fi90E7/jD+jDgVkaUZ6AEN4w5sI/A2j6Vy44W6IEwyFbC9LgPrUjlqv1OUx4KD46
K4Da+NRvfmWiqTDpeWg2mJ+7bfKfPFufUrRdCFZzY+/Hva/o97aUHFrjc7hRlKfj
XzOhoUmwht0OdXmdJIohrseyjaXkFg4z6zhMnYVGRCNa6XDe/x49MdxrK1t/2YEQ
FEaPaK5LOoB3IcsLEinjhTKEOpELA+N3U6OP6MxQC0F3bgy9xCmYZUw7suH7EbVq
LcGodMnoMphSL7E1OuHsY6Alvj37OfnNzYfWEOAna8F7bwxwFpPxaCXEa1aCKwpJ
jGdycavL5bbG0fKGYTRMTiECVpXACPKvqx5PShSJCDDyspEA8cp16LvP7b6bZD6F
DD055ytzl5Sx+wub+cV4rHffwnw/WZN1XMiCHora20p+nvxhhmBHBPnEBQQ5IIyv
y+jzus+ms+jCUlf0wRLh/PifGxdCSc1xdQ5AVWbxgpCD4KZVegdZ0AOmgS8JpSDT
9BS+4daU/Oo1IPb270VFCGwLtYcaFjc4SUKdFh1mxXYZrs+V1aKOlBOyqx2aZ/c9
sS5evS5k+wSiNE/OTZhkQUPcdLVSmlaonbAeGt5833USoQPOKNwEuBMzjRzc+JA0
gZ4mvZzzZYf7wfeJGkn7bA+r/UfVZtgn5+uAUw3dCfx4D22MhPpOttdXBHDv8Ti9
XPP9DvTtqOrhXeRUoy40YAEhhrrYHCquHoQuIEeyA+KVDjS1yPwqOETEVLrWaQgw
j6chsLaGjtPS4ZD7+eUVUch4+zsOoj6aNimXIQBRoQiaEvTxQRjtu1RSkKl9vw3/
j5g3xH2kaBPXOwNv5o6HdVfeWAtPvectW6MFKvTDDhELMn5VlhLouiKywvvetruH
+GNNsA8v8Ug/TtPMIEPdY1igNbXfhFUgj2ukx7OvHlplxLbXv9448AyVvW8pRchL
q7VKxzcO6vcWGb4HU77QvsD01vPpm4K/u0mqBdWxfKJMVq/xbAa+ER0vs8pgBTTu
I9n9vixdBQpOUyxv25HJPlNeo8/CRtGaZEXEwVSNHvyGVADvtbFN9V13fi5aADrn
DNEFzYhbgEYD7vpLqFoYEeh3S9o8HiUpUO+hrxkhUvd8S/ESxxFmiBPQCg/cWvhX
bvC8wEVB3ex9EebKjTU/tbYetloFlKR+vrJKUijSypfF8vd1dUt4Mi7ruiNGuCOp
Ur6NRChpYUsbeZKk2P3HpYJitlyWi+XboeFhNX8TZQmUXfAPH0eBc4lHTbgZMfCH
2Nj5n8/G2kNjHsWY88B1NIJY1wna+/B6KjmxpwXWXFjoR5Pvv+o2eNQNHi6d900H
X1f45brTzb1N9c5gcbhraCKgLzQjq+EZuEvrSvwMn+qgivyllYmcW2cyaj+o7EM8
Ox8/elq7Dg/quuZO8kIPGGK1F7TDJhwTggL/MWScFSj3fLeR3ofyct+P0T2dgcBl
y7BP9wf0VK0xmCyurk1FY3N5l/jEkNvpLp82Iswj8CwfLSHTEAjOW+to2KnsTQio
umAGpcdLCBEeOUhmWX1eS/c5gs3iHb61EONvrz6ClQn53n7qlKFbxUsji8EqVtTn
TrAE7jS2mdvk5IY8yDcjw2EFyV4PIxxFWv7204YHHMSgpndMvsY974ammg2hpE7K
IPHlFJ95i9/AWt77sFKtn1XBIJvCJgY03/Ekpj0qmW/Ue0e7m50rY/lwEiKqXN8c
aVHEpdsBiZZPkBbIwGG2Uej4F3TGEhWqPbWdaZUSuH1AKV/xWIGUkjH/kNpffjyS
podKO9cLcOIpW40PZe1z69hGbDA73T97ufZdgxRpeW7CLSbluGCsJ9M+t3QcLzxG
swz0KlBzM0r5wtDNiL6ZSE/gD7IniV7kSG2jzyp+pMZvsCc66SMyKuEBHnDdeZBG
gL5duhq2d7jGEg7ANgwOblzojQvD/sX3nGhF3+6ac30+QUgziJ0cnf/7S0+OVbJ2
ERkGNiBnEIXuRelpeJNt2pPJN676+yfdNyLS8bPEHwPCghOtjmMSy8Q6jBsY9aG/
zapARWq2MSL1rz51Q5xJiddmLdpVm8H9FvgujjDlbsJ3iRxg4zRKKm4Le1V3UA6D
flt5uXGs8u+JQgen6NF/xpMqPOutYGVLREvVRGfM7GSSbf35VgBBDA9vOrDs4YZh
O6Fg4Vt6OZERarUWLUyOac80jemUJ59/PKFTLqiLBMMP94Q0Tp9nd7mcvB98TeSy
DCQK6h6oCWGTaErpH50SHLO6toGr5m5ksND4faj2UqwX2l6gKBM+Iv6B1NGZ2SBK
cInk4GDGLEgVZPBYedJFj82nwt3ddSzlkz6Uh3vhQVHexMPI+15Bh4gbz/PDAS8A
B3e715qdOt3aAOAgoAGGOwdyiunQOUH4xLNVaiWiM/RWLc01Kp1sDTi5rwFGnt3N
bNcXSR2s+xqqyBz5FiaIe2AyaFv79y34ci5kZLo+64MwypP7DLLTpmsjpyribcTm
QFqBMdbJxqcDEKuiALWTb9APBQCeXJc12Kj5xoie1/kEL75B5s8itE0iOGRmyQpf
RLRUpTku+irQy9KkgKhTnUmJD4Ix8+bzCqoBMSsXA7Hw4Aw2UZ4w/dC2XUF6gR23
qmPcKe7l85SL0Z4Hwvpkur1nlDcfjEdASg+gg4IR9ZkkEM+eSq2p5irfpbXb/KhG
rTHcVymKJ7CD9PDrW0R09bRulY6N1UPO9EvpVUZRd3qLXT/aBTQQksaAPnwv7dK7
5ciotJgSljYdI/KwjGbRooTgTW4p88Q0lyTyGFooARc/nfNhCJxd/7ZKgmfFfzXW
mGviMHUKifCN3UdSBJ8iavFOrgjHbzF1NqdtzVXm0i2IOFfvAtj5pJpQJV2Z5aQE
7a/PfR3cgltFmN8zREKjvWaJOUiIxzMRIeCQGJ+D+SXOhJTpZfMrGMS4jRM1pxWY
NiP/ZPiPmSyfnfr0nPpNj8/QM+J1rt6+Z3NVlgfKyZwLUOMd2T86N6h5WrvG2q2U
/qtWQxPiU3v01SM+Y1KSfv4SfA740XejsO6lM5DO7mhBox2aCn9wrEn9HsRd56yP
hQy3ajDUiBztmx9cmmq6UXxjZkHMb7FVzu8hGE1CNSUWtuyNCE+xFrIzEHt7/jtH
skgvJ2GghCr38WzG+YwLJQqYClmVsPNuFxU3fgSZLw2PYp0RRa2Vy5zUIz1XKLGh
52RdJskJ9aUv1Bgyje59n+nVE8ladfGbceL5C9lND8TPyEtVFSKPufLO9JRFBqrb
eZj9e+Tys3eKaiWXUgQlV4HibbYq+5j1bx23QO3O4iRljlEUMalv8rEfFkIAZ3GD
cSK0vmKnuDSRWrLW4a0FbxTeCL9dfAO4f798gMKM51E5gLtbZZjEmwH+mVdhHpNy
/dsRbmYQVulOLeNkw1gMV4qemYGuwRU4jG0CIToa9RvOGhmBE0YDAjT7+bs0AxAa
Zg9nm0FZTrArMkgOlj+Qx4ow6OpDvNzy/LjNHWy7+DUBcqnmiOgEXqv9u9xNrLSx
aRXdqaCa2BI5vshk4lm4VBjCPgP8K+UhJJMZetw3DnEfHiwLW8iq1b30JHY7clR1
AOeLKdiNbbXfQalhzL0mQtezdKiFzWJ/B94+tgRfUSli3aqmTKGG7p8ubYSKCW2R
MXXx/DaJ/WaRJO0fn+RYa+PQrbB6C3fdhngzg6U+S3dDmkAv7IAVMLCWZjNE0oYz
I2Z7qHSMdIidQpVvZf6TFyefZx/NNizijCe/o+eEsNKp+vrETFZdkGgpq/c+GmSD
jNv6Vh4zzcaawnLKpgDQcDsjHS87+4cqGuUesWwWejNppPZo2gSmUT6axQA8yZno
/LEt5jvEl9iAch1Bf+jIGloeruYHXc0TuoJ8S1lkTwhkStgZtlAltp0llkMlebRn
bf36ph0X92fbJ64o9cPXoTPBpxYwrNPMtA6rNvkiNV753V52E9OMJ0OGkwlTur4Q
h1u0qNf9tzjo1531TzcQUO0NaGGgkW+E/N6NEp0hnJHY6eqRcVYtjD/jyoL4viTH
zEKNjxPRepQFTXCEUQNMuAM8JItXLL5OHQqCzIvXRlz1yB18Lrj117iK+RR0KXE7
8w4Bv8oRAvSwWTajPzMsnEjYBvJZzVYl/qMsqkTAc8AIgFsmAMorEldvf5cQdAbs
OmfLiHkNzrqaz3zgotDPvEzdU4fX7bkZp3rR/m1ocwm982fbRfNQdGniiHcvomgu
FDU/SFFEvBSyUdVEXIa0gh6yHxgbZJ1ee2LRnS/Q6so93ad/qUOhqluQu4xoSR8a
eh/6+eYNnVHPQRY3FquqTn9mesrp21QLG9H4MxkGmAFo+h9RRzIiQXK/VV7ZRvE1
3PYQQFAcdluCxDsF3cprDn/pSwmrymescXNjYpVK5xNLRIV3AfgY5F/n52dFXRCS
0VVdl/sHEzAIaWLsLV3cc5JMnWBDHh6m6vmPCs7LIfF7UuFZ+1KjBLeeJyoE8jDH
Chl7QkZT1mMUWg45AH92co4EojUHQaTU6IuXcXPboU+DT9T0qEx3BWph2l4M/8fS
lW41hr3SoV7kdSHFRjKPzoql7ekQl6SfPsBTk1JqLbdywTbNWVFA690HGPUZ5rbH
O0T2LJtCtKIBecCmZ/a4HuYYd160jE5e57N1nKS02jZJqnjQmUDBf/fuuJj1Bw7l
DNrKTUqXgcpJlSXQYgzUDZ56bZTMJe0+Iy62VWHyoj5EvfUV++vW1lkL8XpX4laN
nEpxLeg09d3RNOXLQhKqiN0aGOZEEyGEn5ZWEE2HtvTwEjZadGYClIf6OwijAzCk
RAqgqvifNTOZ4IROoEEQJ49J2sL6pYvzgN4l8i8r9/3nwRXzVgzk4poqmQaaP8fS
6gLkfY5JQHc+9bEJTq2VYa7+l8MESwlLs99JAZ2ojrbuGec7r8VxKS6Du5hxvpnU
kmz/HZOdpECC3tlzmCzuvGtz8ao7rj6ZvmC4t2TP0rGkZ7+hJrImFhI1BTx7hKfQ
pLGbRfUlHqYmG2Z5yxddznmSUok1TA2Q9WVONVODdmnYIZvFK8rCdZfepSM8Bgrq
Ok2QsWO2CA32yO58C9i6uOwhCoMZz3tJRvrt4Zi7aEonF8u6m09aMlhHz5/w3aj3
vljFFdbhWN/krZyseaI41LWRLBh3rrTyR7atBPsj8V8xvMnPkSMJLM5sE4hBp4dG
ddLpcMxnebtOSUf/mfb9YMyJqALCKFcPd18IPZVjR0byEtp2pO/WdnW0d2+lZz+I
G06JBwj4Bbdmf0hhnG6QgII+6o997NhnZaBzhYXea4+t6Jzqal68S/S4D1m5+LEn
W1kPdX5W4YBU90S9IZ7YdcPS8DY9nhNLWul8c/4z68xvNhAQz9uX3eQp/sX+RmVO
++dF+7ES65ssJkASpLFn2rGMUs7TRcMptv0mw+GBHRqdxlGj9Ek8JSQxHDJxlb+c
JOEQvJb+62WfGYywdPZszlu6Lw3WhkFuzcLbVmC9BH3XxIrHJhz2sbEib1RElqqS
Qr/VYvHZw46efR+awwx7RZRu/g1lIlz7+qfGFDIZXx9EGpFPxeOeb0EssIqXIsFA
9h0kRglPbjRwmnHRu2hpdJbgbpwVNCmxmHFtJNWwjc90VJvnRjhPhbmSyj3kupcH
T7ilaZUMK/FPrSuaETaexmCmB1uraz/IZBuXytECBtlTDyhvkkDS4iMjr0ztoqUb
vhopux9yWcERSIOfKHr8inUjWXotD2SGSGk/a1DASkk2XsJ0h5wchWRifpTcjfsO
D3dq5Wc4e98Xzeo8IbhJ4apE3haQLCBo3d5NkdlIf4gqbC0UWnOTPWSlhdiyUmTp
v+3LtdBe0oBsS4TPQl0DB8DvVyn44ZZk9lGB8/VLR3Ez0Trc5f/GzzPYgrVg6+DV
zH9XD6l1c8tlwWmfp3YJXEDr2jtLZWdzzvBhMQmw8jWlpVT11tGLiwPw61XdtoLH
vhMTywLL6qzEG1iTCXjqysX9PJjnOrVesiTS9zvuiTmqeYp0AC8YSfOXL3OvJ6j2
3WCO/fOUwsz3oHDWpPtbhC5+SVaLvllHpTw5C5G4LR+LK40Ij6TPCxXHhta3AFyA
eK7WZ8VenaTkhq6AWQ1OpGMqi3FrqIUR6i/fhMAXMp1kAL1wo36gkiCjr1kPP8/s
uYSjcgPYSjwKAad6S/42eliT/f/IODPJAUmor8wWFgCK3hA6h+MI+2gz6NYP+57b
zjoA8IUjuXkvW+Al40CMJf6yk9DII0Kbz/eTcccwRrn98AdrH8QX5bF8EFXRatrG
1V2ebhXkrmjcFgdlxiShfKEd4E/1rRHkwxDni/VqOJ5P7badT1vGlzyPwcYSV5hg
V5IsvF4lUycQwgxRYRNBB/WGmsvGKj5OI42eb9EIzwNW70bTg+Wrnoum+vopNX/R
YJMWi5aS0d46c+lJ7hectyxAcbvIHsXdzATka98WdJGAmTTBTWk5QXwkCr0ZNJ8V
IMkdqRp1chZH5294hkV0ZzWvlmk14cpV3pwAGp4hv6A6wuPenx6hArIvgmg15mjq
n9m/a4jmK3UQLYIi7ZFkvLrR2PMcAvhdvmBqReQbGFxIWnC6b1PLwqweVr9hyrJ6
fsJuKYLEBMgMaAJsvGLvBK44PLh8zPSs3CxYLDg8GveHIj2zB/yzMKl38kWZKbhk
JAmD4ziDsU9CWITnPNEJsvqUy7CjX8vaQFGhsMOyWeRVl+WwSNkH28l45XpWIU9U
4KrD+oCyaTHrgsAzXKjaZ/7xz18KOMyrq/1+8xP6kPO2kQUahrP9C76FktY4Ahh2
sKW20uCOTQ+/DJpYUKk3zE6rGw7T62SjfFzzpLL89EYMHaPsoV0jM3djh+kjOHDy
venIzS8BdQa1pj1fOvHIKhZnadjGIceAednfyQg8rQhh6QWgxfOHy9xhmp1p/RdI
loAVH+qX8vjYWL6lo/gUlOzkKYON2dV+MktKcdgPhC1pJUBfq9lOSCxxY0pqRI+F
zXq6Z68K8MNW+sBDuzMlh2jk68Nki/rXxNCfhAj03miksI+kjVYeayUvnUDxS0Fq
ppMbAWIG/xu/AKh7cWAJqPKQr8roEpnaki8Gi1x7H9Lb9weRB9ZonWYxEYILlIED
QYEpbwHyr++aPFmw/l4duxjKH366v49H9BgVtU8saoHG04CthwCED/5dXV7l/gj3
y+tuQ6qqhQZj5k2ybWFocCG6KyKhkG1zq3B+xo6Aq0sIYQtXxii5rw1Wd7cSH7MM
VjyqBAeVIYtldm/2IHQz28S/9XW0aAtiDPszUvkaz3H/xx9LZBaxCmxryc8KOxGr
MfhbOE7/8TYTJ1HJBGrLySuGC7k/UB7ILD/ao8y41JX0ZlDfOl3b9x3pQIWu259w
6cSMQ0ZthxcYzzjoKwAzV+4AYTuS4HijMfRXa3boLaUK1QPk86xC38t4BCdLD11w
szyksDd9AdepPSJSuTXMf9B5FCoKyBoSqVjqySpEtdPhHer/N1bG2Yn4Y5NSiTau
rZvCQ08uwpmEuYEtH96ICg==
`protect end_protected


-- =================================================================================================
--   NX_IOM_DRIVER definition
-- =================================================================================================

library ieee;
use ieee.std_logic_1164.all;
use ieee.std_logic_arith.all;
use ieee.std_logic_unsigned.all;

library NX;
use NX.nxPackage.all;

entity NX_IOM_DRIVER is
generic (
    epath_edge      : bit := '0';
    epath_init      : bit := '0';
    epath_load      : bit := '0';
    epath_mode      : bit_vector(3 downto 0) := "0000";
    epath_sync      : bit := '0';
    epath_dynamic   : bit := '0'; --0: off/fixed delay, 1: dynamic delay

    rpath_edge      : bit := '0';
    rpath_init      : bit := '0';
    rpath_load      : bit := '0';
    rpath_mode      : bit_vector(3 downto 0) := "0000";
    rpath_sync      : bit := '0';
    rpath_dynamic   : bit := '0'; --0: off/fixed delay, 1: dynamic delay

    cpath_edge      : bit := '0';
    cpath_init      : bit := '0';
    cpath_load      : bit := '0';
    cpath_mode      : bit_vector(3 downto 0) := "0000";
    cpath_sync      : bit := '0';
    cpath_inv       : bit := '0';

    tpath_mode      : bit_vector(1 downto 0) := "00";

    location        : string := "";
    chained         : bit    := '0';
    symbol          : string := ""
);
port (
    EI1  : in  std_logic;
    EI2  : in  std_logic;
    EI3  : in  std_logic;
    EI4  : in  std_logic;
    EI5  : in  std_logic;
    EL   : in  std_logic;
    ER   : in  std_logic;
    CI1  : in  std_logic;
    CI2  : in  std_logic;
    CI3  : in  std_logic;
    CI4  : in  std_logic;
    CI5  : in  std_logic;
    CL   : in  std_logic;
    CR   : in  std_logic;
    CT   : in  std_logic;
    RI   : in  std_logic;
    RL   : in  std_logic;
    RR   : in  std_logic;
    CO   : out std_logic;
    EO   : out std_logic;
    RO1  : out std_logic;
    RO2  : out std_logic;
    RO3  : out std_logic;
    RO4  : out std_logic;
    RO5  : out std_logic;
    LINK : inout  std_logic_vector(IOM_LINK_SIZE - 1 downto 0)
);
end NX_IOM_DRIVER;

architecture NX_RTL of NX_IOM_DRIVER is
    attribute NX_TYPE: string;
    attribute NX_TYPE of NX_RTL: architecture is "PHY";

    attribute NX_USE: string;
    attribute NX_USE of NX_RTL: architecture is "NX_IOM_DRIVER";
    attribute NX_USE of LINK: signal is "LINK";
begin
end NX_RTL;

----------------------------------------------------------------------------------------------------

`protect begin_protected
`protect version = 1
`protect encrypt_agent = "NanoXplore"
`protect key_keyowner = "Mentor Graphics Corporation", key_keyname = "MGC-VERIF-SIM-RSA-2", key_method = "rsa"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 256)
`protect key_block
Cqh2tabNTlvWdPwqyHmEMSd1hPquCDPuwxXve2EFI5bodgHbqFPD0O/aHpaYJ4z+
cPj5CFmacIBTovSlIKSGPAJy505Wo7ueBnXq2m6kRaayB0RBAQ0ymPApo1YTHc45
GB8JTk7FRLWRf5TFdXLYKRQl0x9/lJF4/+2OszI3X+dImq2NX3QuAMpU09hUWUsn
8nZUp28ktNO7xQJi2k8x2S4jVuiZtyfZRhUjEJx5DJeDyjM6OLPSz5aZhp7Hz/Vx
/dymO4FmRNurqjxxmHevIOgfsv2zUwsBMfS4GGoB+VbpESWZh7qTvSgUR4ESt+zm
IxIOsNV1kX+zDlj1DgeUEw==
`protect data_method = "aes256-cbc"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 19088)
`protect data_block
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
`protect end_protected


-- =================================================================================================
--   NX_IOM_SERDES definition                                                             2018/10/15
-- =================================================================================================

library ieee;
use ieee.std_logic_1164.all;
use ieee.std_logic_unsigned.all;
use ieee.numeric_std.all;

library NX;
use NX.nxPackage.all;

entity NX_IOM_SERDES is
generic (
    data_size : integer range 2 to 10 := 5;
    location  : string := ""
);
port (
    RTCK  : in std_logic;
    WRCK  : in std_logic;
    WTCK  : in std_logic;
    RRCK  : in std_logic;
    TRST  : in std_logic;
    RRST  : in std_logic;
    CTCK  : in std_logic;
    CL    : in std_logic;
    CR    : in std_logic;
    DCK   : in std_logic;
    DRL   : in std_logic;
    DIG   : in std_logic;
    DS    : in std_logic_vector(1 downto 0);
    DRA   : in std_logic_vector(5 downto 0);
    DRI   : in std_logic_vector(5 downto 0);
    FZ    : in std_logic;
    DRO   : out std_logic_vector(5 downto 0);
    DID   : out std_logic_vector(5 downto 0);
    FLD   : out std_logic;
    FLG   : out std_logic;
    LINKN : inout std_logic_vector(IOM_LINK_SIZE-1 downto 0);
    LINKP : inout std_logic_vector(IOM_LINK_SIZE-1 downto 0)
);
end NX_IOM_SERDES;

architecture NX_RTL of NX_IOM_SERDES is
    attribute NX_TYPE: string;
    attribute NX_TYPE of NX_RTL: architecture is "PHY";

    attribute NX_USE: string;
    attribute NX_USE of NX_RTL: architecture is "NX_IOM_SERDES";
    attribute NX_USE of LINKP: signal is "LINK";
    attribute NX_USE of LINKN: signal is "LINK";
begin
end NX_RTL;

`protect begin_protected
`protect version = 1
`protect encrypt_agent = "NanoXplore"
`protect key_keyowner = "Mentor Graphics Corporation", key_keyname = "MGC-VERIF-SIM-RSA-2", key_method = "rsa"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 256)
`protect key_block
JNlu5+nZjFTjJ6fnlpNUYFzWYiXHHfxWXAJ3tiNy50QFRC3pkKSaypHnPgINEH+Y
7dQYe7FyMCtrNGsIjpcIUNy2j4/tgm3I2ZjQ5KlZ1GalQkyL08yrRBUVBWjr0ZWE
Ly8ff6CVEqaUPc7l/FpqV8CnmyvqriA5BYItv4UWvh/5aDWZ0mGiQwFuOF3e4UeT
UzxvzSWYLs+ef9cEh24eddrUnsyZ2zWNqYVLI76OhCJuK6ziEJ9XWE+IIWCIx1/2
krK7rwjjiQbsUsaNx4jo3K/ieeQyqZBJpPLVhPsBtXf/idPwyXB7iMK5Fqt9Jny7
F6ZOxHSJffHEeKytxqlR+A==
`protect data_method = "aes256-cbc"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 5872)
`protect data_block
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
HvangciSh1axVSi71KtkPg==
`protect end_protected


`protect begin_protected
`protect version = 1
`protect encrypt_agent = "NanoXplore"
`protect key_keyowner = "Mentor Graphics Corporation", key_keyname = "MGC-VERIF-SIM-RSA-2", key_method = "rsa"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 256)
`protect key_block
lqTX/qlUUhQTZ3duXmqZWPeOFWv1/0nEJeTqZNqmjDfE0I/p4SShoviq4znWuPN3
fatl5YuFYukjqn5YeHPqMYY3sI50Gz2cTk33fUmyLjHaJGyRsA3a0bwvcnpuLYwd
dC2NiW0LVck2JLlLclhT+M+Hxp+rltslTy9Dklz18r411PWgIVYh08c4gE0CkgQJ
8+DdNzjqTp9EEaKYVafl+hHY0XAZYb7WoJCWUZTcpE9+1nm25SwUOisjKc9Zsdst
x03gfNz4JXku65OJnkjm7ocgDfRuR+wCV4hTOyo6Y4d38m/kvmMb2AWeboBtYnMj
3kBY8px0gawQi8uShRxrNA==
`protect data_method = "aes256-cbc"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 39024)
`protect data_block
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
`protect end_protected

-- =================================================================================================
--   NX_LUT definition                                                                  2017/09/04
-- =================================================================================================

library ieee;
use ieee.std_logic_1164.all;

entity NX_LUT is
generic (
    lut_table : bit_vector(15 downto 0) := B"0000000000000000" -- truthTable t15 ... t0
);
port (
    I1 : in  std_logic;
    I2 : in  std_logic;
    I3 : in  std_logic;
    I4 : in  std_logic;
    O  : out std_logic
);
end NX_LUT;

architecture NX_RTL of NX_LUT is
    attribute NX_TYPE :string;
    attribute NX_TYPE of NX_RTL: architecture is "PHY";

    attribute NX_USE :string;
    attribute NX_USE of NX_RTL: architecture is "NX_LUT";
begin
end NX_RTL;

----------------------------------------------------------------------------------------------------

library ieee;
use ieee.std_logic_1164.all;

entity NX_DFF is
generic (
    dff_edge   : bit := '0';
    dff_init   : bit := '0';
    dff_load   : bit := '0';
    dff_sync   : bit := '0';
    dff_ctxt   : std_logic := 'U'
);
port (
    I  : in  std_logic;
    CK : in  std_logic;
    L  : in  std_logic;
    R  : in  std_logic;
    O  : out std_logic
);
end NX_DFF;

architecture NX_RTL of NX_DFF is
    attribute NX_TYPE :string;
    attribute NX_TYPE of NX_RTL: architecture is "PHY";

    attribute NX_USE :string;
    attribute NX_USE of NX_RTL: architecture is "NX_DFF";
begin
end NX_RTL;

----------------------------------------------------------------------------------------------------

library ieee;
use ieee.std_logic_1164.all;

entity NX_BFF is
port (
    I : in  std_logic;
    O : out std_logic
);
end NX_BFF;

architecture NX_RTL of NX_BFF is
    attribute NX_TYPE :string;
    attribute NX_TYPE of NX_RTL: architecture is "PHY";

    attribute NX_USE :string;
    attribute NX_USE of NX_RTL: architecture is "NX_BFF";
begin
end NX_RTL;

----------------------------------------------------------------------------------------------------

library ieee;
use ieee.std_logic_1164.all;

entity NX_DFR is
generic (
    location   : string := "";
    path       : integer := 0;
    mode       : integer := 0;
    dff_edge   : bit := '0';
    dff_init   : bit := '0';
    dff_load   : bit := '0';
    dff_sync   : bit := '0'
);
port (
    I  : in  std_logic;
    CK : in  std_logic;
    L  : in  std_logic;
    R  : in  std_logic;
    O  : out std_logic
);
end NX_DFR;

architecture NX_RTL of NX_DFR is
    attribute NX_TYPE :string;
    attribute NX_TYPE of NX_RTL: architecture is "PHY";

    attribute NX_USE :string;
    attribute NX_USE of NX_RTL: architecture is "NX_DFR";
begin
end NX_RTL;

----------------------------------------------------------------------------------------------------

library ieee;
use ieee.std_logic_1164.all;

entity NX_BFR is
generic (
    location   : string := "";
    path       : integer := 0;
    mode       : integer := 0
);
port (
    I : in  std_logic;
    O : out std_logic
);
end NX_BFR;

architecture NX_RTL of NX_BFR is
    attribute NX_TYPE :string;
    attribute NX_TYPE of NX_RTL: architecture is "PHY";

    attribute NX_USE :string;
    attribute NX_USE of NX_RTL: architecture is "NX_BFR";
begin
end NX_RTL;

----------------------------------------------------------------------------------------------------

`protect begin_protected
`protect version = 1
`protect encrypt_agent = "NanoXplore"
`protect key_keyowner = "Mentor Graphics Corporation", key_keyname = "MGC-VERIF-SIM-RSA-2", key_method = "rsa"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 256)
`protect key_block
tFwW9FO9MjeY2w5KlaPy0bl71HP3N/+2trShApahnt3AxAZZDYrfjAxZCeB9lXGo
rpaiT5QN7gNoWrJWTFOBM/m4Rm2C0emrtLbmM7ozBCaGqRnPwS76gm0q1DHrKB64
lQi5zZiPNYbT1aYrXX/mN8dSFmLV6Q6ZPDtYhdl3Atg/3bWF6H84MTk7an5dbJeI
dFd723YOI8i5M7qkmmU58tWGnVrKEg4xP60VHiYpaP2mJRCzt3kk7sXFfBCJoezP
z8tNWB3WWNc/KJMp39fxEliFu0wSznmhfoBSq+Efd6siiZ8m+icoJe4bwCEUdcht
H+cwmgY57DGflXU5UXYMSw==
`protect data_method = "aes256-cbc"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 7216)
`protect data_block
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
hrRlDdQ1rJFHHZYJyXMr9A==
`protect end_protected

-- =================================================================================================
--   NX_CY definition                                                                   2017/09/19
-- =================================================================================================

library ieee;
use ieee.std_logic_1164.all;

entity NX_CY is
generic (
    add_carry  : integer := 0      -- 0: low - 1: high - 2: propagate
);
port (
    A1 : in  std_logic;
    A2 : in  std_logic;
    A3 : in  std_logic;
    A4 : in  std_logic;
    B1 : in  std_logic;
    B2 : in  std_logic;
    B3 : in  std_logic;
    B4 : in  std_logic;
    CI : in  std_logic;
    CO : out std_logic;
    S1 : out std_logic;
    S2 : out std_logic;
    S3 : out std_logic;
    S4 : out std_logic
);
end NX_CY;

architecture NX_RTL of NX_CY is
    attribute NX_TYPE :string;
    attribute NX_TYPE of NX_RTL: architecture is "PHY";

    attribute NX_USE :string;
    attribute NX_USE of NX_RTL: architecture is "NX_CY";
begin
end NX_RTL;

----------------------------------------------------------------------------------------------------

`protect begin_protected
`protect version = 1
`protect encrypt_agent = "NanoXplore"
`protect key_keyowner = "Mentor Graphics Corporation", key_keyname = "MGC-VERIF-SIM-RSA-2", key_method = "rsa"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 256)
`protect key_block
DXb0Epg7oGVpcdO9r6pL7MwFwYeqnOrr7W4yWgipmUH3ia56NaLtMQNwOinYiv4e
O0W+Y4G+CYYhFvm35dRYbjtWq7vunogB9G+2ylP7AWbxYWeeuPewW0v4nV7XSpxB
raOPe+KCp9isY2bfwe9e0ekO16+QQiCINXPrU37QA8Ewhpsb7tkKP3afX4iFJL67
uW6LO8iGT73QgCpMz9r+SwsCPQPzammWm8+SqKuQdl3rHEsJVZ5futk9LkXlkpGV
GT8GNSjiUHnKyOpXq74c23uM/M66eOKHg6778jwkckTuznAcoPJaSknr2VWeViUO
zM8vAE4oIdT9z5MA4XW6pQ==
`protect data_method = "aes256-cbc"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 2576)
`protect data_block
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
`protect end_protected

-- =================================================================================================
--   NX_RFB_L definition                                                                2017/09/19
-- =================================================================================================

library ieee;
use ieee.std_logic_1164.all;

entity NX_RFB_L is
generic (
    rck_edge  : bit := '0';   -- 0: read clock rising edge - 1: read clock falling edge
    wck_edge  : bit := '0';   -- 0: write clock rising edge - 1: write clock falling edge
    mem_ctxt  : string := "" -- memory initial context
);
port (
    RCK : in  std_logic;
    WCK : in  std_logic;
    I1  : in  std_logic;
    I2  : in  std_logic;
    I3  : in  std_logic;
    I4  : in  std_logic;
    I5  : in  std_logic;
    I6  : in  std_logic;
    I7  : in  std_logic;
    I8  : in  std_logic;
    I9  : in  std_logic;
    I10 : in  std_logic;
    I11 : in  std_logic;
    I12 : in  std_logic;
    I13 : in  std_logic;
    I14 : in  std_logic;
    I15 : in  std_logic;
    I16 : in  std_logic;
    COR : out std_logic;
    ERR : out std_logic;
    O1  : out std_logic;
    O2  : out std_logic;
    O3  : out std_logic;
    O4  : out std_logic;
    O5  : out std_logic;
    O6  : out std_logic;
    O7  : out std_logic;
    O8  : out std_logic;
    O9  : out std_logic;
    O10 : out std_logic;
    O11 : out std_logic;
    O12 : out std_logic;
    O13 : out std_logic;
    O14 : out std_logic;
    O15 : out std_logic;
    O16 : out std_logic;
    RA1 : in  std_logic;
    RA2 : in  std_logic;
    RA3 : in  std_logic;
    RA4 : in  std_logic;
    RA5 : in  std_logic;
    RA6 : in  std_logic;
    RE  : in  std_logic;
    WA1 : in  std_logic;
    WA2 : in  std_logic;
    WA3 : in  std_logic;
    WA4 : in  std_logic;
    WA5 : in  std_logic;
    WA6 : in  std_logic;
    WE  : in  std_logic;
    XRCK : out std_logic;
    XRO1 : out std_logic;
    XRO2 : out std_logic;
    XRO3 : out std_logic;
    XRO4 : out std_logic;
    XRO5 : out std_logic;
    XRO6 : out std_logic;
    XWCK : out std_logic;
    XWO1 : out std_logic;
    XWO2 : out std_logic;
    XWO3 : out std_logic;
    XWO4 : out std_logic;
    XWO5 : out std_logic;
    XWO6 : out std_logic
);
end NX_RFB_L;

architecture NX_RTL of NX_RFB_L is
    attribute NX_TYPE :string;
    attribute NX_TYPE of NX_RTL: architecture is "PHY";

    attribute NX_USE :string;
    attribute NX_USE of NX_RTL: architecture is "NX_RFB_L";
begin
end NX_RTL;

----------------------------------------------------------------------------------------------------

-- =================================================================================================
--   NX_RFB_L_WRAP definition                                                           2017/09/19
-- =================================================================================================

library ieee;
use ieee.std_logic_1164.all;

entity NX_RFB_L_WRAP is
generic (
    rck_edge  : bit := '0';   -- 0: read clock rising edge - 1: read clock falling edge
    wck_edge  : bit := '0';   -- 0: write clock rising edge - 1: write clock falling edge
    mem_ctxt  : string := "" -- memory initial context
);
port (
    RCK : in  std_logic;
    WCK : in  std_logic;
    I   : in  std_logic_vector(15 downto 0);
    COR : out std_logic;
    ERR : out std_logic;
    O   : out std_logic_vector(15 downto 0);
    RA  : in  std_logic_vector(5 downto 0);
    RE  : in  std_logic;
    WA  : in  std_logic_vector(5 downto 0);
    WE  : in  std_logic;
    XRCK : out std_logic;
    XRO  : out std_logic_vector(5 downto 0);
    XWCK : out std_logic;
    XWO  : out std_logic_vector(5 downto 0)
);
end NX_RFB_L_WRAP;

architecture NX_RTL of NX_RFB_L_WRAP is
    attribute NX_TYPE :string;
    attribute NX_TYPE of NX_RTL: architecture is "WRAPPER";

component NX_RFB_L
generic (
    rck_edge  : bit := '0';   -- 0: read clock rising edge - 1: read clock falling edge
    wck_edge  : bit := '0';   -- 0: write clock rising edge - 1: write clock falling edge
    mem_ctxt  : string := "" -- memory initial context
);
port (
    RCK : in  std_logic;
    WCK : in  std_logic;
    I1  : in  std_logic;
    I2  : in  std_logic;
    I3  : in  std_logic;
    I4  : in  std_logic;
    I5  : in  std_logic;
    I6  : in  std_logic;
    I7  : in  std_logic;
    I8  : in  std_logic;
    I9  : in  std_logic;
    I10 : in  std_logic;
    I11 : in  std_logic;
    I12 : in  std_logic;
    I13 : in  std_logic;
    I14 : in  std_logic;
    I15 : in  std_logic;
    I16 : in  std_logic;
    COR : out std_logic;
    ERR : out std_logic;
    O1  : out std_logic;
    O2  : out std_logic;
    O3  : out std_logic;
    O4  : out std_logic;
    O5  : out std_logic;
    O6  : out std_logic;
    O7  : out std_logic;
    O8  : out std_logic;
    O9  : out std_logic;
    O10 : out std_logic;
    O11 : out std_logic;
    O12 : out std_logic;
    O13 : out std_logic;
    O14 : out std_logic;
    O15 : out std_logic;
    O16 : out std_logic;
    RA1 : in  std_logic;
    RA2 : in  std_logic;
    RA3 : in  std_logic;
    RA4 : in  std_logic;
    RA5 : in  std_logic;
    RA6 : in  std_logic;
    RE  : in  std_logic;
    WA1 : in  std_logic;
    WA2 : in  std_logic;
    WA3 : in  std_logic;
    WA4 : in  std_logic;
    WA5 : in  std_logic;
    WA6 : in  std_logic;
    WE  : in  std_logic;
    XRCK : out std_logic;
    XRO1 : out std_logic;
    XRO2 : out std_logic;
    XRO3 : out std_logic;
    XRO4 : out std_logic;
    XRO5 : out std_logic;
    XRO6 : out std_logic;
    XWCK : out std_logic;
    XWO1 : out std_logic;
    XWO2 : out std_logic;
    XWO3 : out std_logic;
    XWO4 : out std_logic;
    XWO5 : out std_logic;
    XWO6 : out std_logic
);
end component NX_RFB_L;

begin

rfb: NX_RFB_L generic map (
    rck_edge    => rck_edge,
    wck_edge    => wck_edge,
    mem_ctxt    => mem_ctxt)
port map (
    RCK => RCK,
    WCK => WCK,
    I1  => I(0),
    I2  => I(1),
    I3  => I(2),
    I4  => I(3),
    I5  => I(4),
    I6  => I(5),
    I7  => I(6),
    I8  => I(7),
    I9  => I(8),
    I10 => I(9),
    I11 => I(10),
    I12 => I(11),
    I13 => I(12),
    I14 => I(13),
    I15 => I(14),
    I16 => I(15),
    COR => COR,
    ERR => ERR,
    O1  => O(0),
    O2  => O(1),
    O3  => O(2),
    O4  => O(3),
    O5  => O(4),
    O6  => O(5),
    O7  => O(6),
    O8  => O(7),
    O9  => O(8),
    O10 => O(9),
    O11 => O(10),
    O12 => O(11),
    O13 => O(12),
    O14 => O(13),
    O15 => O(14),
    O16 => O(15),
    RA1 => RA(0),
    RA2 => RA(1),
    RA3 => RA(2),
    RA4 => RA(3),
    RA5 => RA(4),
    RA6 => RA(5),
    RE  => RE,
    WA1 => WA(0),
    WA2 => WA(1),
    WA3 => WA(2),
    WA4 => WA(3),
    WA5 => WA(4),
    WA6 => WA(5),
    WE  => WE,
    XRCK => XRCK,
    XRO1 => XRO(0),
    XRO2 => XRO(1),
    XRO3 => XRO(2),
    XRO4 => XRO(3),
    XRO5 => XRO(4),
    XRO6 => XRO(5),
    XWCK => XWCK,
    XWO1 => XWO(0),
    XWO2 => XWO(1),
    XWO3 => XWO(2),
    XWO4 => XWO(3),
    XWO5 => XWO(4),
    XWO6 => XWO(5)
);
end NX_RTL;

----------------------------------------------------------------------------------------------------

library ieee;
use ieee.std_logic_1164.all;

entity NX_CKS is
port (
    CKI : in  std_logic;
    CMD : in  std_logic;
    CKO : out std_logic
);
end NX_CKS;

architecture NX_RTL of NX_CKS is
    attribute NX_TYPE :string;
    attribute NX_TYPE of NX_RTL: architecture is "PHY";

    attribute NX_USE :string;
    attribute NX_USE of NX_RTL: architecture is "NX_CKS";
begin
end NX_RTL;
----------------------------------------------------------------------------------------------------

`protect begin_protected
`protect version = 1
`protect encrypt_agent = "NanoXplore"
`protect key_keyowner = "Mentor Graphics Corporation", key_keyname = "MGC-VERIF-SIM-RSA-2", key_method = "rsa"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 256)
`protect key_block
XO4R//bhyiewB03tcNipV5tpwwtKAAF6rc35CnXLQdFDEpJMmr4bwwmhUBQPK9cz
qAEA2y54ZvZfDCbf41Pab0DkskogMV4wFqGEXZ9S+J1WDs57Gy/kwRH5POuY/3xh
jbPCi2KA6LPNupbREzKjEZubRgujGdvHOAUBhe9MVXPmHfioYJuninSD3WlAcUI5
L9wWAkKtl8Y0wqhChkEmoDtVJpAU2JGrBCHBXfxuYQf2vBoA77kznB3nhQ0yoYVF
FYTnPNOn7yxrOIhiPn6aKOS1YM0VXgCabSQ96dUk02/ifPKfa6MJHAGtnPRmVHs7
KUSgfPSJkE60zHDOO4xflg==
`protect data_method = "aes256-cbc"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 6768)
`protect data_block
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
`protect end_protected

-- =================================================================================================
--   NX_DSP_L definition                                                                2018/11/30
-- =================================================================================================

library ieee;
use ieee.std_logic_1164.all;

entity NX_DSP_L is
generic (
    std_mode    : string := ""; -- standard mode [ADD36, SUB36, SMUL18, UMUL18, ...] empty for raw
    raw_config0 : bit_vector(19 downto 0) := B"00000000000000000000";   -- MUX
    raw_config1 : bit_vector(18 downto 0) := B"0000000000000000000";    -- PRC
    raw_config2 : bit_vector(12 downto 0) := B"0000000000000";          -- PRR
    raw_config3 : bit_vector( 6 downto 0) := B"0000000"                 -- ALU
);
port (
    A1    : in  std_logic;
    A2    : in  std_logic;
    A3    : in  std_logic;
    A4    : in  std_logic;
    A5    : in  std_logic;
    A6    : in  std_logic;
    A7    : in  std_logic;
    A8    : in  std_logic;
    A9    : in  std_logic;
    A10   : in  std_logic;
    A11   : in  std_logic;
    A12   : in  std_logic;
    A13   : in  std_logic;
    A14   : in  std_logic;
    A15   : in  std_logic;
    A16   : in  std_logic;
    A17   : in  std_logic;
    A18   : in  std_logic;
    A19   : in  std_logic;
    A20   : in  std_logic;
    A21   : in  std_logic;
    A22   : in  std_logic;
    A23   : in  std_logic;
    A24   : in  std_logic;

    B1    : in  std_logic;
    B2    : in  std_logic;
    B3    : in  std_logic;
    B4    : in  std_logic;
    B5    : in  std_logic;
    B6    : in  std_logic;
    B7    : in  std_logic;
    B8    : in  std_logic;
    B9    : in  std_logic;
    B10   : in  std_logic;
    B11   : in  std_logic;
    B12   : in  std_logic;
    B13   : in  std_logic;
    B14   : in  std_logic;
    B15   : in  std_logic;
    B16   : in  std_logic;
    B17   : in  std_logic;
    B18   : in  std_logic;

    C1    : in  std_logic;
    C2    : in  std_logic;
    C3    : in  std_logic;
    C4    : in  std_logic;
    C5    : in  std_logic;
    C6    : in  std_logic;
    C7    : in  std_logic;
    C8    : in  std_logic;
    C9    : in  std_logic;
    C10   : in  std_logic;
    C11   : in  std_logic;
    C12   : in  std_logic;
    C13   : in  std_logic;
    C14   : in  std_logic;
    C15   : in  std_logic;
    C16   : in  std_logic;
    C17   : in  std_logic;
    C18   : in  std_logic;
    C19   : in  std_logic;
    C20   : in  std_logic;
    C21   : in  std_logic;
    C22   : in  std_logic;
    C23   : in  std_logic;
    C24   : in  std_logic;
    C25   : in  std_logic;
    C26   : in  std_logic;
    C27   : in  std_logic;
    C28   : in  std_logic;
    C29   : in  std_logic;
    C30   : in  std_logic;
    C31   : in  std_logic;
    C32   : in  std_logic;
    C33   : in  std_logic;
    C34   : in  std_logic;
    C35   : in  std_logic;
    C36   : in  std_logic;

    CAI1  : in  std_logic;
    CAI2  : in  std_logic;
    CAI3  : in  std_logic;
    CAI4  : in  std_logic;
    CAI5  : in  std_logic;
    CAI6  : in  std_logic;
    CAI7  : in  std_logic;
    CAI8  : in  std_logic;
    CAI9  : in  std_logic;
    CAI10 : in  std_logic;
    CAI11 : in  std_logic;
    CAI12 : in  std_logic;
    CAI13 : in  std_logic;
    CAI14 : in  std_logic;
    CAI15 : in  std_logic;
    CAI16 : in  std_logic;
    CAI17 : in  std_logic;
    CAI18 : in  std_logic;
    CAI19 : in  std_logic;
    CAI20 : in  std_logic;
    CAI21 : in  std_logic;
    CAI22 : in  std_logic;
    CAI23 : in  std_logic;
    CAI24 : in  std_logic;

    CAO1  : out std_logic;
    CAO2  : out std_logic;
    CAO3  : out std_logic;
    CAO4  : out std_logic;
    CAO5  : out std_logic;
    CAO6  : out std_logic;
    CAO7  : out std_logic;
    CAO8  : out std_logic;
    CAO9  : out std_logic;
    CAO10 : out std_logic;
    CAO11 : out std_logic;
    CAO12 : out std_logic;
    CAO13 : out std_logic;
    CAO14 : out std_logic;
    CAO15 : out std_logic;
    CAO16 : out std_logic;
    CAO17 : out std_logic;
    CAO18 : out std_logic;
    CAO19 : out std_logic;
    CAO20 : out std_logic;
    CAO21 : out std_logic;
    CAO22 : out std_logic;
    CAO23 : out std_logic;
    CAO24 : out std_logic;

    CBI1  : in  std_logic;
    CBI2  : in  std_logic;
    CBI3  : in  std_logic;
    CBI4  : in  std_logic;
    CBI5  : in  std_logic;
    CBI6  : in  std_logic;
    CBI7  : in  std_logic;
    CBI8  : in  std_logic;
    CBI9  : in  std_logic;
    CBI10 : in  std_logic;
    CBI11 : in  std_logic;
    CBI12 : in  std_logic;
    CBI13 : in  std_logic;
    CBI14 : in  std_logic;
    CBI15 : in  std_logic;
    CBI16 : in  std_logic;
    CBI17 : in  std_logic;
    CBI18 : in  std_logic;

    CBO1  : out std_logic;
    CBO2  : out std_logic;
    CBO3  : out std_logic;
    CBO4  : out std_logic;
    CBO5  : out std_logic;
    CBO6  : out std_logic;
    CBO7  : out std_logic;
    CBO8  : out std_logic;
    CBO9  : out std_logic;
    CBO10 : out std_logic;
    CBO11 : out std_logic;
    CBO12 : out std_logic;
    CBO13 : out std_logic;
    CBO14 : out std_logic;
    CBO15 : out std_logic;
    CBO16 : out std_logic;
    CBO17 : out std_logic;
    CBO18 : out std_logic;

    CCI   : in  std_logic;
    CCO   : out std_logic;
    CI    : in  std_logic;
    CK    : in  std_logic;
    CO    : out std_logic;
    CO37  : out std_logic;
    CO57  : out std_logic;

    CZI1  : in  std_logic;
    CZI2  : in  std_logic;
    CZI3  : in  std_logic;
    CZI4  : in  std_logic;
    CZI5  : in  std_logic;
    CZI6  : in  std_logic;
    CZI7  : in  std_logic;
    CZI8  : in  std_logic;
    CZI9  : in  std_logic;
    CZI10 : in  std_logic;
    CZI11 : in  std_logic;
    CZI12 : in  std_logic;
    CZI13 : in  std_logic;
    CZI14 : in  std_logic;
    CZI15 : in  std_logic;
    CZI16 : in  std_logic;
    CZI17 : in  std_logic;
    CZI18 : in  std_logic;
    CZI19 : in  std_logic;
    CZI20 : in  std_logic;
    CZI21 : in  std_logic;
    CZI22 : in  std_logic;
    CZI23 : in  std_logic;
    CZI24 : in  std_logic;
    CZI25 : in  std_logic;
    CZI26 : in  std_logic;
    CZI27 : in  std_logic;
    CZI28 : in  std_logic;
    CZI29 : in  std_logic;
    CZI30 : in  std_logic;
    CZI31 : in  std_logic;
    CZI32 : in  std_logic;
    CZI33 : in  std_logic;
    CZI34 : in  std_logic;
    CZI35 : in  std_logic;
    CZI36 : in  std_logic;
    CZI37 : in  std_logic;
    CZI38 : in  std_logic;
    CZI39 : in  std_logic;
    CZI40 : in  std_logic;
    CZI41 : in  std_logic;
    CZI42 : in  std_logic;
    CZI43 : in  std_logic;
    CZI44 : in  std_logic;
    CZI45 : in  std_logic;
    CZI46 : in  std_logic;
    CZI47 : in  std_logic;
    CZI48 : in  std_logic;
    CZI49 : in  std_logic;
    CZI50 : in  std_logic;
    CZI51 : in  std_logic;
    CZI52 : in  std_logic;
    CZI53 : in  std_logic;
    CZI54 : in  std_logic;
    CZI55 : in  std_logic;
    CZI56 : in  std_logic;

    CZO1  : out std_logic;
    CZO2  : out std_logic;
    CZO3  : out std_logic;
    CZO4  : out std_logic;
    CZO5  : out std_logic;
    CZO6  : out std_logic;
    CZO7  : out std_logic;
    CZO8  : out std_logic;
    CZO9  : out std_logic;
    CZO10 : out std_logic;
    CZO11 : out std_logic;
    CZO12 : out std_logic;
    CZO13 : out std_logic;
    CZO14 : out std_logic;
    CZO15 : out std_logic;
    CZO16 : out std_logic;
    CZO17 : out std_logic;
    CZO18 : out std_logic;
    CZO19 : out std_logic;
    CZO20 : out std_logic;
    CZO21 : out std_logic;
    CZO22 : out std_logic;
    CZO23 : out std_logic;
    CZO24 : out std_logic;
    CZO25 : out std_logic;
    CZO26 : out std_logic;
    CZO27 : out std_logic;
    CZO28 : out std_logic;
    CZO29 : out std_logic;
    CZO30 : out std_logic;
    CZO31 : out std_logic;
    CZO32 : out std_logic;
    CZO33 : out std_logic;
    CZO34 : out std_logic;
    CZO35 : out std_logic;
    CZO36 : out std_logic;
    CZO37 : out std_logic;
    CZO38 : out std_logic;
    CZO39 : out std_logic;
    CZO40 : out std_logic;
    CZO41 : out std_logic;
    CZO42 : out std_logic;
    CZO43 : out std_logic;
    CZO44 : out std_logic;
    CZO45 : out std_logic;
    CZO46 : out std_logic;
    CZO47 : out std_logic;
    CZO48 : out std_logic;
    CZO49 : out std_logic;
    CZO50 : out std_logic;
    CZO51 : out std_logic;
    CZO52 : out std_logic;
    CZO53 : out std_logic;
    CZO54 : out std_logic;
    CZO55 : out std_logic;
    CZO56 : out std_logic;

    D1    : in  std_logic;
    D2    : in  std_logic;
    D3    : in  std_logic;
    D4    : in  std_logic;
    D5    : in  std_logic;
    D6    : in  std_logic;
    D7    : in  std_logic;
    D8    : in  std_logic;
    D9    : in  std_logic;
    D10   : in  std_logic;
    D11   : in  std_logic;
    D12   : in  std_logic;
    D13   : in  std_logic;
    D14   : in  std_logic;
    D15   : in  std_logic;
    D16   : in  std_logic;
    D17   : in  std_logic;
    D18   : in  std_logic;

    OVF   : out std_logic;
    R     : in  std_logic;
    RZ    : in  std_logic;
    WE    : in  std_logic;

    Z1    : out std_logic;
    Z2    : out std_logic;
    Z3    : out std_logic;
    Z4    : out std_logic;
    Z5    : out std_logic;
    Z6    : out std_logic;
    Z7    : out std_logic;
    Z8    : out std_logic;
    Z9    : out std_logic;
    Z10   : out std_logic;
    Z11   : out std_logic;
    Z12   : out std_logic;
    Z13   : out std_logic;
    Z14   : out std_logic;
    Z15   : out std_logic;
    Z16   : out std_logic;
    Z17   : out std_logic;
    Z18   : out std_logic;
    Z19   : out std_logic;
    Z20   : out std_logic;
    Z21   : out std_logic;
    Z22   : out std_logic;
    Z23   : out std_logic;
    Z24   : out std_logic;
    Z25   : out std_logic;
    Z26   : out std_logic;
    Z27   : out std_logic;
    Z28   : out std_logic;
    Z29   : out std_logic;
    Z30   : out std_logic;
    Z31   : out std_logic;
    Z32   : out std_logic;
    Z33   : out std_logic;
    Z34   : out std_logic;
    Z35   : out std_logic;
    Z36   : out std_logic;
    Z37   : out std_logic;
    Z38   : out std_logic;
    Z39   : out std_logic;
    Z40   : out std_logic;
    Z41   : out std_logic;
    Z42   : out std_logic;
    Z43   : out std_logic;
    Z44   : out std_logic;
    Z45   : out std_logic;
    Z46   : out std_logic;
    Z47   : out std_logic;
    Z48   : out std_logic;
    Z49   : out std_logic;
    Z50   : out std_logic;
    Z51   : out std_logic;
    Z52   : out std_logic;
    Z53   : out std_logic;
    Z54   : out std_logic;
    Z55   : out std_logic;
    Z56   : out std_logic
);
end NX_DSP_L;

architecture NX_RTL of NX_DSP_L is
    attribute NX_TYPE :string;
    attribute NX_TYPE of NX_RTL: architecture is "PHY";

    attribute NX_USE :string;
    attribute NX_USE of NX_RTL: architecture is "NX_DSP_L";
begin
end NX_RTL;

----------------------------------------------------------------------------------------------------

-- =================================================================================================
--   NX_DSP_L_WRAP definition                                                           2018/11/30
-- =================================================================================================

library IEEE;
use IEEE.STD_LOGIC_1164.ALL;

entity NX_DSP_L_WRAP is
generic (
    std_mode    : string := "";
    raw_config0 : bit_vector(19 downto 0) := B"00000000000000000000";        -- MUX
    raw_config1 : bit_vector(18 downto 0) := B"0000000000000000000";         -- PRC
    raw_config2 : bit_vector(12 downto 0) := B"0000000000000";               -- PRR
    raw_config3 : bit_vector( 6 downto 0) := B"0000000"                      -- ALU
);
port (
    A    : in  std_logic_vector(23 downto 0);
    B    : in  std_logic_vector(17 downto 0);
    C    : in  std_logic_vector(35 downto 0);

    CAI  : in  std_logic_vector(23 downto 0);
    CAO  : out std_logic_vector(23 downto 0);
    CBI  : in  std_logic_vector(17 downto 0);
    CBO  : out std_logic_vector(17 downto 0);

    CCI  : in  std_logic;
    CCO  : out std_logic;
    CI   : in  std_logic;
    CK   : in  std_logic;
    CO   : out std_logic;
    CO37 : out std_logic;
    CO57 : out std_logic;

    CZI  : in  std_logic_vector(55 downto 0);
    CZO  : out std_logic_vector(55 downto 0);

    D    : in  std_logic_vector(17 downto 0);

    OVF  : out std_logic;
    R    : in  std_logic;
    RZ   : in  std_logic;
    WE   : in  std_logic;

    Z    : out std_logic_vector(55 downto 0)
);
end NX_DSP_L_WRAP;

-- architecture NXP_ARCH of NX_DSP_L_WRAP#{{{#
architecture NXP_ARCH of NX_DSP_L_WRAP is
    attribute NX_TYPE :string;
    attribute NX_TYPE of NXP_ARCH: architecture is "WRAPPER";

component NX_DSP_L
generic (
    std_mode    : string := "";
    raw_config0 : bit_vector(19 downto 0) := B"00000000000000000000";      -- MUX
    raw_config1 : bit_vector(18 downto 0) := B"0000000000000000000";       -- PRC
    raw_config2 : bit_vector(12 downto 0) := B"0000000000000";             -- PRR
    raw_config3 : bit_vector( 6 downto 0) := B"0000000"                    -- ALU
);
port (
    A1    : in  std_logic;
    A2    : in  std_logic;
    A3    : in  std_logic;
    A4    : in  std_logic;
    A5    : in  std_logic;
    A6    : in  std_logic;
    A7    : in  std_logic;
    A8    : in  std_logic;
    A9    : in  std_logic;
    A10   : in  std_logic;
    A11   : in  std_logic;
    A12   : in  std_logic;
    A13   : in  std_logic;
    A14   : in  std_logic;
    A15   : in  std_logic;
    A16   : in  std_logic;
    A17   : in  std_logic;
    A18   : in  std_logic;
    A19   : in  std_logic;
    A20   : in  std_logic;
    A21   : in  std_logic;
    A22   : in  std_logic;
    A23   : in  std_logic;
    A24   : in  std_logic;

    B1    : in  std_logic;
    B2    : in  std_logic;
    B3    : in  std_logic;
    B4    : in  std_logic;
    B5    : in  std_logic;
    B6    : in  std_logic;
    B7    : in  std_logic;
    B8    : in  std_logic;
    B9    : in  std_logic;
    B10   : in  std_logic;
    B11   : in  std_logic;
    B12   : in  std_logic;
    B13   : in  std_logic;
    B14   : in  std_logic;
    B15   : in  std_logic;
    B16   : in  std_logic;
    B17   : in  std_logic;
    B18   : in  std_logic;

    C1    : in  std_logic;
    C2    : in  std_logic;
    C3    : in  std_logic;
    C4    : in  std_logic;
    C5    : in  std_logic;
    C6    : in  std_logic;
    C7    : in  std_logic;
    C8    : in  std_logic;
    C9    : in  std_logic;
    C10   : in  std_logic;
    C11   : in  std_logic;
    C12   : in  std_logic;
    C13   : in  std_logic;
    C14   : in  std_logic;
    C15   : in  std_logic;
    C16   : in  std_logic;
    C17   : in  std_logic;
    C18   : in  std_logic;
    C19   : in  std_logic;
    C20   : in  std_logic;
    C21   : in  std_logic;
    C22   : in  std_logic;
    C23   : in  std_logic;
    C24   : in  std_logic;
    C25   : in  std_logic;
    C26   : in  std_logic;
    C27   : in  std_logic;
    C28   : in  std_logic;
    C29   : in  std_logic;
    C30   : in  std_logic;
    C31   : in  std_logic;
    C32   : in  std_logic;
    C33   : in  std_logic;
    C34   : in  std_logic;
    C35   : in  std_logic;
    C36   : in  std_logic;

    CAI1  : in  std_logic;
    CAI2  : in  std_logic;
    CAI3  : in  std_logic;
    CAI4  : in  std_logic;
    CAI5  : in  std_logic;
    CAI6  : in  std_logic;
    CAI7  : in  std_logic;
    CAI8  : in  std_logic;
    CAI9  : in  std_logic;
    CAI10 : in  std_logic;
    CAI11 : in  std_logic;
    CAI12 : in  std_logic;
    CAI13 : in  std_logic;
    CAI14 : in  std_logic;
    CAI15 : in  std_logic;
    CAI16 : in  std_logic;
    CAI17 : in  std_logic;
    CAI18 : in  std_logic;
    CAI19 : in  std_logic;
    CAI20 : in  std_logic;
    CAI21 : in  std_logic;
    CAI22 : in  std_logic;
    CAI23 : in  std_logic;
    CAI24 : in  std_logic;

    CAO1  : out std_logic;
    CAO2  : out std_logic;
    CAO3  : out std_logic;
    CAO4  : out std_logic;
    CAO5  : out std_logic;
    CAO6  : out std_logic;
    CAO7  : out std_logic;
    CAO8  : out std_logic;
    CAO9  : out std_logic;
    CAO10 : out std_logic;
    CAO11 : out std_logic;
    CAO12 : out std_logic;
    CAO13 : out std_logic;
    CAO14 : out std_logic;
    CAO15 : out std_logic;
    CAO16 : out std_logic;
    CAO17 : out std_logic;
    CAO18 : out std_logic;
    CAO19 : out std_logic;
    CAO20 : out std_logic;
    CAO21 : out std_logic;
    CAO22 : out std_logic;
    CAO23 : out std_logic;
    CAO24 : out std_logic;

    CBI1  : in  std_logic;
    CBI2  : in  std_logic;
    CBI3  : in  std_logic;
    CBI4  : in  std_logic;
    CBI5  : in  std_logic;
    CBI6  : in  std_logic;
    CBI7  : in  std_logic;
    CBI8  : in  std_logic;
    CBI9  : in  std_logic;
    CBI10 : in  std_logic;
    CBI11 : in  std_logic;
    CBI12 : in  std_logic;
    CBI13 : in  std_logic;
    CBI14 : in  std_logic;
    CBI15 : in  std_logic;
    CBI16 : in  std_logic;
    CBI17 : in  std_logic;
    CBI18 : in  std_logic;

    CBO1  : out std_logic;
    CBO2  : out std_logic;
    CBO3  : out std_logic;
    CBO4  : out std_logic;
    CBO5  : out std_logic;
    CBO6  : out std_logic;
    CBO7  : out std_logic;
    CBO8  : out std_logic;
    CBO9  : out std_logic;
    CBO10 : out std_logic;
    CBO11 : out std_logic;
    CBO12 : out std_logic;
    CBO13 : out std_logic;
    CBO14 : out std_logic;
    CBO15 : out std_logic;
    CBO16 : out std_logic;
    CBO17 : out std_logic;
    CBO18 : out std_logic;

    CCI   : in  std_logic;
    CCO   : out std_logic;
    CI    : in  std_logic;
    CK    : in  std_logic;
    CO    : out std_logic;
    CO37  : out std_logic;
    CO57  : out std_logic;

    CZI1  : in  std_logic;
    CZI2  : in  std_logic;
    CZI3  : in  std_logic;
    CZI4  : in  std_logic;
    CZI5  : in  std_logic;
    CZI6  : in  std_logic;
    CZI7  : in  std_logic;
    CZI8  : in  std_logic;
    CZI9  : in  std_logic;
    CZI10 : in  std_logic;
    CZI11 : in  std_logic;
    CZI12 : in  std_logic;
    CZI13 : in  std_logic;
    CZI14 : in  std_logic;
    CZI15 : in  std_logic;
    CZI16 : in  std_logic;
    CZI17 : in  std_logic;
    CZI18 : in  std_logic;
    CZI19 : in  std_logic;
    CZI20 : in  std_logic;
    CZI21 : in  std_logic;
    CZI22 : in  std_logic;
    CZI23 : in  std_logic;
    CZI24 : in  std_logic;
    CZI25 : in  std_logic;
    CZI26 : in  std_logic;
    CZI27 : in  std_logic;
    CZI28 : in  std_logic;
    CZI29 : in  std_logic;
    CZI30 : in  std_logic;
    CZI31 : in  std_logic;
    CZI32 : in  std_logic;
    CZI33 : in  std_logic;
    CZI34 : in  std_logic;
    CZI35 : in  std_logic;
    CZI36 : in  std_logic;
    CZI37 : in  std_logic;
    CZI38 : in  std_logic;
    CZI39 : in  std_logic;
    CZI40 : in  std_logic;
    CZI41 : in  std_logic;
    CZI42 : in  std_logic;
    CZI43 : in  std_logic;
    CZI44 : in  std_logic;
    CZI45 : in  std_logic;
    CZI46 : in  std_logic;
    CZI47 : in  std_logic;
    CZI48 : in  std_logic;
    CZI49 : in  std_logic;
    CZI50 : in  std_logic;
    CZI51 : in  std_logic;
    CZI52 : in  std_logic;
    CZI53 : in  std_logic;
    CZI54 : in  std_logic;
    CZI55 : in  std_logic;
    CZI56 : in  std_logic;

    CZO1  : out std_logic;
    CZO2  : out std_logic;
    CZO3  : out std_logic;
    CZO4  : out std_logic;
    CZO5  : out std_logic;
    CZO6  : out std_logic;
    CZO7  : out std_logic;
    CZO8  : out std_logic;
    CZO9  : out std_logic;
    CZO10 : out std_logic;
    CZO11 : out std_logic;
    CZO12 : out std_logic;
    CZO13 : out std_logic;
    CZO14 : out std_logic;
    CZO15 : out std_logic;
    CZO16 : out std_logic;
    CZO17 : out std_logic;
    CZO18 : out std_logic;
    CZO19 : out std_logic;
    CZO20 : out std_logic;
    CZO21 : out std_logic;
    CZO22 : out std_logic;
    CZO23 : out std_logic;
    CZO24 : out std_logic;
    CZO25 : out std_logic;
    CZO26 : out std_logic;
    CZO27 : out std_logic;
    CZO28 : out std_logic;
    CZO29 : out std_logic;
    CZO30 : out std_logic;
    CZO31 : out std_logic;
    CZO32 : out std_logic;
    CZO33 : out std_logic;
    CZO34 : out std_logic;
    CZO35 : out std_logic;
    CZO36 : out std_logic;
    CZO37 : out std_logic;
    CZO38 : out std_logic;
    CZO39 : out std_logic;
    CZO40 : out std_logic;
    CZO41 : out std_logic;
    CZO42 : out std_logic;
    CZO43 : out std_logic;
    CZO44 : out std_logic;
    CZO45 : out std_logic;
    CZO46 : out std_logic;
    CZO47 : out std_logic;
    CZO48 : out std_logic;
    CZO49 : out std_logic;
    CZO50 : out std_logic;
    CZO51 : out std_logic;
    CZO52 : out std_logic;
    CZO53 : out std_logic;
    CZO54 : out std_logic;
    CZO55 : out std_logic;
    CZO56 : out std_logic;

    D1    : in  std_logic;
    D2    : in  std_logic;
    D3    : in  std_logic;
    D4    : in  std_logic;
    D5    : in  std_logic;
    D6    : in  std_logic;
    D7    : in  std_logic;
    D8    : in  std_logic;
    D9    : in  std_logic;
    D10   : in  std_logic;
    D11   : in  std_logic;
    D12   : in  std_logic;
    D13   : in  std_logic;
    D14   : in  std_logic;
    D15   : in  std_logic;
    D16   : in  std_logic;
    D17   : in  std_logic;
    D18   : in  std_logic;

    OVF   : out std_logic;
    R     : in  std_logic;
    RZ    : in  std_logic;
    WE    : in  std_logic;

    Z1    : out std_logic;
    Z2    : out std_logic;
    Z3    : out std_logic;
    Z4    : out std_logic;
    Z5    : out std_logic;
    Z6    : out std_logic;
    Z7    : out std_logic;
    Z8    : out std_logic;
    Z9    : out std_logic;
    Z10   : out std_logic;
    Z11   : out std_logic;
    Z12   : out std_logic;
    Z13   : out std_logic;
    Z14   : out std_logic;
    Z15   : out std_logic;
    Z16   : out std_logic;
    Z17   : out std_logic;
    Z18   : out std_logic;
    Z19   : out std_logic;
    Z20   : out std_logic;
    Z21   : out std_logic;
    Z22   : out std_logic;
    Z23   : out std_logic;
    Z24   : out std_logic;
    Z25   : out std_logic;
    Z26   : out std_logic;
    Z27   : out std_logic;
    Z28   : out std_logic;
    Z29   : out std_logic;
    Z30   : out std_logic;
    Z31   : out std_logic;
    Z32   : out std_logic;
    Z33   : out std_logic;
    Z34   : out std_logic;
    Z35   : out std_logic;
    Z36   : out std_logic;
    Z37   : out std_logic;
    Z38   : out std_logic;
    Z39   : out std_logic;
    Z40   : out std_logic;
    Z41   : out std_logic;
    Z42   : out std_logic;
    Z43   : out std_logic;
    Z44   : out std_logic;
    Z45   : out std_logic;
    Z46   : out std_logic;
    Z47   : out std_logic;
    Z48   : out std_logic;
    Z49   : out std_logic;
    Z50   : out std_logic;
    Z51   : out std_logic;
    Z52   : out std_logic;
    Z53   : out std_logic;
    Z54   : out std_logic;
    Z55   : out std_logic;
    Z56   : out std_logic
);
end component;

begin

dsp: NX_DSP_L generic map (
    std_mode    => std_mode,
    raw_config0 => raw_config0,
    raw_config1 => raw_config1,
    raw_config2 => raw_config2,
    raw_config3 => raw_config3)
port map (
    A1    => A(0),
    A2    => A(1),
    A3    => A(2),
    A4    => A(3),
    A5    => A(4),
    A6    => A(5),
    A7    => A(6),
    A8    => A(7),
    A9    => A(8),
    A10   => A(9),
    A11   => A(10),
    A12   => A(11),
    A13   => A(12),
    A14   => A(13),
    A15   => A(14),
    A16   => A(15),
    A17   => A(16),
    A18   => A(17),
    A19   => A(18),
    A20   => A(19),
    A21   => A(20),
    A22   => A(21),
    A23   => A(22),
    A24   => A(23),

    B1    => B(0),
    B2    => B(1),
    B3    => B(2),
    B4    => B(3),
    B5    => B(4),
    B6    => B(5),
    B7    => B(6),
    B8    => B(7),
    B9    => B(8),
    B10   => B(9),
    B11   => B(10),
    B12   => B(11),
    B13   => B(12),
    B14   => B(13),
    B15   => B(14),
    B16   => B(15),
    B17   => B(16),
    B18   => B(17),

    C1    => C(0),
    C2    => C(1),
    C3    => C(2),
    C4    => C(3),
    C5    => C(4),
    C6    => C(5),
    C7    => C(6),
    C8    => C(7),
    C9    => C(8),
    C10   => C(9),
    C11   => C(10),
    C12   => C(11),
    C13   => C(12),
    C14   => C(13),
    C15   => C(14),
    C16   => C(15),
    C17   => C(16),
    C18   => C(17),
    C19   => C(18),
    C20   => C(19),
    C21   => C(20),
    C22   => C(21),
    C23   => C(22),
    C24   => C(23),
    C25   => C(24),
    C26   => C(25),
    C27   => C(26),
    C28   => C(27),
    C29   => C(28),
    C30   => C(29),
    C31   => C(30),
    C32   => C(31),
    C33   => C(32),
    C34   => C(33),
    C35   => C(34),
    C36   => C(35),

    CAI1  => CAI(0),
    CAI2  => CAI(1),
    CAI3  => CAI(2),
    CAI4  => CAI(3),
    CAI5  => CAI(4),
    CAI6  => CAI(5),
    CAI7  => CAI(6),
    CAI8  => CAI(7),
    CAI9  => CAI(8),
    CAI10 => CAI(9),
    CAI11 => CAI(10),
    CAI12 => CAI(11),
    CAI13 => CAI(12),
    CAI14 => CAI(13),
    CAI15 => CAI(14),
    CAI16 => CAI(15),
    CAI17 => CAI(16),
    CAI18 => CAI(17),
    CAI19 => CAI(18),
    CAI20 => CAI(19),
    CAI21 => CAI(20),
    CAI22 => CAI(21),
    CAI23 => CAI(22),
    CAI24 => CAI(23),

    CAO1  => CAO(0),
    CAO2  => CAO(1),
    CAO3  => CAO(2),
    CAO4  => CAO(3),
    CAO5  => CAO(4),
    CAO6  => CAO(5),
    CAO7  => CAO(6),
    CAO8  => CAO(7),
    CAO9  => CAO(8),
    CAO10 => CAO(9),
    CAO11 => CAO(10),
    CAO12 => CAO(11),
    CAO13 => CAO(12),
    CAO14 => CAO(13),
    CAO15 => CAO(14),
    CAO16 => CAO(15),
    CAO17 => CAO(16),
    CAO18 => CAO(17),
    CAO19 => CAO(18),
    CAO20 => CAO(19),
    CAO21 => CAO(20),
    CAO22 => CAO(21),
    CAO23 => CAO(22),
    CAO24 => CAO(23),

    CBI1  => CBI(0),
    CBI2  => CBI(1),
    CBI3  => CBI(2),
    CBI4  => CBI(3),
    CBI5  => CBI(4),
    CBI6  => CBI(5),
    CBI7  => CBI(6),
    CBI8  => CBI(7),
    CBI9  => CBI(8),
    CBI10 => CBI(9),
    CBI11 => CBI(10),
    CBI12 => CBI(11),
    CBI13 => CBI(12),
    CBI14 => CBI(13),
    CBI15 => CBI(14),
    CBI16 => CBI(15),
    CBI17 => CBI(16),
    CBI18 => CBI(17),

    CBO1  => CBO(0),
    CBO2  => CBO(1),
    CBO3  => CBO(2),
    CBO4  => CBO(3),
    CBO5  => CBO(4),
    CBO6  => CBO(5),
    CBO7  => CBO(6),
    CBO8  => CBO(7),
    CBO9  => CBO(8),
    CBO10 => CBO(9),
    CBO11 => CBO(10),
    CBO12 => CBO(11),
    CBO13 => CBO(12),
    CBO14 => CBO(13),
    CBO15 => CBO(14),
    CBO16 => CBO(15),
    CBO17 => CBO(16),
    CBO18 => CBO(17),

    CCI   => CCI,
    CCO   => CCO,
    CI    => CI,
    CK    => CK,
    CO    => CO,
    CO37  => CO37,
    CO57  => CO57,

    CZI1  => CZI(0),
    CZI2  => CZI(1),
    CZI3  => CZI(2),
    CZI4  => CZI(3),
    CZI5  => CZI(4),
    CZI6  => CZI(5),
    CZI7  => CZI(6),
    CZI8  => CZI(7),
    CZI9  => CZI(8),
    CZI10 => CZI(9),
    CZI11 => CZI(10),
    CZI12 => CZI(11),
    CZI13 => CZI(12),
    CZI14 => CZI(13),
    CZI15 => CZI(14),
    CZI16 => CZI(15),
    CZI17 => CZI(16),
    CZI18 => CZI(17),
    CZI19 => CZI(18),
    CZI20 => CZI(19),
    CZI21 => CZI(20),
    CZI22 => CZI(21),
    CZI23 => CZI(22),
    CZI24 => CZI(23),
    CZI25 => CZI(24),
    CZI26 => CZI(25),
    CZI27 => CZI(26),
    CZI28 => CZI(27),
    CZI29 => CZI(28),
    CZI30 => CZI(29),
    CZI31 => CZI(30),
    CZI32 => CZI(31),
    CZI33 => CZI(32),
    CZI34 => CZI(33),
    CZI35 => CZI(34),
    CZI36 => CZI(35),
    CZI37 => CZI(36),
    CZI38 => CZI(37),
    CZI39 => CZI(38),
    CZI40 => CZI(39),
    CZI41 => CZI(40),
    CZI42 => CZI(41),
    CZI43 => CZI(42),
    CZI44 => CZI(43),
    CZI45 => CZI(44),
    CZI46 => CZI(45),
    CZI47 => CZI(46),
    CZI48 => CZI(47),
    CZI49 => CZI(48),
    CZI50 => CZI(49),
    CZI51 => CZI(50),
    CZI52 => CZI(51),
    CZI53 => CZI(52),
    CZI54 => CZI(53),
    CZI55 => CZI(54),
    CZI56 => CZI(55),

    CZO1  => CZO(0),
    CZO2  => CZO(1),
    CZO3  => CZO(2),
    CZO4  => CZO(3),
    CZO5  => CZO(4),
    CZO6  => CZO(5),
    CZO7  => CZO(6),
    CZO8  => CZO(7),
    CZO9  => CZO(8),
    CZO10 => CZO(9),
    CZO11 => CZO(10),
    CZO12 => CZO(11),
    CZO13 => CZO(12),
    CZO14 => CZO(13),
    CZO15 => CZO(14),
    CZO16 => CZO(15),
    CZO17 => CZO(16),
    CZO18 => CZO(17),
    CZO19 => CZO(18),
    CZO20 => CZO(19),
    CZO21 => CZO(20),
    CZO22 => CZO(21),
    CZO23 => CZO(22),
    CZO24 => CZO(23),
    CZO25 => CZO(24),
    CZO26 => CZO(25),
    CZO27 => CZO(26),
    CZO28 => CZO(27),
    CZO29 => CZO(28),
    CZO30 => CZO(29),
    CZO31 => CZO(30),
    CZO32 => CZO(31),
    CZO33 => CZO(32),
    CZO34 => CZO(33),
    CZO35 => CZO(34),
    CZO36 => CZO(35),
    CZO37 => CZO(36),
    CZO38 => CZO(37),
    CZO39 => CZO(38),
    CZO40 => CZO(39),
    CZO41 => CZO(40),
    CZO42 => CZO(41),
    CZO43 => CZO(42),
    CZO44 => CZO(43),
    CZO45 => CZO(44),
    CZO46 => CZO(45),
    CZO47 => CZO(46),
    CZO48 => CZO(47),
    CZO49 => CZO(48),
    CZO50 => CZO(49),
    CZO51 => CZO(50),
    CZO52 => CZO(51),
    CZO53 => CZO(52),
    CZO54 => CZO(53),
    CZO55 => CZO(54),
    CZO56 => CZO(55),

    D1    => D(0),
    D2    => D(1),
    D3    => D(2),
    D4    => D(3),
    D5    => D(4),
    D6    => D(5),
    D7    => D(6),
    D8    => D(7),
    D9    => D(8),
    D10   => D(9),
    D11   => D(10),
    D12   => D(11),
    D13   => D(12),
    D14   => D(13),
    D15   => D(14),
    D16   => D(15),
    D17   => D(16),
    D18   => D(17),

    OVF   => OVF,
    R     => R,
    RZ    => RZ,
    WE    => WE,

    Z1    => Z(0),
    Z2    => Z(1),
    Z3    => Z(2),
    Z4    => Z(3),
    Z5    => Z(4),
    Z6    => Z(5),
    Z7    => Z(6),
    Z8    => Z(7),
    Z9    => Z(8),
    Z10   => Z(9),
    Z11   => Z(10),
    Z12   => Z(11),
    Z13   => Z(12),
    Z14   => Z(13),
    Z15   => Z(14),
    Z16   => Z(15),
    Z17   => Z(16),
    Z18   => Z(17),
    Z19   => Z(18),
    Z20   => Z(19),
    Z21   => Z(20),
    Z22   => Z(21),
    Z23   => Z(22),
    Z24   => Z(23),
    Z25   => Z(24),
    Z26   => Z(25),
    Z27   => Z(26),
    Z28   => Z(27),
    Z29   => Z(28),
    Z30   => Z(29),
    Z31   => Z(30),
    Z32   => Z(31),
    Z33   => Z(32),
    Z34   => Z(33),
    Z35   => Z(34),
    Z36   => Z(35),
    Z37   => Z(36),
    Z38   => Z(37),
    Z39   => Z(38),
    Z40   => Z(39),
    Z41   => Z(40),
    Z42   => Z(41),
    Z43   => Z(42),
    Z44   => Z(43),
    Z45   => Z(44),
    Z46   => Z(45),
    Z47   => Z(46),
    Z48   => Z(47),
    Z49   => Z(48),
    Z50   => Z(49),
    Z51   => Z(50),
    Z52   => Z(51),
    Z53   => Z(52),
    Z54   => Z(53),
    Z55   => Z(54),
    Z56   => Z(55)
);

end NXP_ARCH;
-- #}}}#

----------------------------------------------------------------------------------------------------

-- =================================================================================================
--   NX_DSP_L_SPLIT definition                                                          2018/11/30
-- =================================================================================================

library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.STD_LOGIC_arith.ALL;
use IEEE.STD_LOGIC_signed.ALL;

entity NX_DSP_L_SPLIT is
generic (
-------------------------------------------------------------------------
-- Generic declaration to define the "raw_config0" (cfg_mode). Defines :
------------------------------------------------------------------------- 
   SIGNED_MODE          : bit                    := '0';
   PRE_ADDER_OP         : bit                    := '0';       -- '0' = Additon, '1' = Subraction
   MUX_A                : bit                    := '0';       -- '0' = A input, '1' = CAI input
   MUX_B                : bit                    := '0';       -- '0' = B input, '1' = CBI input
   MUX_P                : bit                    := '0';       -- '0' for PRE_ADDER, '0' for B input
   MUX_X                : bit_vector(1 downto 0) := B"00";     -- Select X operand   "00" = C,
                                                               --                    "01" = CZI,
                                                               --                    "11" = SHFT(CZI) & C(11:0),
                                                               --                    "10" Select Z feedback
   MUX_Y                : bit                    := '0';       -- '0' Select MULT output, '1' for (B & A)
   MUX_CI               : bit                    := '0';       -- Select fabric input (not cascade)
   MUX_Z                : bit                    := '0';       -- Select ALU output
                                                               -- (not ALU input operand coming from PR_Y)

   Z_FEEDBACK_SHL12     : bit                    := '0';       -- '0' for No shift, '1' for 12-bit left shift
   ENABLE_SATURATION    : bit                    := '0';       -- '0' for Disable,  '1' for Enable
   SATURATION_RANK      : bit_vector(5 downto 0) := B"000000"; -- Weight of useful MSB
                                                               --        on Z and CZO result
                                                               --(to define saturation and overflow)

   ALU_DYNAMIC_OP       : bit                    := '0';       -- '0' for Static,
                                                               -- '1' for Dynamic
                                                               -- (D6 ... D1 is not used for dynamic operation)
   CO_SEL               : bit                    := '0';       -- '0' for C0 = ALU(36), '1' for CO = ALU(48)

-------------------------------------------------------------------------
-- Generic declaration to define the "raw_config1" (cfg_pipe_mux)
-------------------------------------------------------------------------
   PR_A_MUX                : bit_vector(1 downto 0) := B"00"; -- Number of pipe reg levels
                                                              --        on A input
   PR_A_CASCADE_MUX        : bit_vector(1 downto 0) := B"00"; -- Number of pipe reg levels
                                                              --        for CAO output
   PR_B_MUX                : bit_vector(1 downto 0) := B"00"; -- Number of pipe reg levels
                                                              --        on B input
   PR_B_CASCADE_MUX        : bit_vector(1 downto 0) := B"00"; -- Number of pipe reg levels
                                                              --        for CAO output

   PR_C_MUX                : bit                    := '0';   -- '0' for No pipe reg, '1' for 1 pipe reg
   PR_D_MUX                : bit                    := '0';   -- '0' for No pipe reg, '1' for 1 pipe reg
   PR_CI_MUX               : bit                    := '0';   -- '0' for No pipe reg, '1' for 1 pipe reg
   PR_P_MUX                : bit                    := '0';   -- '0' for No pipe reg, '1' for 1 pipe reg (Pre-adder)
   PR_X_MUX                : bit                    := '0';   -- '0' for No pipe reg, '1' for 1 pipe reg
   PR_Y_MUX                : bit                    := '0';   -- '0' for No pipe reg, '1' for 1 pipe reg

   PR_MULT_MUX             : bit                    := '0';   -- No pipe reg  -- Register inside MULT
   PR_ALU_MUX              : bit                    := '0';   -- No pipe reg  -- Register inside ALU
   PR_Z_MUX                : bit                    := '0';   -- Registered output

   PR_CO_MUX               : bit                    := '0';   -- '0' for No pipe reg, '1' for 1 pipe reg
   PR_OV_MUX               : bit                    := '0';   -- '0' for No pipe reg, '1' for 1 pipe reg

-------------------------------------------------------------------------
-- Generic declaration to define the "raw_config2" (cfg_pipe_rst)
-------------------------------------------------------------------------
   ENABLE_PR_A_RST         : bit                    := '0';   -- '0' for Disable, '1' for Enable 
   ENABLE_PR_B_RST         : bit                    := '0';   -- '0' for Disable, '1' for Enable 
   ENABLE_PR_C_RST         : bit                    := '0';   -- '0' for Disable, '1' for Enable 
   ENABLE_PR_D_RST         : bit                    := '0';   -- '0' for Disable, '1' for Enable 
   ENABLE_PR_CI_RST        : bit                    := '0';   -- '0' for Disable, '1' for Enable 
   ENABLE_PR_P_RST         : bit                    := '0';   -- '0' for Disable, '1' for Enable 
   ENABLE_PR_X_RST         : bit                    := '0';   -- '0' for Disable, '1' for Enable 
   ENABLE_PR_Y_RST         : bit                    := '0';   -- '0' for Disable, '1' for Enable 
   ENABLE_PR_MULT_RST      : bit                    := '0';   -- '0' for Disable, '1' for Enable 
   ENABLE_PR_ALU_RST       : bit                    := '0';   -- '0' for Disable, '1' for Enable 
   ENABLE_PR_Z_RST         : bit                    := '0';   -- '0' for Disable, '1' for Enable 
   ENABLE_PR_CO_RST        : bit                    := '0';   -- '0' for Disable, '1' for Enable 
   ENABLE_PR_OV_RST        : bit                    := '0';   -- '0' for Disable, '1' for Enable 

-------------------------------------------------------------------------
-- Constants declaration to define the "cfg_pipe_rst" -- raw_config3(6 downto 0)
-------------------------------------------------------------------------
   ALU_OP                  : bit_vector(5 downto 0) := B"000000"; -- Addition = "000000", Subtract = "001010"
   ALU_MUX                 : bit                    := '0'        -- '0' for Don't swap ALU operands,
                                                                  -- '1' for ALU Swap operands
    );
port(
   CK   : IN  std_logic;
   R    : IN  std_logic;
   RZ   : IN  std_logic;
   WE   : IN  std_logic;

   CI   : IN  std_logic;     -- cy_i
   A    : IN  std_logic_vector(23 downto 0);
   B    : IN  std_logic_vector(17 downto 0);
   C    : IN  std_logic_vector(35 downto 0);
   D    : IN  std_logic_vector(17 downto 0);
   CAI  : IN  std_logic_vector(23 downto 0);
   CBI  : IN  std_logic_vector(17 downto 0);
   CZI  : IN  std_logic_vector(55 downto 0);
   CCI  : IN  std_logic;  -- ccy_i

   Z    : out  std_logic_vector(55 downto 0);
   CO   : OUT  std_logic;  -- cy_o
   CO36 : OUT  std_logic;  -- cy36_o
   CO56 : OUT  std_logic;  -- cy56_o
   OVF  : OUT  std_logic;
   CAO  : OUT  std_logic_vector(23 downto 0);
   CBO  : OUT  std_logic_vector(17 downto 0);
   CZO  : OUT  std_logic_vector(55 downto 0);
   CCO  : OUT  std_logic  -- ccy_o
  );
end NX_DSP_L_SPLIT;

-- architecture NX_RTL of NX_DSP_L_SPLIT#{{{#
architecture NX_RTL of NX_DSP_L_SPLIT is

----------------------------------------------------------
-- Internal signals to be mapped to the NX_DSP_L component
----------------------------------------------------------
signal A1         : std_logic := '0';
signal A2         : std_logic := '0';
signal A3         : std_logic := '0';
signal A4         : std_logic := '0';
signal A5         : std_logic := '0';
signal A6         : std_logic := '0';
signal A7         : std_logic := '0';
signal A8         : std_logic := '0';
signal A9         : std_logic := '0';
signal A10        : std_logic := '0';
signal A11        : std_logic := '0';
signal A12        : std_logic := '0';
signal A13        : std_logic := '0';
signal A14        : std_logic := '0';
signal A15        : std_logic := '0';
signal A16        : std_logic := '0';
signal A17        : std_logic := '0';
signal A18        : std_logic := '0';
signal A19        : std_logic := '0';
signal A20        : std_logic := '0';
signal A21        : std_logic := '0';
signal A22        : std_logic := '0';
signal A23        : std_logic := '0';
signal A24        : std_logic := '0';

signal B1         : std_logic := '0';
signal B2         : std_logic := '0';
signal B3         : std_logic := '0';
signal B4         : std_logic := '0';
signal B5         : std_logic := '0';
signal B6         : std_logic := '0';
signal B7         : std_logic := '0';
signal B8         : std_logic := '0';
signal B9         : std_logic := '0';
signal B10        : std_logic := '0';
signal B11        : std_logic := '0';
signal B12        : std_logic := '0';
signal B13        : std_logic := '0';
signal B14        : std_logic := '0';
signal B15        : std_logic := '0';
signal B16        : std_logic := '0';
signal B17        : std_logic := '0';
signal B18        : std_logic := '0';
         
signal C1         : std_logic := '0';
signal C2         : std_logic := '0';
signal C3         : std_logic := '0';
signal C4         : std_logic := '0';
signal C5         : std_logic := '0';
signal C6         : std_logic := '0';
signal C7         : std_logic := '0';
signal C8         : std_logic := '0';
signal C9         : std_logic := '0';
signal C10        : std_logic := '0';
signal C11        : std_logic := '0';
signal C12        : std_logic := '0';
signal C13        : std_logic := '0';
signal C14        : std_logic := '0';
signal C15        : std_logic := '0';
signal C16        : std_logic := '0';
signal C17        : std_logic := '0';
signal C18        : std_logic := '0';
signal C19        : std_logic := '0';
signal C20        : std_logic := '0';
signal C21        : std_logic := '0';
signal C22        : std_logic := '0';
signal C23        : std_logic := '0';
signal C24        : std_logic := '0';
signal C25        : std_logic := '0';
signal C26        : std_logic := '0';
signal C27        : std_logic := '0';
signal C28        : std_logic := '0';
signal C29        : std_logic := '0';
signal C30        : std_logic := '0';
signal C31        : std_logic := '0';
signal C32        : std_logic := '0';
signal C33        : std_logic := '0';
signal C34        : std_logic := '0';
signal C35        : std_logic := '0';
signal C36        : std_logic := '0';

signal CAI1       : std_logic := '0';
signal CAI2       : std_logic := '0';
signal CAI3       : std_logic := '0';
signal CAI4       : std_logic := '0';
signal CAI5       : std_logic := '0';
signal CAI6       : std_logic := '0';
signal CAI7       : std_logic := '0';
signal CAI8       : std_logic := '0';
signal CAI9       : std_logic := '0';
signal CAI10      : std_logic := '0';
signal CAI11      : std_logic := '0';
signal CAI12      : std_logic := '0';
signal CAI13      : std_logic := '0';
signal CAI14      : std_logic := '0';
signal CAI15      : std_logic := '0';
signal CAI16      : std_logic := '0';
signal CAI17      : std_logic := '0';
signal CAI18      : std_logic := '0';
signal CAI19      : std_logic := '0';
signal CAI20      : std_logic := '0';
signal CAI21      : std_logic := '0';
signal CAI22      : std_logic := '0';
signal CAI23      : std_logic := '0';
signal CAI24      : std_logic := '0';

signal CAO1       : std_logic := '0';
signal CAO2       : std_logic := '0';
signal CAO3       : std_logic := '0';
signal CAO4       : std_logic := '0';
signal CAO5       : std_logic := '0';
signal CAO6       : std_logic := '0';
signal CAO7       : std_logic := '0';
signal CAO8       : std_logic := '0';
signal CAO9       : std_logic := '0';
signal CAO10      : std_logic := '0';
signal CAO11      : std_logic := '0';
signal CAO12      : std_logic := '0';
signal CAO13      : std_logic := '0';
signal CAO14      : std_logic := '0';
signal CAO15      : std_logic := '0';
signal CAO16      : std_logic := '0';
signal CAO17      : std_logic := '0';
signal CAO18      : std_logic := '0';
signal CAO19      : std_logic := '0';
signal CAO20      : std_logic := '0';
signal CAO21      : std_logic := '0';
signal CAO22      : std_logic := '0';
signal CAO23      : std_logic := '0';
signal CAO24      : std_logic := '0';

signal CBI1       : std_logic := '0';
signal CBI2       : std_logic := '0';
signal CBI3       : std_logic := '0';
signal CBI4       : std_logic := '0';
signal CBI5       : std_logic := '0';
signal CBI6       : std_logic := '0';
signal CBI7       : std_logic := '0';
signal CBI8       : std_logic := '0';
signal CBI9       : std_logic := '0';
signal CBI10      : std_logic := '0';
signal CBI11      : std_logic := '0';
signal CBI12      : std_logic := '0';
signal CBI13      : std_logic := '0';
signal CBI14      : std_logic := '0';
signal CBI15      : std_logic := '0';
signal CBI16      : std_logic := '0';
signal CBI17      : std_logic := '0';
signal CBI18      : std_logic := '0';

signal CBO1       : std_logic := '0';
signal CBO2       : std_logic := '0';
signal CBO3       : std_logic := '0';
signal CBO4       : std_logic := '0';
signal CBO5       : std_logic := '0';
signal CBO6       : std_logic := '0';
signal CBO7       : std_logic := '0';
signal CBO8       : std_logic := '0';
signal CBO9       : std_logic := '0';
signal CBO10      : std_logic := '0';
signal CBO11      : std_logic := '0';
signal CBO12      : std_logic := '0';
signal CBO13      : std_logic := '0';
signal CBO14      : std_logic := '0';
signal CBO15      : std_logic := '0';
signal CBO16      : std_logic := '0';
signal CBO17      : std_logic := '0';
signal CBO18      : std_logic := '0';

signal CO37       : std_logic := '0';
signal CO57       : std_logic := '0';

signal CZI1       : std_logic := '0';
signal CZI2       : std_logic := '0';
signal CZI3       : std_logic := '0';
signal CZI4       : std_logic := '0';
signal CZI5       : std_logic := '0';
signal CZI6       : std_logic := '0';
signal CZI7       : std_logic := '0';
signal CZI8       : std_logic := '0';
signal CZI9       : std_logic := '0';
signal CZI10      : std_logic := '0';
signal CZI11      : std_logic := '0';
signal CZI12      : std_logic := '0';
signal CZI13      : std_logic := '0';
signal CZI14      : std_logic := '0';
signal CZI15      : std_logic := '0';
signal CZI16      : std_logic := '0';
signal CZI17      : std_logic := '0';
signal CZI18      : std_logic := '0';
signal CZI19      : std_logic := '0';
signal CZI20      : std_logic := '0';
signal CZI21      : std_logic := '0';
signal CZI22      : std_logic := '0';
signal CZI23      : std_logic := '0';
signal CZI24      : std_logic := '0';
signal CZI25      : std_logic := '0';
signal CZI26      : std_logic := '0';
signal CZI27      : std_logic := '0';
signal CZI28      : std_logic := '0';
signal CZI29      : std_logic := '0';
signal CZI30      : std_logic := '0';
signal CZI31      : std_logic := '0';
signal CZI32      : std_logic := '0';
signal CZI33      : std_logic := '0';
signal CZI34      : std_logic := '0';
signal CZI35      : std_logic := '0';
signal CZI36      : std_logic := '0';
signal CZI37      : std_logic := '0';
signal CZI38      : std_logic := '0';
signal CZI39      : std_logic := '0';
signal CZI40      : std_logic := '0';
signal CZI41      : std_logic := '0';
signal CZI42      : std_logic := '0';
signal CZI43      : std_logic := '0';
signal CZI44      : std_logic := '0';
signal CZI45      : std_logic := '0';
signal CZI46      : std_logic := '0';
signal CZI47      : std_logic := '0';
signal CZI48      : std_logic := '0';
signal CZI49      : std_logic := '0';
signal CZI50      : std_logic := '0';
signal CZI51      : std_logic := '0';
signal CZI52      : std_logic := '0';
signal CZI53      : std_logic := '0';
signal CZI54      : std_logic := '0';
signal CZI55      : std_logic := '0';
signal CZI56      : std_logic := '0';

signal CZO1       : std_logic := '0';
signal CZO2       : std_logic := '0';
signal CZO3       : std_logic := '0';
signal CZO4       : std_logic := '0';
signal CZO5       : std_logic := '0';
signal CZO6       : std_logic := '0';
signal CZO7       : std_logic := '0';
signal CZO8       : std_logic := '0';
signal CZO9       : std_logic := '0';
signal CZO10      : std_logic := '0';
signal CZO11      : std_logic := '0';
signal CZO12      : std_logic := '0';
signal CZO13      : std_logic := '0';
signal CZO14      : std_logic := '0';
signal CZO15      : std_logic := '0';
signal CZO16      : std_logic := '0';
signal CZO17      : std_logic := '0';
signal CZO18      : std_logic := '0';
signal CZO19      : std_logic := '0';
signal CZO20      : std_logic := '0';
signal CZO21      : std_logic := '0';
signal CZO22      : std_logic := '0';
signal CZO23      : std_logic := '0';
signal CZO24      : std_logic := '0';
signal CZO25      : std_logic := '0';
signal CZO26      : std_logic := '0';
signal CZO27      : std_logic := '0';
signal CZO28      : std_logic := '0';
signal CZO29      : std_logic := '0';
signal CZO30      : std_logic := '0';
signal CZO31      : std_logic := '0';
signal CZO32      : std_logic := '0';
signal CZO33      : std_logic := '0';
signal CZO34      : std_logic := '0';
signal CZO35      : std_logic := '0';
signal CZO36      : std_logic := '0';
signal CZO37      : std_logic := '0';
signal CZO38      : std_logic := '0';
signal CZO39      : std_logic := '0';
signal CZO40      : std_logic := '0';
signal CZO41      : std_logic := '0';
signal CZO42      : std_logic := '0';
signal CZO43      : std_logic := '0';
signal CZO44      : std_logic := '0';
signal CZO45      : std_logic := '0';
signal CZO46      : std_logic := '0';
signal CZO47      : std_logic := '0';
signal CZO48      : std_logic := '0';
signal CZO49      : std_logic := '0';
signal CZO50      : std_logic := '0';
signal CZO51      : std_logic := '0';
signal CZO52      : std_logic := '0';
signal CZO53      : std_logic := '0';
signal CZO54      : std_logic := '0';
signal CZO55      : std_logic := '0';
signal CZO56      : std_logic := '0';

signal D1         : std_logic := '0';
signal D2         : std_logic := '0';
signal D3         : std_logic := '0';
signal D4         : std_logic := '0';
signal D5         : std_logic := '0';
signal D6         : std_logic := '0';
signal D7         : std_logic := '0';
signal D8         : std_logic := '0';
signal D9         : std_logic := '0';
signal D10        : std_logic := '0';
signal D11        : std_logic := '0';
signal D12        : std_logic := '0';
signal D13        : std_logic := '0';
signal D14        : std_logic := '0';
signal D15        : std_logic := '0';
signal D16        : std_logic := '0';
signal D17        : std_logic := '0';
signal D18        : std_logic := '0';

signal Z1         : std_logic := '0';
signal Z2         : std_logic := '0';
signal Z3         : std_logic := '0';
signal Z4         : std_logic := '0';
signal Z5         : std_logic := '0';
signal Z6         : std_logic := '0';
signal Z7         : std_logic := '0';
signal Z8         : std_logic := '0';
signal Z9         : std_logic := '0';
signal Z10        : std_logic := '0';
signal Z11        : std_logic := '0';
signal Z12        : std_logic := '0';
signal Z13        : std_logic := '0';
signal Z14        : std_logic := '0';
signal Z15        : std_logic := '0';
signal Z16        : std_logic := '0';
signal Z17        : std_logic := '0';
signal Z18        : std_logic := '0';
signal Z19        : std_logic := '0';
signal Z20        : std_logic := '0';
signal Z21        : std_logic := '0';
signal Z22        : std_logic := '0';
signal Z23        : std_logic := '0';
signal Z24        : std_logic := '0';
signal Z25        : std_logic := '0';
signal Z26        : std_logic := '0';
signal Z27        : std_logic := '0';
signal Z28        : std_logic := '0';
signal Z29        : std_logic := '0';
signal Z30        : std_logic := '0';
signal Z31        : std_logic := '0';
signal Z32        : std_logic := '0';
signal Z33        : std_logic := '0';
signal Z34        : std_logic := '0';
signal Z35        : std_logic := '0';
signal Z36        : std_logic := '0';
signal Z37        : std_logic := '0';
signal Z38        : std_logic := '0';
signal Z39        : std_logic := '0';
signal Z40        : std_logic := '0';
signal Z41        : std_logic := '0';
signal Z42        : std_logic := '0';
signal Z43        : std_logic := '0';
signal Z44        : std_logic := '0';
signal Z45        : std_logic := '0';
signal Z46        : std_logic := '0';
signal Z47        : std_logic := '0';
signal Z48        : std_logic := '0';
signal Z49        : std_logic := '0';
signal Z50        : std_logic := '0';
signal Z51        : std_logic := '0';
signal Z52        : std_logic := '0';
signal Z53        : std_logic := '0';
signal Z54        : std_logic := '0';
signal Z55        : std_logic := '0';


constant raw_config0_gen : bit_vector(19 downto 0)
    := CO_SEL & ALU_DYNAMIC_OP & SATURATION_RANK & ENABLE_SATURATION & Z_FEEDBACK_SHL12 & MUX_Z &
       MUX_CI & MUX_Y & MUX_X & MUX_P & MUX_B & MUX_A & PRE_ADDER_OP & SIGNED_MODE;

constant raw_config1_gen : bit_vector(18 downto 0)
    := PR_OV_MUX & PR_CO_MUX & PR_Z_MUX & PR_ALU_MUX & PR_MULT_MUX & PR_Y_MUX & PR_X_MUX &
       PR_P_MUX & PR_CI_MUX & PR_D_MUX & PR_C_MUX & PR_B_CASCADE_MUX & PR_B_MUX & PR_A_CASCADE_MUX &
       PR_A_MUX;

constant raw_config2_gen : bit_vector(12 downto 0)
    := ENABLE_PR_OV_RST & ENABLE_PR_CO_RST & ENABLE_PR_Z_RST & ENABLE_PR_ALU_RST &
       ENABLE_PR_MULT_RST & ENABLE_PR_Y_RST & ENABLE_PR_X_RST & ENABLE_PR_P_RST & ENABLE_PR_CI_RST &
       ENABLE_PR_D_RST & ENABLE_PR_C_RST & ENABLE_PR_B_RST & ENABLE_PR_A_RST;

constant raw_config3_gen : bit_vector(6 downto 0) := ALU_MUX & ALU_OP;


----------------------------------------------------------
-- NX_DSP_L declaration
----------------------------------------------------------
component NX_DSP_L
generic (
   std_mode    : string := ""; -- standard mode [ADD36, SUB36, SMUL18, UMUL18, ...] empty for raw
   raw_config0 : bit_vector(19 downto 0) := B"00000000000000000000";        -- MUX
   raw_config1 : bit_vector(18 downto 0) := B"0000000000000000000";         -- PRC
   raw_config2 : bit_vector(12 downto 0) := B"0000000000000";               -- PRR
   raw_config3 : bit_vector( 6 downto 0) := B"0000000"                      -- ALU
   );
port (
   A1         : in std_logic := '0';
   A2         : in std_logic := '0';
   A3         : in std_logic := '0';
   A4         : in std_logic := '0';
   A5         : in std_logic := '0';
   A6         : in std_logic := '0';
   A7         : in std_logic := '0';
   A8         : in std_logic := '0';
   A9         : in std_logic := '0';
   A10        : in std_logic := '0';
   A11        : in std_logic := '0';
   A12        : in std_logic := '0';
   A13        : in std_logic := '0';
   A14        : in std_logic := '0';
   A15        : in std_logic := '0';
   A16        : in std_logic := '0';
   A17        : in std_logic := '0';
   A18        : in std_logic := '0';
   A19        : in std_logic := '0';
   A20        : in std_logic := '0';
   A21        : in std_logic := '0';
   A22        : in std_logic := '0';
   A23        : in std_logic := '0';
   A24        : in std_logic := '0';

   B1         : in std_logic := '0';
   B2         : in std_logic := '0';
   B3         : in std_logic := '0';
   B4         : in std_logic := '0';
   B5         : in std_logic := '0';
   B6         : in std_logic := '0';
   B7         : in std_logic := '0';
   B8         : in std_logic := '0';
   B9         : in std_logic := '0';
   B10        : in std_logic := '0';
   B11        : in std_logic := '0';
   B12        : in std_logic := '0';
   B13        : in std_logic := '0';
   B14        : in std_logic := '0';
   B15        : in std_logic := '0';
   B16        : in std_logic := '0';
   B17        : in std_logic := '0';
   B18        : in std_logic := '0';

   C1         : in std_logic := '0';
   C2         : in std_logic := '0';
   C3         : in std_logic := '0';
   C4         : in std_logic := '0';
   C5         : in std_logic := '0';
   C6         : in std_logic := '0';
   C7         : in std_logic := '0';
   C8         : in std_logic := '0';
   C9         : in std_logic := '0';
   C10        : in std_logic := '0';
   C11        : in std_logic := '0';
   C12        : in std_logic := '0';
   C13        : in std_logic := '0';
   C14        : in std_logic := '0';
   C15        : in std_logic := '0';
   C16        : in std_logic := '0';
   C17        : in std_logic := '0';
   C18        : in std_logic := '0';
   C19        : in std_logic := '0';
   C20        : in std_logic := '0';
   C21        : in std_logic := '0';
   C22        : in std_logic := '0';
   C23        : in std_logic := '0';
   C24        : in std_logic := '0';
   C25        : in std_logic := '0';
   C26        : in std_logic := '0';
   C27        : in std_logic := '0';
   C28        : in std_logic := '0';
   C29        : in std_logic := '0';
   C30        : in std_logic := '0';
   C31        : in std_logic := '0';
   C32        : in std_logic := '0';
   C33        : in std_logic := '0';
   C34        : in std_logic := '0';
   C35        : in std_logic := '0';
   C36        : in std_logic := '0';

   CAI1       : in std_logic := '0';
   CAI2       : in std_logic := '0';
   CAI3       : in std_logic := '0';
   CAI4       : in std_logic := '0';
   CAI5       : in std_logic := '0';
   CAI6       : in std_logic := '0';
   CAI7       : in std_logic := '0';
   CAI8       : in std_logic := '0';
   CAI9       : in std_logic := '0';
   CAI10      : in std_logic := '0';
   CAI11      : in std_logic := '0';
   CAI12      : in std_logic := '0';
   CAI13      : in std_logic := '0';
   CAI14      : in std_logic := '0';
   CAI15      : in std_logic := '0';
   CAI16      : in std_logic := '0';
   CAI17      : in std_logic := '0';
   CAI18      : in std_logic := '0';
   CAI19      : in std_logic := '0';
   CAI20      : in std_logic := '0';
   CAI21      : in std_logic := '0';
   CAI22      : in std_logic := '0';
   CAI23      : in std_logic := '0';
   CAI24      : in std_logic := '0';

   CAO1       : out std_logic := '0';
   CAO2       : out std_logic := '0';
   CAO3       : out std_logic := '0';
   CAO4       : out std_logic := '0';
   CAO5       : out std_logic := '0';
   CAO6       : out std_logic := '0';
   CAO7       : out std_logic := '0';
   CAO8       : out std_logic := '0';
   CAO9       : out std_logic := '0';
   CAO10      : out std_logic := '0';
   CAO11      : out std_logic := '0';
   CAO12      : out std_logic := '0';
   CAO13      : out std_logic := '0';
   CAO14      : out std_logic := '0';
   CAO15      : out std_logic := '0';
   CAO16      : out std_logic := '0';
   CAO17      : out std_logic := '0';
   CAO18      : out std_logic := '0';
   CAO19      : out std_logic := '0';
   CAO20      : out std_logic := '0';
   CAO21      : out std_logic := '0';
   CAO22      : out std_logic := '0';
   CAO23      : out std_logic := '0';
   CAO24      : out std_logic := '0';

   CBI1       : in std_logic := '0';
   CBI2       : in std_logic := '0';
   CBI3       : in std_logic := '0';
   CBI4       : in std_logic := '0';
   CBI5       : in std_logic := '0';
   CBI6       : in std_logic := '0';
   CBI7       : in std_logic := '0';
   CBI8       : in std_logic := '0';
   CBI9       : in std_logic := '0';
   CBI10      : in std_logic := '0';
   CBI11      : in std_logic := '0';
   CBI12      : in std_logic := '0';
   CBI13      : in std_logic := '0';
   CBI14      : in std_logic := '0';
   CBI15      : in std_logic := '0';
   CBI16      : in std_logic := '0';
   CBI17      : in std_logic := '0';
   CBI18      : in std_logic := '0';

   CBO1       : out std_logic := '0';
   CBO2       : out std_logic := '0';
   CBO3       : out std_logic := '0';
   CBO4       : out std_logic := '0';
   CBO5       : out std_logic := '0';
   CBO6       : out std_logic := '0';
   CBO7       : out std_logic := '0';
   CBO8       : out std_logic := '0';
   CBO9       : out std_logic := '0';
   CBO10      : out std_logic := '0';
   CBO11      : out std_logic := '0';
   CBO12      : out std_logic := '0';
   CBO13      : out std_logic := '0';
   CBO14      : out std_logic := '0';
   CBO15      : out std_logic := '0';
   CBO16      : out std_logic := '0';
   CBO17      : out std_logic := '0';
   CBO18      : out std_logic := '0';

   CCI        : in std_logic := '0';
   CCO        : out std_logic := '0';
   CI         : in std_logic := '0';
   CK         : in std_logic := '0';
   CO         : out std_logic := '0';
   CO37       : out std_logic := '0';
   CO57       : out std_logic := '0';

   CZI1       : in std_logic := '0';
   CZI2       : in std_logic := '0';
   CZI3       : in std_logic := '0';
   CZI4       : in std_logic := '0';
   CZI5       : in std_logic := '0';
   CZI6       : in std_logic := '0';
   CZI7       : in std_logic := '0';
   CZI8       : in std_logic := '0';
   CZI9       : in std_logic := '0';
   CZI10      : in std_logic := '0';
   CZI11      : in std_logic := '0';
   CZI12      : in std_logic := '0';
   CZI13      : in std_logic := '0';
   CZI14      : in std_logic := '0';
   CZI15      : in std_logic := '0';
   CZI16      : in std_logic := '0';
   CZI17      : in std_logic := '0';
   CZI18      : in std_logic := '0';
   CZI19      : in std_logic := '0';
   CZI20      : in std_logic := '0';
   CZI21      : in std_logic := '0';
   CZI22      : in std_logic := '0';
   CZI23      : in std_logic := '0';
   CZI24      : in std_logic := '0';
   CZI25      : in std_logic := '0';
   CZI26      : in std_logic := '0';
   CZI27      : in std_logic := '0';
   CZI28      : in std_logic := '0';
   CZI29      : in std_logic := '0';
   CZI30      : in std_logic := '0';
   CZI31      : in std_logic := '0';
   CZI32      : in std_logic := '0';
   CZI33      : in std_logic := '0';
   CZI34      : in std_logic := '0';
   CZI35      : in std_logic := '0';
   CZI36      : in std_logic := '0';
   CZI37      : in std_logic := '0';
   CZI38      : in std_logic := '0';
   CZI39      : in std_logic := '0';
   CZI40      : in std_logic := '0';
   CZI41      : in std_logic := '0';
   CZI42      : in std_logic := '0';
   CZI43      : in std_logic := '0';
   CZI44      : in std_logic := '0';
   CZI45      : in std_logic := '0';
   CZI46      : in std_logic := '0';
   CZI47      : in std_logic := '0';
   CZI48      : in std_logic := '0';
   CZI49      : in std_logic := '0';
   CZI50      : in std_logic := '0';
   CZI51      : in std_logic := '0';
   CZI52      : in std_logic := '0';
   CZI53      : in std_logic := '0';
   CZI54      : in std_logic := '0';
   CZI55      : in std_logic := '0';
   CZI56      : in std_logic := '0';

   CZO1       : out std_logic := '0';
   CZO2       : out std_logic := '0';
   CZO3       : out std_logic := '0';
   CZO4       : out std_logic := '0';
   CZO5       : out std_logic := '0';
   CZO6       : out std_logic := '0';
   CZO7       : out std_logic := '0';
   CZO8       : out std_logic := '0';
   CZO9       : out std_logic := '0';
   CZO10      : out std_logic := '0';
   CZO11      : out std_logic := '0';
   CZO12      : out std_logic := '0';
   CZO13      : out std_logic := '0';
   CZO14      : out std_logic := '0';
   CZO15      : out std_logic := '0';
   CZO16      : out std_logic := '0';
   CZO17      : out std_logic := '0';
   CZO18      : out std_logic := '0';
   CZO19      : out std_logic := '0';
   CZO20      : out std_logic := '0';
   CZO21      : out std_logic := '0';
   CZO22      : out std_logic := '0';
   CZO23      : out std_logic := '0';
   CZO24      : out std_logic := '0';
   CZO25      : out std_logic := '0';
   CZO26      : out std_logic := '0';
   CZO27      : out std_logic := '0';
   CZO28      : out std_logic := '0';
   CZO29      : out std_logic := '0';
   CZO30      : out std_logic := '0';
   CZO31      : out std_logic := '0';
   CZO32      : out std_logic := '0';
   CZO33      : out std_logic := '0';
   CZO34      : out std_logic := '0';
   CZO35      : out std_logic := '0';
   CZO36      : out std_logic := '0';
   CZO37      : out std_logic := '0';
   CZO38      : out std_logic := '0';
   CZO39      : out std_logic := '0';
   CZO40      : out std_logic := '0';
   CZO41      : out std_logic := '0';
   CZO42      : out std_logic := '0';
   CZO43      : out std_logic := '0';
   CZO44      : out std_logic := '0';
   CZO45      : out std_logic := '0';
   CZO46      : out std_logic := '0';
   CZO47      : out std_logic := '0';
   CZO48      : out std_logic := '0';
   CZO49      : out std_logic := '0';
   CZO50      : out std_logic := '0';
   CZO51      : out std_logic := '0';
   CZO52      : out std_logic := '0';
   CZO53      : out std_logic := '0';
   CZO54      : out std_logic := '0';
   CZO55      : out std_logic := '0';
   CZO56      : out std_logic := '0';

   D1         : in std_logic := '0';
   D2         : in std_logic := '0';
   D3         : in std_logic := '0';
   D4         : in std_logic := '0';
   D5         : in std_logic := '0';
   D6         : in std_logic := '0';
   D7         : in std_logic := '0';
   D8         : in std_logic := '0';
   D9         : in std_logic := '0';
   D10        : in std_logic := '0';
   D11        : in std_logic := '0';
   D12        : in std_logic := '0';
   D13        : in std_logic := '0';
   D14        : in std_logic := '0';
   D15        : in std_logic := '0';
   D16        : in std_logic := '0';
   D17        : in std_logic := '0';
   D18        : in std_logic := '0';

   OVF        : out std_logic := '0';
   R          : in std_logic := '0';
   RZ         : in std_logic := '0';
   WE         : in std_logic := '0';

   Z1         : out std_logic := '0';
   Z2         : out std_logic := '0';
   Z3         : out std_logic := '0';
   Z4         : out std_logic := '0';
   Z5         : out std_logic := '0';
   Z6         : out std_logic := '0';
   Z7         : out std_logic := '0';
   Z8         : out std_logic := '0';
   Z9         : out std_logic := '0';
   Z10        : out std_logic := '0';
   Z11        : out std_logic := '0';
   Z12        : out std_logic := '0';
   Z13        : out std_logic := '0';
   Z14        : out std_logic := '0';
   Z15        : out std_logic := '0';
   Z16        : out std_logic := '0';
   Z17        : out std_logic := '0';
   Z18        : out std_logic := '0';
   Z19        : out std_logic := '0';
   Z20        : out std_logic := '0';
   Z21        : out std_logic := '0';
   Z22        : out std_logic := '0';
   Z23        : out std_logic := '0';
   Z24        : out std_logic := '0';
   Z25        : out std_logic := '0';
   Z26        : out std_logic := '0';
   Z27        : out std_logic := '0';
   Z28        : out std_logic := '0';
   Z29        : out std_logic := '0';
   Z30        : out std_logic := '0';
   Z31        : out std_logic := '0';
   Z32        : out std_logic := '0';
   Z33        : out std_logic := '0';
   Z34        : out std_logic := '0';
   Z35        : out std_logic := '0';
   Z36        : out std_logic := '0';
   Z37        : out std_logic := '0';
   Z38        : out std_logic := '0';
   Z39        : out std_logic := '0';
   Z40        : out std_logic := '0';
   Z41        : out std_logic := '0';
   Z42        : out std_logic := '0';
   Z43        : out std_logic := '0';
   Z44        : out std_logic := '0';
   Z45        : out std_logic := '0';
   Z46        : out std_logic := '0';
   Z47        : out std_logic := '0';
   Z48        : out std_logic := '0';
   Z49        : out std_logic := '0';
   Z50        : out std_logic := '0';
   Z51        : out std_logic := '0';
   Z52        : out std_logic := '0';
   Z53        : out std_logic := '0';
   Z54        : out std_logic := '0';
   Z55        : out std_logic := '0';
   Z56        : out std_logic := '0'
   );
end component;

begin

----------------------------------------------------------
-- Instantiation the NX_DSP_L component
----------------------------------------------------------
DSP_INST : NX_DSP_L
generic map (
   std_mode    => "", -- standard mode [ADD36, SUB36, SMUL18, UMUL18, ...] empty for raw
   raw_config0 => raw_config0_gen, -- MODE and MUXes
   raw_config1 => raw_config1_gen, -- Pipeline Registers
   raw_config2 => raw_config2_gen, -- Reset Enable for internal registers
   raw_config3 => raw_config3_gen   -- ALU modes
   )
port map (
   A1         => A(0),
   A2         => A(1),
   A3         => A(2),
   A4         => A(3),
   A5         => A(4),
   A6         => A(5),
   A7         => A(6),
   A8         => A(7),
   A9         => A(8),
   A10        => A(9),
   A11        => A(10),
   A12        => A(11),
   A13        => A(12),
   A14        => A(13),
   A15        => A(14),
   A16        => A(15),
   A17        => A(16),
   A18        => A(17),
   A19        => A(18),
   A20        => A(19),
   A21        => A(20),
   A22        => A(21),
   A23        => A(22),
   A24        => A(23),
         
   B1         => B(0),
   B2         => B(1),
   B3         => B(2),
   B4         => B(3),
   B5         => B(4),
   B6         => B(5),
   B7         => B(6),
   B8         => B(7),
   B9         => B(8),
   B10        => B(9),
   B11        => B(10),
   B12        => B(11),
   B13        => B(12),
   B14        => B(13),
   B15        => B(14),
   B16        => B(15),
   B17        => B(16),
   B18        => B(17),
        
   C1         => C(0),
   C2         => C(1),
   C3         => C(2),
   C4         => C(3),
   C5         => C(4),
   C6         => C(5),
   C7         => C(6),
   C8         => C(7),
   C9         => C(8),
   C10        => C(9),
   C11        => C(10),
   C12        => C(11),
   C13        => C(12),
   C14        => C(13),
   C15        => C(14),
   C16        => C(15),
   C17        => C(16),
   C18        => C(17),
   C19        => C(18),
   C20        => C(19),
   C21        => C(20),
   C22        => C(21),
   C23        => C(22),
   C24        => C(23),
   C25        => C(24),
   C26        => C(25),
   C27        => C(26),
   C28        => C(27),
   C29        => C(28),
   C30        => C(29),
   C31        => C(30),
   C32        => C(31),
   C33        => C(32),
   C34        => C(33),
   C35        => C(34),
   C36        => C(35),

   CAI1       => CAI(0),
   CAI2       => CAI(1),
   CAI3       => CAI(2),
   CAI4       => CAI(3),
   CAI5       => CAI(4),
   CAI6       => CAI(5),
   CAI7       => CAI(6),
   CAI8       => CAI(7),
   CAI9       => CAI(8),
   CAI10      => CAI(9),
   CAI11      => CAI(10),
   CAI12      => CAI(11),
   CAI13      => CAI(12),
   CAI14      => CAI(13),
   CAI15      => CAI(14),
   CAI16      => CAI(15),
   CAI17      => CAI(16),
   CAI18      => CAI(17),
   CAI19      => CAI(18),
   CAI20      => CAI(19),
   CAI21      => CAI(20),
   CAI22      => CAI(21),
   CAI23      => CAI(22),
   CAI24      => CAI(23),

   CAO1       => CAO(0),
   CAO2       => CAO(1),
   CAO3       => CAO(2),
   CAO4       => CAO(3),
   CAO5       => CAO(4),
   CAO6       => CAO(5),
   CAO7       => CAO(6),
   CAO8       => CAO(7),
   CAO9       => CAO(8),
   CAO10      => CAO(9),
   CAO11      => CAO(10),
   CAO12      => CAO(11),
   CAO13      => CAO(12),
   CAO14      => CAO(13),
   CAO15      => CAO(14),
   CAO16      => CAO(15),
   CAO17      => CAO(16),
   CAO18      => CAO(17),
   CAO19      => CAO(18),
   CAO20      => CAO(19),
   CAO21      => CAO(20),
   CAO22      => CAO(21),
   CAO23      => CAO(22),
   CAO24      => CAO(23),

   CBI1       => CBI(0),
   CBI2       => CBI(1),
   CBI3       => CBI(2),
   CBI4       => CBI(3),
   CBI5       => CBI(4),
   CBI6       => CBI(5),
   CBI7       => CBI(6),
   CBI8       => CBI(7),
   CBI9       => CBI(8),
   CBI10      => CBI(9),
   CBI11      => CBI(10),
   CBI12      => CBI(11),
   CBI13      => CBI(12),
   CBI14      => CBI(13),
   CBI15      => CBI(14),
   CBI16      => CBI(15),
   CBI17      => CBI(16),
   CBI18      => CBI(17),

   CBO1       => CBO(0),
   CBO2       => CBO(1),
   CBO3       => CBO(2),
   CBO4       => CBO(3),
   CBO5       => CBO(4),
   CBO6       => CBO(5),
   CBO7       => CBO(6),
   CBO8       => CBO(7),
   CBO9       => CBO(8),
   CBO10      => CBO(9),
   CBO11      => CBO(10),
   CBO12      => CBO(11),
   CBO13      => CBO(12),
   CBO14      => CBO(13),
   CBO15      => CBO(14),
   CBO16      => CBO(15),
   CBO17      => CBO(16),
   CBO18      => CBO(17),

   CCI        => CCI,
   CCO        => CCO,
   CI         => CI,
   CK         => CK,
   CO         => CO,
   CO37       => CO36,
   CO57       => CO56,

   CZI1       => CZI(0),
   CZI2       => CZI(1),
   CZI3       => CZI(2),
   CZI4       => CZI(3),
   CZI5       => CZI(4),
   CZI6       => CZI(5),
   CZI7       => CZI(6),
   CZI8       => CZI(7),
   CZI9       => CZI(8),
   CZI10      => CZI(9),
   CZI11      => CZI(10),
   CZI12      => CZI(11),
   CZI13      => CZI(12),
   CZI14      => CZI(13),
   CZI15      => CZI(14),
   CZI16      => CZI(15),
   CZI17      => CZI(16),
   CZI18      => CZI(17),
   CZI19      => CZI(18),
   CZI20      => CZI(19),
   CZI21      => CZI(20),
   CZI22      => CZI(21),
   CZI23      => CZI(22),
   CZI24      => CZI(23),
   CZI25      => CZI(24),
   CZI26      => CZI(25),
   CZI27      => CZI(26),
   CZI28      => CZI(27),
   CZI29      => CZI(28),
   CZI30      => CZI(29),
   CZI31      => CZI(30),
   CZI32      => CZI(31),
   CZI33      => CZI(32),
   CZI34      => CZI(33),
   CZI35      => CZI(34),
   CZI36      => CZI(35),
   CZI37      => CZI(36),
   CZI38      => CZI(37),
   CZI39      => CZI(38),
   CZI40      => CZI(39),
   CZI41      => CZI(40),
   CZI42      => CZI(41),
   CZI43      => CZI(42),
   CZI44      => CZI(43),
   CZI45      => CZI(44),
   CZI46      => CZI(45),
   CZI47      => CZI(46),
   CZI48      => CZI(47),
   CZI49      => CZI(48),
   CZI50      => CZI(49),
   CZI51      => CZI(50),
   CZI52      => CZI(51),
   CZI53      => CZI(52),
   CZI54      => CZI(53),
   CZI55      => CZI(54),
   CZI56      => CZI(55),

   CZO1       => CZO(0),
   CZO2       => CZO(1),
   CZO3       => CZO(2),
   CZO4       => CZO(3),
   CZO5       => CZO(4),
   CZO6       => CZO(5),
   CZO7       => CZO(6),
   CZO8       => CZO(7),
   CZO9       => CZO(8),
   CZO10      => CZO(9),
   CZO11      => CZO(10),
   CZO12      => CZO(11),
   CZO13      => CZO(12),
   CZO14      => CZO(13),
   CZO15      => CZO(14),
   CZO16      => CZO(15),
   CZO17      => CZO(16),
   CZO18      => CZO(17),
   CZO19      => CZO(18),
   CZO20      => CZO(19),
   CZO21      => CZO(20),
   CZO22      => CZO(21),
   CZO23      => CZO(22),
   CZO24      => CZO(23),
   CZO25      => CZO(24),
   CZO26      => CZO(25),
   CZO27      => CZO(26),
   CZO28      => CZO(27),
   CZO29      => CZO(28),
   CZO30      => CZO(29),
   CZO31      => CZO(30),
   CZO32      => CZO(31),
   CZO33      => CZO(32),
   CZO34      => CZO(33),
   CZO35      => CZO(34),
   CZO36      => CZO(35),
   CZO37      => CZO(36),
   CZO38      => CZO(37),
   CZO39      => CZO(38),
   CZO40      => CZO(39),
   CZO41      => CZO(40),
   CZO42      => CZO(41),
   CZO43      => CZO(42),
   CZO44      => CZO(43),
   CZO45      => CZO(44),
   CZO46      => CZO(45),
   CZO47      => CZO(46),
   CZO48      => CZO(47),
   CZO49      => CZO(48),
   CZO50      => CZO(49),
   CZO51      => CZO(50),
   CZO52      => CZO(51),
   CZO53      => CZO(52),
   CZO54      => CZO(53),
   CZO55      => CZO(54),
   CZO56      => CZO(55),

   D1         => D(0),
   D2         => D(1),
   D3         => D(2),
   D4         => D(3),
   D5         => D(4),
   D6         => D(5),
   D7         => D(6),
   D8         => D(7),
   D9         => D(8),
   D10        => D(9),
   D11        => D(10),
   D12        => D(11),
   D13        => D(12),
   D14        => D(13),
   D15        => D(14),
   D16        => D(15),
   D17        => D(16),
   D18        => D(17),

   OVF        => OVF,
   R          => R,
   RZ         => RZ,
   WE         => WE,

   Z1         => Z(0),
   Z2         => Z(1),
   Z3         => Z(2),
   Z4         => Z(3),
   Z5         => Z(4),
   Z6         => Z(5),
   Z7         => Z(6),
   Z8         => Z(7),
   Z9         => Z(8),
   Z10        => Z(9),
   Z11        => Z(10),
   Z12        => Z(11),
   Z13        => Z(12),
   Z14        => Z(13),
   Z15        => Z(14),
   Z16        => Z(15),
   Z17        => Z(16),
   Z18        => Z(17),
   Z19        => Z(18),
   Z20        => Z(19),
   Z21        => Z(20),
   Z22        => Z(21),
   Z23        => Z(22),
   Z24        => Z(23),
   Z25        => Z(24),
   Z26        => Z(25),
   Z27        => Z(26),
   Z28        => Z(27),
   Z29        => Z(28),
   Z30        => Z(29),
   Z31        => Z(30),
   Z32        => Z(31),
   Z33        => Z(32),
   Z34        => Z(33),
   Z35        => Z(34),
   Z36        => Z(35),
   Z37        => Z(36),
   Z38        => Z(37),
   Z39        => Z(38),
   Z40        => Z(39),
   Z41        => Z(40),
   Z42        => Z(41),
   Z43        => Z(42),
   Z44        => Z(43),
   Z45        => Z(44),
   Z46        => Z(45),
   Z47        => Z(46),
   Z48        => Z(47),
   Z49        => Z(48),
   Z50        => Z(49),
   Z51        => Z(50),
   Z52        => Z(51),
   Z53        => Z(52),
   Z54        => Z(53),
   Z55        => Z(54),
   Z56        => Z(55)
   );

end NX_RTL;
-- #}}}#

----------------------------------------------------------------------------------------------------

`protect begin_protected
`protect version = 1
`protect encrypt_agent = "NanoXplore"
`protect key_keyowner = "Mentor Graphics Corporation", key_keyname = "MGC-VERIF-SIM-RSA-2", key_method = "rsa"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 256)
`protect key_block
LQ4tyIPlu+KmNUq7xxbHkEBEJwbIQSnT8c+rBTS13PV7rNXKcFmaiU4iYxgOyuzo
MaHXR9GVzvHu9YKebRmxYBpxEVYzQgB8WK/Xo4ZHNLwiyOrm76JmxLAFurYcGUk/
EqToZexHSemZlDH4xyKIJNRG8GsujrkucKasc8KP+BZRiCiCtBqokR7buz2G3/P5
7d/XdaVNq8baLy+lyxIdDpdPSCiVeIWYZSsRkFHUyt8aSXAc4/IWDtp0sUxk2WXI
y6PaZzSW1X1rQoiqeXchkjd2CM/YTta47yCtm0GKw6+XX0ybBFb19nxbBBs9QrSY
PqDkj7Ua0VTuNVRlnZiq5g==
`protect data_method = "aes256-cbc"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 41152)
`protect data_block
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
gvobvDEmp0+cHUTwVBsXeg==
`protect end_protected

-- beware following components are only intended for internal use. Do not try to instantiate them.

-- =================================================================================================
--   NX_BUFFER definition                                                               2017/09/11
-- =================================================================================================

-- NX_BUFFER#{{{#
----------------------------------------------------------------------------------------------------
library ieee;
use ieee.std_logic_1164.all;

entity NX_BUFFER is
port (
    I : in  std_logic;
    O : out std_logic
);
end NX_BUFFER;

`protect begin_protected
`protect version = 1
`protect encrypt_agent = "NanoXplore"
`protect key_keyowner = "Mentor Graphics Corporation", key_keyname = "MGC-VERIF-SIM-RSA-2", key_method = "rsa"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 256)
`protect key_block
Y78g2midfu60DgAbDa7SMdj2bh/wGXLt9zyotEaCeLDdfQUk8VxvF81TWMKf134D
lZT6qNTKQBs3efCjIg5bCSeW1C8t70QNRDhh9Js628e/eZd/W8r+MDAPa1rluYwQ
CEIIVKj2WiG/+AWBTKURrqZYZBz7vIT6e3cs9J6EVBtmuOQwhwff2NV4O6ibFlX6
ytG4i4n4Gvzdi0EeWEJMPIlah2118DP5a6Izi7kCYDpcDaCdWNXXUPb7BFqWUc61
VX5YFEZi38LPpqPLz1XLhzstLREvfiLKnjT+FDLcNuRwsvZQT6n9Iy22LwEI5ksN
oYmX2coDLJrCOjpgLZbcXA==
`protect data_method = "aes256-cbc"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 240)
`protect data_block
l2EUqTnRz204TZJN0TJxwrtGZeFoMSTvtnYawrhrpKUhPnHvoGWidggj6F41F9Of
tMRVRGRF45UHpF6QLMEavPnEmhvREjSe6KSvJUPtdhkkk2XbbGzH7mMoOhAnmDs8
36Z4xm/MxwT2MripfY8rcqv0WS0Ew7KBkk5LUzY0yl9X0RZdbxYRHg8cAtkIYRcg
xyhhFJ3AabHC6zKQtw6tXKV2jlyMa5h41uY53OtBkekLyGuFRT7UJRqUamwPhhga
BjJjVTF0qHgOPm4VdDcLn3THX+smKFCwvwFvZpYVPdlqVMpO93zRVaiBkefadcr8
`protect end_protected

-- #}}}#

-- =================================================================================================
--   NX_CSC definition                                                                  2017/09/26
-- =================================================================================================

-- NX_CSC#{{{#
----------------------------------------------------------------------------------------------------
library ieee;
use ieee.std_logic_1164.all;

entity NX_CSC is
port (
    I  : in  std_logic;
    O  : out std_logic
);
end NX_CSC;

`protect begin_protected
`protect version = 1
`protect encrypt_agent = "NanoXplore"
`protect key_keyowner = "Mentor Graphics Corporation", key_keyname = "MGC-VERIF-SIM-RSA-2", key_method = "rsa"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 256)
`protect key_block
PNaNZup8corgdgGViyIqmW1yEepBzFB/rli9fy2Wu5FAafWfa45u9tLRTy+/x/KY
7CW1b+inrwcu5sQKcW8t2KcZ0YuXk8+z9rRwxginM7d63ns+RMJQOdBoCmryZUhq
kNgWklxiQ0QtgZyDZ/JxNC8r4Ck97zc4OgaAhl5ydbPLRbhZdfe3vRST4yh7g28g
iD7AvouqR+3Ig6cD5WtxyMvNNO/r/3FA9kFf+7uqL0ASLzUP3dvtDQo1tTJ0yZAa
qo1Oj+h7QSlYM1hnWJwAILmtzKAmbvqnWlxbDECrhx4neItQOrGDCLl3WCWKL19t
e1oZNJhe/wsBJ5SVc3AyMw==
`protect data_method = "aes256-cbc"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 240)
`protect data_block
FidJO1K17GT3h7FJ0Oo7LGFq7atcagXtN25+kz3yB1fV6wbXMhJS7LRN5LXUW1QE
7GwXDIHWC9XouyGL/OO/HPqzoGeixflBW77ib2J4uIQcI7uNGWAEEDaNE5fb4aYg
IJSZtbv/FKMWW1st1nRYjjTg/cgO4FYp0mXvBhDuh5c4vz/m/xmaf8+VvV/PVdgc
MBow8Q3YJp7qwD0OuzhHE+9oCUMS13reB/x8Ie6RMjZOH/s7yB8B6TzsZoHSzINx
GK9qQiMAt/9HEumsptoTaRtuAd2khlJ+u9XDdWd+pFYwQhhL9Yc+e58k4Jis5OTX
`protect end_protected

-- #}}}#

-- =================================================================================================
--   NX_SCC definition                                                                  2017/09/26
-- =================================================================================================

-- NX_SCC#{{{#
----------------------------------------------------------------------------------------------------
library ieee;
use ieee.std_logic_1164.all;

entity NX_SCC is
port (
    I : in  std_logic;
    O : out std_logic
);
end NX_SCC;

`protect begin_protected
`protect version = 1
`protect encrypt_agent = "NanoXplore"
`protect key_keyowner = "Mentor Graphics Corporation", key_keyname = "MGC-VERIF-SIM-RSA-2", key_method = "rsa"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 256)
`protect key_block
oKUa0oNiIXZuDuwkGk6O0AsvlFIjpG2ZK1Otq/A7sZga+J7aRCPxST9YK+NvNGyX
hpT0Owu4BTniX+B80eI9bH/NBX7/yRIzvncKhVU4rvSFF2cpXk40LlFk1dATPry6
v24WknAaE2S2ciYOE5rGeCX1O4YffrvjBksa1SLKtcmY/2is3zwH46IeChcmD5rh
o8KSql1g9fh13HxF/hkDEG1K0xgHhIH9ixUfvVT0r/gANBdTNNGXnCXozX6KedWE
JbP0Zidx4KDGd81crLW7mMuypwuSDvggQN4mXREPA5UigHRHv6D7FYpwsrj0d5TJ
QvBaIC+RtuuNhEHJFjCxUw==
`protect data_method = "aes256-cbc"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 240)
`protect data_block
gfq014y/AJTlutQoO2FUnC/nXVKALMD1z3NZxX4thVPKe5Yzb2ztReoqfgua8skw
nTs/p1OOQWlfYoUlBwUbSZSFZOd83ZkzNXzxAvPwmWOUEoWbsIizmYBVFbMPc2Y7
UBSdyhZlScofmV+d0IpVqiN8BEJwmV2GwXWrbjdFSScCu5UZ5/k+cyfUDhtr6oaJ
jc5Fx72HEb/h0cbi/Q5PCGAeZK6d2hLbVBSwU/WnCMDE4X8cnA/faHWwspxev3rM
rJAZCjxfh0o1/ZUAffcD0CRmATLQKnecJXjtglbRK83o8MaVDRQR1lO4MZXuGNVZ
`protect end_protected

-- #}}}#

-- =================================================================================================
--   NX_syn_tp definition                                                               2017/09/11
-- =================================================================================================

-- NX_syn_tp#{{{#
----------------------------------------------------------------------------------------------------
library ieee;
use ieee.std_logic_1164.all;

entity NX_syn_tp is
port (
    I : in  std_logic
);
end NX_syn_tp;

architecture NX_RTL of NX_syn_tp is
    attribute NX_TYPE :string;
    attribute NX_TYPE of NX_RTL: architecture is "PHY";

    attribute NX_USE :string;
    attribute NX_USE of NX_RTL: architecture is "NX_syn_tp";
begin
end NX_RTL;

`protect begin_protected
`protect version = 1
`protect encrypt_agent = "NanoXplore"
`protect key_keyowner = "Mentor Graphics Corporation", key_keyname = "MGC-VERIF-SIM-RSA-2", key_method = "rsa"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 256)
`protect key_block
ZNwYARoSySX1hpehGCcZsWwyf3GXkwiQ2+ZYrT5NEr4q3VfmRQbZG5sBVXHA/SkK
nyFUCFIouOb3RsvnvHUDvnj3JyCmlC/RpUknWo8lc+q6UPkckVekJ/4wwcdG+MUu
dBDI+1m3EcyKaf5NVEHgDboPzGboIkYDJ1C+cVZkTnT/ArWJaGASbcZ7+NyXOW3A
pxzXytM0pqEFOK4Cj7t0rArttMCRjrW3IIVhD3t1+JoVnOp3CEWUtxorAaXAsF9A
RlmPyMzqnEdTnH+7gAleytmCmi+mlYUgEMovnoph7IyYiSFyk/P69uLtjgcTjd9F
wVU1E2hbjkkRzeiWqz4RMw==
`protect data_method = "aes256-cbc"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 208)
`protect data_block
p2YfBEwpPIfUjIuQ4NxWs0ddvooLXGpptkhzFy6LuLMhgHXYWZLgHriym+gz5WXX
vfaF4gg/V/m+exnamyGPH0WGvG1qjr6SoMkHK83VQM78uj84bU7rer0WpWqJRbu/
zaEej+G7/3oYKhj/DNvWia5GV9CrxKVdgOr5TiitBlK5mUbu94uZLNZx8LmMDnVV
KGJnJRBDhG0Y7rrBzModVMi5dYZ8nOMtOi6AGmfRgSimQ8/3dSbiGt03sYtbuiPz
tAyL8sh+iARBGAepGHQoVA==
`protect end_protected

-- #}}}#

-- =================================================================================================
--   NX_BD definition                                                                   2018/06/19
-- =================================================================================================

library ieee;
use ieee.std_logic_1164.all;

entity NX_BD is
generic (
    system: bit := '1'
);
port (
    I : in  std_logic;
    O : out std_logic
);
end NX_BD;

architecture NX_RTL of NX_BD is
    attribute NX_TYPE :string;
    attribute NX_TYPE of NX_RTL: architecture is "PHY";

    attribute NX_USE :string;
    attribute NX_USE of NX_RTL: architecture is "NX_BD";
begin
end NX_RTL;

----------------------------------------------------------------------------------------------------

`protect begin_protected
`protect version = 1
`protect encrypt_agent = "NanoXplore"
`protect key_keyowner = "Mentor Graphics Corporation", key_keyname = "MGC-VERIF-SIM-RSA-2", key_method = "rsa"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 256)
`protect key_block
XfbfJmKI3hCurFa3JLPL5eUQATDPEevh5hhNo6FAOKawg1QSA61qLm/5zZbBVnIC
1ETKoxd14y3THd22F2PQcAEM0oA+Nu9S6sImat3DlWLh1kFa/4g/RUSfAn4Qu0rz
+qi656eAAMPuNh6Av54whh/9o8Iro7ZqYTNRvS809sD7CVIiAF+8UqSlOXAT3wXl
vf15lJUj+XgGQLnqBYnxFOKqSzWbSODBcNSyeBV3SeSBJQn0jmJzEnB1zxjkgLF2
NncjiRPj2kokPyEPVVYJentAacyf4vVdNQ/WY1XOQy3U0GdbLRYYV2Zs23HssG8R
5XczyvgEWNGaeTyaBaeemQ==
`protect data_method = "aes256-cbc"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 240)
`protect data_block
qlh+jf/uBUoc2afKIpd3+TGA10WZTpG3p27C0gCdk6O1STn83yrs3B9udOJTpHgv
X7UHwlL5ld0PYSIjx+jU5YmElPBKu6wsyQfIMlJXFC2Rze1KyHQ7tkjdjKzftvkM
1L1+KEM3ToKHMgn6fMkhpNAbi9pIrnNanXhiN3BHHg1V9WtGWcZ/yNVnww35O8vm
C9oRkzfJD9grB04nE0M1fRjs8sA7tdyCRRGcKGX7ID7iZpilumbf5hllMtvoerFZ
tBI65/mpTK+d77oBdTMVO6RTjnqBGTVfuO89uUzdQuyeqIc8ckn7AbHpekfnst65
`protect end_protected

-- =================================================================================================
--   NX_SER definition                                                                  2018/10/15
-- =================================================================================================

library ieee;
use ieee.std_logic_1164.all;

library NX;
use NX.nxPackage.all;

entity NX_SER is
generic (
    data_size            : integer range 2 to 10 := 5;	-- Number of serialization factor
    location             : string := "";		-- Pad location
    standard             : string := "";		-- Pad electrical standard
    drive                : string := "";		-- Pad electrical drive
    differential         : string := "";		-- Single ended ("0") or differential ("1")
    slewRate             : string := "";		-- Slow, Medium or Fast
    outputDelayLine      : string := "";		-- "0_to_63_delay_value"
    outputCapacity       : string := "";		-- 0 to 40 (value in pF)
    -- Delay Control
    spath_dynamic        : bit := '0'			-- 0: off/fixed delay, 1: dynamic delay

);
port (
    FCK   : in  std_logic;
    SCK   : in  std_logic;
    R     : in  std_logic;
    I     : in  std_logic_vector(data_size - 1 downto 0);
    IO    : out std_logic;
    -- Delay Control
    DCK   : in std_logic;
    DRL   : in std_logic;
    DS    : in std_logic_vector(1 downto 0);
    DRA   : in std_logic_vector(5 downto 0);
    DRI   : in std_logic_vector(5 downto 0);
    DRO   : out std_logic_vector(5 downto 0);
    DID   : out std_logic_vector(5 downto 0)
);
end NX_SER;

-- =================================================================================================
--   NX_DES definition                                                                  2018/10/15
-- =================================================================================================

library ieee;
use ieee.std_logic_1164.all;

library NX;
use NX.nxPackage.all;

entity NX_DES is
generic (
    data_size            : integer range 2 to 10 := 5;	-- -- Pad locationNumber of deserialization factor
    location             : string := "";		-- Pad location
    standard             : string := "";		-- Pad electrical standard
    drive                : string := "";		-- Pad electrical drive
    differential         : string := "";		-- Single ended ("0") or differential ("1")
    termination          : string := "";		-- Input impedance adaptatio    terminationReference : string := "";
    terminationReference : string := "";		-- "floating" or "VTT"
    turbo                : string := "";		-- Input impedance adaptation
    weakTermination      : string := "";		-- "floating" or "VTT"
    inputDelayLine       : string := "";		-- "0_to_63_delay_value"
    inputSignalSlope     : string := "";		-- Decimal value "0.5" to "20" (value in V/ns)
    -- Delay Control
    dpath_dynamic        : bit := '0'			-- 0: off/fixed delay, 1: dynamic delay

);
port (
    FCK   : in  std_logic;
    SCK   : in  std_logic;
    R     : in  std_logic;
    IO    : in  std_logic;
    O     : out std_logic_vector(data_size - 1 downto 0);
    -- Delay Control
    DCK   : in std_logic;
    DRL   : in std_logic;
    DIG   : in std_logic;
    DS    : in std_logic_vector(1 downto 0);
    DRA   : in std_logic_vector(5 downto 0);
    DRI   : in std_logic_vector(5 downto 0);
    FZ    : in std_logic;
    DRO   : out std_logic_vector(5 downto 0);
    DID   : out std_logic_vector(5 downto 0);
    FLD   : out std_logic;
    FLG   : out std_logic
);
end NX_DES;

-- =================================================================================================
--   NX_SERDES definition                                                               2018/10/16
-- =================================================================================================

library ieee;
use ieee.std_logic_1164.all;

library NX;
use NX.nxPackage.all;

entity NX_SERDES is
generic (
    data_size            : integer range 2 to 10 := 5;	-- Serialiser/deserializer factor 
    location             : string := "";		-- Pad location
    standard             : string := "";		-- Pad electrical standard
    drive                : string := "";		-- Pad electrical drive
    differential         : string := "";		-- Single ended ("0" or differential ("1")
    slewRate             : string := "";		-- Slow, Medium or Fast
    termination          : string := "";		-- Input impedance adaptation
    terminationReference : string := "";		-- "floating" or "VTT"
    turbo                : string := "";		-- "true" or "false"
    weakTermination      : string := "";		-- "PullUp" or "None"
    inputDelayLine       : string := "";		-- "O_to_63_delay_value"
    outputDelayLine      : string := "";		-- "O_to_63_delay_value"
    inputSignalSlope     : string := "";		-- Decimal value "0.5" to "20" (value in V/ns)
    outputCapacity       : string := "";		-- "0" to "40" (value in pF)
    cpath_registered     : bit := '0';			-- Use Register in Enable Path ('1')
    -- Delay Control
    spath_dynamic        : bit := '0';			-- 0: off/fixed delay, 1: dynamic delay
    dpath_dynamic        : bit := '0'			-- 0: off/fixed delay, 1: dynamic delay
);
port (
    FCK   : in    std_logic;
    SCK   : in    std_logic;
    RTX   : in    std_logic;
    RRX   : in    std_logic;
    CI    : in    std_logic;
    CCK   : in    std_logic;
    CL    : in    std_logic;
    CR    : in    std_logic;
    I     : in    std_logic_vector(data_size - 1 downto 0);
    IO    : inout std_logic;
    O     : out   std_logic_vector(data_size - 1 downto 0);
    -- Delay Control
    DCK   : in std_logic;
    DRL   : in std_logic;
    DIG   : in std_logic;
    DS    : in std_logic_vector(1 downto 0);
    DRA   : in std_logic_vector(5 downto 0);
    DRI   : in std_logic_vector(5 downto 0);
    FZ    : in std_logic;
    DRO   : out std_logic_vector(5 downto 0);
    DID   : out std_logic_vector(5 downto 0);
    FLD   : out std_logic;
    FLG   : out std_logic
);
end NX_SERDES;

-- NX_SER#{{{#
----------------------------------------------------------------------------------------------------
architecture NX_RTL of NX_SER is

signal I_pad : std_logic;
signal O_pad : std_logic;
signal C_pad : std_logic;
signal sync  : std_logic;
signal I_int : std_logic_vector(9 downto 0);
signal LINKN : std_logic_vector(IOM_LINK_SIZE - 1 downto 0);
signal LINKP : std_logic_vector(IOM_LINK_SIZE - 1 downto 0);

attribute syn_noprune : boolean;

begin

I_net: for j in 0 to (data_size - 1) generate
    I_int(j) <= I(j);
end generate;

I_dummy: for j in data_size to 9 generate
    I_int(j) <= '0';
end generate;

single_ser: if (data_size <= 5) generate
attribute syn_noprune of iodx : label is true;
begin

    iobx: NX_IOB_O generic map (
	  location             => location
	, standard             => standard
	, drive                => drive
	, differential         => differential
	, slewRate             => slewRate
	, outputDelayLine      => outputDelayLine
	, outputCapacity       => outputCapacity
	, locked               => '1'
    )
		   port map (I => I_pad, C => C_pad, IO => IO);

    iodx: NX_IOM_DRIVER generic map (
		   epath_mode      => b"0100"
		 , cpath_mode      => b"0001"
		 , location        => location
		 , symbol          => "SER"
		 )
		 port map (
			   EI1  => I_int(0)
			 , EI2  => I_int(1)
			 , EI3  => I_int(2)
			 , EI4  => I_int(3)
			 , EI5  => I_int(4)
			 , RI   => OPEN
			 , EO   => I_pad
			 , CO   => C_pad
			 , LINK => LINKP
		);
end generate;

large_ser: if (5 < data_size) generate
attribute syn_noprune of iodp : label is true;
attribute syn_noprune of iodn : label is true;
begin


    iobp: NX_IOB_O generic map (
	  location             => location
	, standard             => standard
	, drive                => drive
	, differential         => differential
	, slewRate             => slewRate
	, outputDelayLine      => outputDelayLine
	, outputCapacity       => outputCapacity
	, locked               => '1'
    )
		   port map (I => I_pad, C => C_pad, IO => IO);

    iodp: NX_IOM_DRIVER generic map (
		   epath_init      => '1'
		 , epath_mode      => b"0100"
		 , cpath_mode      => b"0001"
		 , location        => location
		 , symbol          => "SER"
		 )
		 port map (
			    EI1  => I_int(0)
			  , EI2  => I_int(1)
			  , EI3  => I_int(2)
			  , EI4  => I_int(3)
			  , EI5  => I_int(4)
			  , RI   => OPEN
			  , EO   => I_pad
			  , CO   => C_pad
			  , LINK => LINKP
		);

    iodn: NX_IOM_DRIVER generic map (
		   epath_init      => '1'
		 , epath_mode      => b"0100"
		 , cpath_mode      => b"0001"
		 , chained         => '1'
		 , symbol          => "SER_C"
		 )
		 port map (
			    EI1  => I_int(5)
			  , EI2  => I_int(6)
			  , EI3  => I_int(7)
			  , EI4  => I_int(8)
			  , EI5  => I_int(9)
			  , RI   => OPEN
			  , EO   => OPEN
			  , CO   => OPEN
			  , LINK => LINKN
		);
end generate;

ioc: NX_IOM_SERDES generic map (data_size => data_size, location => location)
		   port map (
			      RTCK  => FCK	    -- ECK
			    , WTCK  => SCK
			    , TRST  => R	    -- ER
			    , LINKN => LINKN
			    , LINKP => LINKP
			    , DCK   => DCK
			    , DRL   => DRL
			    , DS    => DS
			    , DRA   => DRA
			    , DRI   => DRI
			    , DRO   => DRO
			    , DID   => DID
		   );

end NX_RTL;
-- #}}}#

-- NX_DES#{{{#
----------------------------------------------------------------------------------------------------
architecture NX_RTL of NX_DES is

signal I_pad : std_logic;
signal O_pad : std_logic;
signal C_pad : std_logic;
signal sync  : std_logic;
signal O_int : std_logic_vector(9 downto 0);
signal LINKN : std_logic_vector(IOM_LINK_SIZE - 1 downto 0);
signal LINKP : std_logic_vector(IOM_LINK_SIZE - 1 downto 0);

type     switch_dynamic is array (boolean) of bit;
constant switch_dpath : switch_dynamic := (true => '1', false => '0');
-- TODO constant dpath_dynamic : bit := switch_dpath(inputDelayLine = "");

begin

O_net: for j in 0 to (data_size - 1) generate
    O(j) <= O_int(j);
end generate;

single_des: if (data_size <= 5) generate
    iobx: NX_IOB_I generic map (
	  location             => location
	, standard             => standard
	, drive                => drive
	, differential         => differential
	, termination          => termination
	, terminationReference => terminationReference
	, turbo                => turbo
	, weakTermination      => weakTermination
	, inputDelayLine       => inputDelayLine
	, inputSignalSlope     => inputSignalSlope
	, locked               => '1'
    )
		   port map (I => I_pad, O => O_pad, C => C_pad, IO => IO);

    iodx: NX_IOM_DRIVER generic map (
		   rpath_init      => '1'
		 , rpath_mode      => b"0100"
		 , rpath_dynamic   => dpath_dynamic
		 , cpath_mode      => b"0000"
		 , location        => location
		 , symbol          => "DES_D"
		 )
		 port map (
			    RO1  => O_int(4)
			  , RO2  => O_int(3)
			  , RO3  => O_int(2)
			  , RO4  => O_int(1)
			  , RO5  => O_int(0)
			  , RI   => O_pad
			  , EO   => I_pad
			  , CO   => C_pad
			  , LINK => LINKP
		);
end generate;

large_des: if (5 < data_size) generate
    iobp: NX_IOB_I generic map (
	  location             => location
	, standard             => standard
	, drive                => drive
	, differential         => differential
	, termination          => termination
	, terminationReference => terminationReference
	, turbo                => turbo
	, weakTermination      => weakTermination
	, inputDelayLine       => inputDelayLine
	, inputSignalSlope     => inputSignalSlope
	, locked               => '1'
    )
		   port map (I => I_pad, O => O_pad, C => C_pad, IO => IO);

    iodp: NX_IOM_DRIVER generic map (
		   rpath_init      => '1'
		 , rpath_mode      => b"0100"
		 , rpath_dynamic   => dpath_dynamic
		 , cpath_mode      => b"0000"
		 , location        => location
		 , symbol          => "DES_D"
		 )
		 port map (
			    RO1  => O_int(9)
			  , RO2  => O_int(8)
			  , RO3  => O_int(7)
			  , RO4  => O_int(6)
			  , RO5  => O_int(5)
			  , RI   => O_pad
			  , EO   => I_pad
			  , CO   => C_pad
			  , LINK => LINKP
		);

    iodn: NX_IOM_DRIVER generic map (
		  rpath_init       => '1'
		, rpath_mode       => b"0100"
		, cpath_mode       => b"0000"
		, chained          => '1'
		, symbol           => "DES_DC"
		)
		port map (
			   RO1  => O_int(4)
			 , RO2  => O_int(3)
			 , RO3  => O_int(2)
			 , RO4  => O_int(1)
			 , RO5  => O_int(0)
			 , RI   => OPEN
			 , EO   => OPEN
			 , CO   => OPEN
			 , LINK => LINKN
		);
end generate;

ioc: NX_IOM_SERDES generic map (data_size => data_size, location => location)
		   port map (
			      RRCK  => SCK
			    , WRCK  => FCK	    -- RCK
			    , RRST  => R	    -- RR
			    , LINKN => LINKN
			    , LINKP => LINKP
			    , DCK   => DCK
			    , DRL   => DRL
			    , DIG   => DIG
			    , DS    => DS
			    , DRA   => DRA
			    , DRI   => DRI
			    , FZ    => FZ
			    , DRO   => DRO
			    , DID   => DID
			    , FLD   => FLD
			    , FLG   => FLG
		   );

end NX_RTL;
-- #}}}#

-- NX_SERDES#{{{#
----------------------------------------------------------------------------------------------------
architecture NX_RTL of NX_SERDES is

signal I_pad : std_logic;
signal O_pad : std_logic;
signal C_pad : std_logic;
signal sync  : std_logic;
signal I_int : std_logic_vector(9 downto 0);
signal O_int : std_logic_vector(9 downto 0);
signal LINKN : std_logic_vector(IOM_LINK_SIZE - 1 downto 0);
signal LINKP : std_logic_vector(IOM_LINK_SIZE - 1 downto 0);

type switch_mode is array(bit) of bit_vector(3 downto 0);
constant switch : switch_mode := ('0' => b"0010", '1' => b"0011");
constant cpath_mode : bit_vector(3 downto 0) := switch(cpath_registered);

type     switch_dynamic is array (boolean) of bit;
constant switch_dpath : switch_dynamic := (true => '1', false => '0');
-- TODO constant dpath_dynamic : bit := switch_dpath(inputDelayLine = "");

begin

I_net: for j in 0 to (data_size - 1) generate
    I_int(j) <= I(j);
end generate;

I_dummy: for j in (data_size - 1) to 9 generate
    I_int(j) <= '0';
end generate;

O_net: for j in 0 to (data_size - 1) generate
    O(j) <= O_int(j);
end generate;

single_serdes: if (data_size <= 5) generate
    iobx: NX_IOB generic map (
	  location             => location
	, standard             => standard
	, drive                => drive
	, differential         => differential
	, slewRate             => slewRate
	, termination          => termination
	, terminationReference => terminationReference
	, turbo                => turbo
	, weakTermination      => weakTermination
	, inputDelayLine       => inputDelayLine
	, outputDelayLine      => outputDelayLine
	, inputSignalSlope     => inputSignalSlope
	, outputCapacity       => outputCapacity
	, locked               => '1'
    )
		 port map (I => I_pad, O => O_pad, C => C_pad, IO => IO);

    iodx: NX_IOM_DRIVER generic map (
			       epath_init      => '1'
			     , epath_mode      => b"0100"
			     , rpath_init      => '1'
			     , rpath_mode      => b"0100"
			     , rpath_dynamic   => dpath_dynamic
			     , cpath_mode      => cpath_mode
			     , location        => location
			     , symbol          => "SD_DR"
		)
		port map (
			   EI1  => I_int(0)
			 , EI2  => I_int(1)
			 , EI3  => I_int(2)
			 , EI4  => I_int(3)
			 , EI5  => I_int(4)
			 , RO1  => O_int(4)
			 , RO2  => O_int(3)
			 , RO3  => O_int(2)
			 , RO4  => O_int(1)
			 , RO5  => O_int(0)
			 , CI1  => CI
			 , RI   => O_pad
			 , EO   => I_pad
			 , CO   => C_pad
			 , LINK => LINKP
		);
end generate;

large_serdes: if (5 < data_size) generate
    iobp: NX_IOB_I generic map (
	  location             => location
	, standard             => standard
	, drive                => drive
	, differential         => differential
	, slewRate             => slewRate
	, termination          => termination
	, terminationReference => terminationReference
	, turbo                => turbo
	, weakTermination      => weakTermination
	, inputDelayLine       => inputDelayLine
	, outputDelayLine      => outputDelayLine
	, inputSignalSlope     => inputSignalSlope
	, outputCapacity       => outputCapacity
	, locked               => '1'
    )
		   port map (I => I_pad, O => O_pad, C => C_pad, IO => IO);

    iodp: NX_IOM_DRIVER generic map (
			       epath_init      => '1'
			     , epath_mode      => b"0100"
			     , rpath_init      => '1'
			     , rpath_mode      => b"0100"
			     , rpath_dynamic   => dpath_dynamic
			     , cpath_mode      => cpath_mode
			     , location        => location
			     , symbol          => "SD_DR"
		)
		port map (
			   EI1  => I_int(5)
			 , EI2  => I_int(6)
			 , EI3  => I_int(7)
			 , EI4  => I_int(8)
			 , EI5  => I_int(9)
			 , RO1  => O_int(9)
			 , RO2  => O_int(8)
			 , RO3  => O_int(7)
			 , RO4  => O_int(6)
			 , RO5  => O_int(5)
			 , CI1  => CI
			 , RI   => O_pad
			 , EO   => I_pad
			 , CO   => C_pad
			 , LINK => LINKP
		);

    iodn: NX_IOM_DRIVER generic map (
			       epath_init      => '1'
			     , epath_mode      => b"0100"
			     , rpath_init      => '1'
			     , rpath_mode      => b"0100"
			     , cpath_mode      => cpath_mode
			     , chained         => '1'
			     , symbol          => "SD_DRC"
		)
		port map (
			   EI1  => I_int(0)
			 , EI2  => I_int(1)
			 , EI3  => I_int(2)
			 , EI4  => I_int(3)
			 , EI5  => I_int(4)
			 , RO1  => O_int(4)
			 , RO2  => O_int(3)
			 , RO3  => O_int(2)
			 , RO4  => O_int(1)
			 , RO5  => O_int(0)
			 , CI1  => CI
			 , RI   => OPEN
			 , EO   => OPEN
			 , CO   => OPEN
			 , LINK => LINKN
		);
end generate;

ioc: NX_IOM_SERDES generic map (data_size => data_size, location => location)
		   port map (
			      RTCK  => FCK	    -- ECK
			    , WTCK  => SCK
			    , RRCK  => SCK
			    , WRCK  => FCK	    -- RCK
			    , TRST  => RTX	    -- ER
			    , RRST  => RRX	    -- RR
			    , CTCK  => CCK	    -- CCK
			    , CL    => CL	    -- CL
			    , CR    => CR	    -- CR
			    , LINKN => LINKN
			    , LINKP => LINKP
			    , DCK   => DCK
			    , DRL   => DRL
			    , DIG   => DIG
			    , DS    => DS
			    , DRA   => DRA
			    , DRI   => DRI
			    , FZ    => FZ
			    , DRO   => DRO
			    , DID   => DID
			    , FLD   => FLD
			    , FLG   => FLG
		   );

end NX_RTL;
-- #}}}#



library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;

entity NX_RAM is
generic (
   std_mode     : string := ""; -- standard mode [FAST_2kx18, SLOW_2kx18, NOECNOECC24, ...] empty for raw
   mcka_edge    : bit := '0';   -- 0: rising edge for port A clock - 1: falling edge
   mckb_edge    : bit := '0';   -- 0: rising edge for port B clock - 1: falling edge
   pcka_edge    : bit := '0';   -- 0: rising edge for pipe A clock - 1: falling edge
   pckb_edge    : bit := '0';   -- 0: rising edge for pipe B clock - 1: falling edge
   pipe_ia      : bit := '0';   -- 0: no pipe on port A input  - 1: pipe on port A input
   pipe_ib      : bit := '0';   -- 0: no pipe on port B input  - 1: pipe on port B input
   pipe_oa      : bit := '0';   -- 0: no pipe on port A output - 1: pipe on port A output
   pipe_ob      : bit := '0';   -- 0: no pipe on port B output - 1: pipe on port B output

   raw_config0  : bit_vector( 3 downto 0) := B"0000";			-- PRC
   raw_config1  : bit_vector(15 downto 0) := B"0000000000000000";	-- MOD

   -- For specific NG_LARGE Extended Features
   raw_l_enable : bit := '0';                         -- '0' for NG-MEDIUM, '1' for NG-LARGE extended modes (NO_ECC x3 & x6) + scrubbing, test...
   raw_l_extend : bit_vector( 3 downto 0) := B"0000"; -- Extended modes for NG-LARGE (Scrubbing, test... )

   mem_ctxt     : string := ""                        -- context initialization
   );
port (
   ACK   : in  std_logic;
   ACKC  : in  std_logic;
   ACKD  : in  std_logic;
   ACKR  : in  std_logic;
   BCK   : in  std_logic;
   BCKC  : in  std_logic;
   BCKD  : in  std_logic;
   BCKR  : in  std_logic;

   AI1   : in  std_logic;
   AI2   : in  std_logic;
   AI3   : in  std_logic;
   AI4   : in  std_logic;
   AI5   : in  std_logic;
   AI6   : in  std_logic;
   AI7   : in  std_logic;
   AI8   : in  std_logic;
   AI9   : in  std_logic;
   AI10  : in  std_logic;
   AI11  : in  std_logic;
   AI12  : in  std_logic;
   AI13  : in  std_logic;
   AI14  : in  std_logic;
   AI15  : in  std_logic;
   AI16  : in  std_logic;

   AI17  : in  std_logic;
   AI18  : in  std_logic;
   AI19  : in  std_logic;
   AI20  : in  std_logic;
   AI21  : in  std_logic;
   AI22  : in  std_logic;
   AI23  : in  std_logic;
   AI24  : in  std_logic;

   BI1   : in  std_logic;
   BI2   : in  std_logic;
   BI3   : in  std_logic;
   BI4   : in  std_logic;
   BI5   : in  std_logic;
   BI6   : in  std_logic;
   BI7   : in  std_logic;
   BI8   : in  std_logic;
   BI9   : in  std_logic;
   BI10  : in  std_logic;
   BI11  : in  std_logic;
   BI12  : in  std_logic;
   BI13  : in  std_logic;
   BI14  : in  std_logic;
   BI15  : in  std_logic;
   BI16  : in  std_logic;

   BI17  : in  std_logic;
   BI18  : in  std_logic;
   BI19  : in  std_logic;
   BI20  : in  std_logic;
   BI21  : in  std_logic;
   BI22  : in  std_logic;
   BI23  : in  std_logic;
   BI24  : in  std_logic;

   ACOR  : out std_logic;
   AERR  : out std_logic;
   BCOR  : out std_logic;
   BERR  : out std_logic;

   AO1   : out std_logic;
   AO2   : out std_logic;
   AO3   : out std_logic;
   AO4   : out std_logic;
   AO5   : out std_logic;
   AO6   : out std_logic;
   AO7   : out std_logic;
   AO8   : out std_logic;
   AO9   : out std_logic;
   AO10  : out std_logic;
   AO11  : out std_logic;
   AO12  : out std_logic;
   AO13  : out std_logic;
   AO14  : out std_logic;
   AO15  : out std_logic;
   AO16  : out std_logic;

   AO17  : out std_logic;
   AO18  : out std_logic;
   AO19  : out std_logic;
   AO20  : out std_logic;
   AO21  : out std_logic;
   AO22  : out std_logic;
   AO23  : out std_logic;
   AO24  : out std_logic;

   BO1   : out std_logic;
   BO2   : out std_logic;
   BO3   : out std_logic;
   BO4   : out std_logic;
   BO5   : out std_logic;
   BO6   : out std_logic;
   BO7   : out std_logic;
   BO8   : out std_logic;
   BO9   : out std_logic;
   BO10  : out std_logic;
   BO11  : out std_logic;
   BO12  : out std_logic;
   BO13  : out std_logic;
   BO14  : out std_logic;
   BO15  : out std_logic;
   BO16  : out std_logic;

   BO17  : out std_logic;
   BO18  : out std_logic;
   BO19  : out std_logic;
   BO20  : out std_logic;
   BO21  : out std_logic;
   BO22  : out std_logic;
   BO23  : out std_logic;
   BO24  : out std_logic;

   AA1   : in  std_logic;
   AA2   : in  std_logic;
   AA3   : in  std_logic;
   AA4   : in  std_logic;
   AA5   : in  std_logic;
   AA6   : in  std_logic;

   AA7   : in  std_logic;
   AA8   : in  std_logic;
   AA9   : in  std_logic;
   AA10  : in  std_logic;
   AA11  : in  std_logic;
   AA12  : in  std_logic;
   AA13  : in  std_logic;
   AA14  : in  std_logic;
   AA15  : in  std_logic;
   AA16  : in  std_logic;

   ACS   : in  std_logic;
   AWE   : in  std_logic;
   AR    : in  std_logic;

   BA1   : in  std_logic;
   BA2   : in  std_logic;
   BA3   : in  std_logic;
   BA4   : in  std_logic;
   BA5   : in  std_logic;
   BA6   : in  std_logic;

   BA7   : in  std_logic;
   BA8   : in  std_logic;
   BA9   : in  std_logic;
   BA10  : in  std_logic;
   BA11  : in  std_logic;
   BA12  : in  std_logic;
   BA13  : in  std_logic;
   BA14  : in  std_logic;
   BA15  : in  std_logic;
   BA16  : in  std_logic;

   BCS   : in  std_logic;
   BWE   : in  std_logic;
   BR    : in  std_logic
);
end NX_RAM;

architecture NX_RTL of NX_RAM is
    attribute NX_TYPE :string;
    attribute NX_TYPE of NX_RTL: architecture is "PHY";

    attribute NX_USE :string;
    attribute NX_USE of NX_RTL: architecture is "NX_RAM";
begin
end NX_RTL;

----------------------------------------------------------------------------------------------------

-- =================================================================================================
--   NX_RAM_WRAP definition                                                             2017/09/25
-- =================================================================================================

library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;

entity NX_RAM_WRAP is
generic (
   std_mode     : string := ""; -- standard mode [FAST_2kx18, SLOW_2kx18, NOECNOECC24, ...] empty for raw
   mcka_edge    : bit := '0';   -- 0: rising edge for port A clock - 1: falling edge
   mckb_edge    : bit := '0';   -- 0: rising edge for port B clock - 1: falling edge
   pcka_edge    : bit := '0';   -- 0: rising edge for pipe A clock - 1: falling edge
   pckb_edge    : bit := '0';   -- 0: rising edge for pipe B clock - 1: falling edge

   pipe_ia      : bit := '0';   -- 0: no pipe on port A input  - 1: pipe on port A input
   pipe_ib      : bit := '0';   -- 0: no pipe on port B input  - 1: pipe on port B input
   pipe_oa      : bit := '0';   -- 0: no pipe on port A output - 1: pipe on port A output
   pipe_ob      : bit := '0';   -- 0: no pipe on port B output - 1: pipe on port B output

   raw_config0  : bit_vector( 3 downto 0) := B"0000";			-- PRC
   raw_config1  : bit_vector(15 downto 0) := B"0000000000000000";	-- MOD

   -- For specific NG_LARGE Extended Features
   raw_l_enable : bit := '0';                          -- '0' for NG-MEDIUM, '1' for NG-LARGE extended modes (NO_ECC x3 & x6) + scrubbing, test...
   raw_l_extend : bit_vector( 3 downto 0) := B"0000";  -- Extended modes for NG-LARGE (Scrubbing, test... )

   mem_ctxt     : string := ""                         -- context initialization
);
port (
   ACK  : in  std_logic;
   ACKD : in  std_logic;
   ACKR : in  std_logic;
   BCK  : in  std_logic;
   BCKD : in  std_logic;
   BCKR : in  std_logic;

   AI   : in  std_logic_vector(23 downto 0);
   BI   : in  std_logic_vector(23 downto 0);

   ACOR : out std_logic;
   AERR : out std_logic;
   BCOR : out std_logic;
   BERR : out std_logic;

   AO   : out std_logic_vector(23 downto 0);
   BO   : out std_logic_vector(23 downto 0);
   AA   : in  std_logic_vector(15 downto 0);

   ACS  : in  std_logic;
   AWE  : in  std_logic;
   AR   : in  std_logic;

   BA   : in  std_logic_vector(15 downto 0);

   BCS  : in  std_logic;
   BWE  : in  std_logic;
   BR   : in  std_logic
);
end NX_RAM_WRAP;


`protect begin_protected
`protect version = 1
`protect encrypt_agent = "NanoXplore"
`protect key_keyowner = "Mentor Graphics Corporation", key_keyname = "MGC-VERIF-SIM-RSA-2", key_method = "rsa"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 256)
`protect key_block
DRKsP5ah/kcwtpMP5DVErD9hkR+g/4qwrtSd2EkKSWpJXF/tO7q4p+MbLlRXheAT
j5o3o4YiB/AM88I0iJgnkMcJxIuJANwexb4LUPNSTX7p3q6ZNNiW1r9ToFp34QdI
el+yJaM+jpg0o/yiIuUSmxRHOqSZRYiTeu7lV0nc3zE/lZc6FGW0GywL2mixPR75
1e3CHT3Qj2OR6he6AqWvhT1LOVnbJbs69zk83DhgmzxtOssfFfdJOi+stgabyIRO
P8yOcqrZsi+F0LuLEEx/2VxoaoIEF9uYqbWYCXI1J7jOVeH/xPcZTL7t/gG4R1+w
BHbptmwwbPqr2tagMj+c8w==
`protect data_method = "aes256-cbc"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 8672)
`protect data_block
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
`protect end_protected


architecture NX_RTL of NX_RAM_WRAP is
   attribute NX_TYPE :string;
   attribute NX_TYPE of NX_RTL: architecture is "WRAPPER";

component NX_RAM
generic (
   std_mode     : string := ""; -- standard mode [FAST_2kx18, SLOW_2kx18, NOECNOECC24, ...] empty for raw
   mcka_edge    : bit := '0';   -- 0: rising edge for port A clock - 1: falling edge
   mckb_edge    : bit := '0';   -- 0: rising edge for port B clock - 1: falling edge
   pcka_edge    : bit := '0';   -- 0: rising edge for pipe A clock - 1: falling edge
   pckb_edge    : bit := '0';   -- 0: rising edge for pipe B clock - 1: falling edge

   pipe_ia      : bit := '0';   -- 0: no pipe on port A input  - 1: pipe on port A input
   pipe_ib      : bit := '0';   -- 0: no pipe on port B input  - 1: pipe on port B input
   pipe_oa      : bit := '0';   -- 0: no pipe on port A output - 1: pipe on port A output
   pipe_ob      : bit := '0';   -- 0: no pipe on port B output - 1: pipe on port B output

   raw_config0  : bit_vector( 3 downto 0) := B"0000";			-- PRC
   raw_config1  : bit_vector(15 downto 0) := B"0000000000000000";	-- MOD

   raw_l_enable : bit := '0';                         -- '0' for NG-MEDIUM, '1' for NG-LARGE extended modes (NO_ECC x3 & x6) + scrubbing, test...
   raw_l_extend : bit_vector( 3 downto 0) := B"0000"; -- Extended modes for NG-LARGE (Scrubbing, test... )

   mem_ctxt     : string := ""                        -- context initialization
);
port (
   ACK   : in  std_logic;
   ACKC  : in  std_logic;
   ACKD  : in  std_logic;
   ACKR  : in  std_logic;
   BCK   : in  std_logic;
   BCKC  : in  std_logic;
   BCKD  : in  std_logic;
   BCKR  : in  std_logic;

   AI1   : in  std_logic;
   AI2   : in  std_logic;
   AI3   : in  std_logic;
   AI4   : in  std_logic;
   AI5   : in  std_logic;
   AI6   : in  std_logic;
   AI7   : in  std_logic;
   AI8   : in  std_logic;
   AI9   : in  std_logic;
   AI10  : in  std_logic;
   AI11  : in  std_logic;
   AI12  : in  std_logic;
   AI13  : in  std_logic;
   AI14  : in  std_logic;
   AI15  : in  std_logic;
   AI16  : in  std_logic;

   AI17  : in  std_logic;
   AI18  : in  std_logic;
   AI19  : in  std_logic;
   AI20  : in  std_logic;
   AI21  : in  std_logic;
   AI22  : in  std_logic;
   AI23  : in  std_logic;
   AI24  : in  std_logic;

   BI1   : in  std_logic;
   BI2   : in  std_logic;
   BI3   : in  std_logic;
   BI4   : in  std_logic;
   BI5   : in  std_logic;
   BI6   : in  std_logic;
   BI7   : in  std_logic;
   BI8   : in  std_logic;
   BI9   : in  std_logic;
   BI10  : in  std_logic;
   BI11  : in  std_logic;
   BI12  : in  std_logic;
   BI13  : in  std_logic;
   BI14  : in  std_logic;
   BI15  : in  std_logic;
   BI16  : in  std_logic;

   BI17  : in  std_logic;
   BI18  : in  std_logic;
   BI19  : in  std_logic;
   BI20  : in  std_logic;
   BI21  : in  std_logic;
   BI22  : in  std_logic;
   BI23  : in  std_logic;
   BI24  : in  std_logic;

   ACOR  : out std_logic;
   AERR  : out std_logic;
   BCOR  : out std_logic;
   BERR  : out std_logic;

   AO1   : out std_logic;
   AO2   : out std_logic;
   AO3   : out std_logic;
   AO4   : out std_logic;
   AO5   : out std_logic;
   AO6   : out std_logic;
   AO7   : out std_logic;
   AO8   : out std_logic;
   AO9   : out std_logic;
   AO10  : out std_logic;
   AO11  : out std_logic;
   AO12  : out std_logic;
   AO13  : out std_logic;
   AO14  : out std_logic;
   AO15  : out std_logic;
   AO16  : out std_logic;

   AO17  : out std_logic;
   AO18  : out std_logic;
   AO19  : out std_logic;
   AO20  : out std_logic;
   AO21  : out std_logic;
   AO22  : out std_logic;
   AO23  : out std_logic;
   AO24  : out std_logic;

   BO1   : out std_logic;
   BO2   : out std_logic;
   BO3   : out std_logic;
   BO4   : out std_logic;
   BO5   : out std_logic;
   BO6   : out std_logic;
   BO7   : out std_logic;
   BO8   : out std_logic;
   BO9   : out std_logic;
   BO10  : out std_logic;
   BO11  : out std_logic;
   BO12  : out std_logic;
   BO13  : out std_logic;
   BO14  : out std_logic;
   BO15  : out std_logic;
   BO16  : out std_logic;

   BO17  : out std_logic;
   BO18  : out std_logic;
   BO19  : out std_logic;
   BO20  : out std_logic;
   BO21  : out std_logic;
   BO22  : out std_logic;
   BO23  : out std_logic;
   BO24  : out std_logic;

   AA1   : in  std_logic;
   AA2   : in  std_logic;
   AA3   : in  std_logic;
   AA4   : in  std_logic;
   AA5   : in  std_logic;
   AA6   : in  std_logic;

   AA7   : in  std_logic;
   AA8   : in  std_logic;
   AA9   : in  std_logic;
   AA10  : in  std_logic;
   AA11  : in  std_logic;
   AA12  : in  std_logic;
   AA13  : in  std_logic;
   AA14  : in  std_logic;
   AA15  : in  std_logic;
   AA16  : in  std_logic;

   ACS   : in  std_logic;
   AWE   : in  std_logic;
   AR    : in  std_logic;

   BA1   : in  std_logic;
   BA2   : in  std_logic;
   BA3   : in  std_logic;
   BA4   : in  std_logic;
   BA5   : in  std_logic;
   BA6   : in  std_logic;

   BA7   : in  std_logic;
   BA8   : in  std_logic;
   BA9   : in  std_logic;
   BA10  : in  std_logic;
   BA11  : in  std_logic;
   BA12  : in  std_logic;
   BA13  : in  std_logic;
   BA14  : in  std_logic;
   BA15  : in  std_logic;
   BA16  : in  std_logic;

   BCS   : in  std_logic;
   BWE   : in  std_logic;
   BR    : in  std_logic
);
end component;

begin

ram: NX_RAM generic map (
   std_mode     => std_mode,
   mcka_edge    => mcka_edge,
   mckb_edge    => mckb_edge,
   pcka_edge    => pcka_edge,
   pckb_edge    => pckb_edge,
   pipe_ia      => pipe_ia,
   pipe_ib      => pipe_ib,
   pipe_oa      => pipe_oa,
   pipe_ob      => pipe_ob,
   raw_config0  => raw_config0,
   raw_config1  => raw_config1,
   raw_l_enable => raw_l_enable,
   raw_l_extend => raw_l_extend,
   mem_ctxt     => mem_ctxt
)
port map(
   ACK   => ACK,
   ACKC  => ACK,
   ACKD  => ACKD,
   ACKR  => ACKR,
   BCK   => BCK,
   BCKC  => BCK,
   BCKD  => BCKD,
   BCKR  => BCKR,

   AI1   => AI(0),
   AI2   => AI(1),
   AI3   => AI(2),
   AI4   => AI(3),
   AI5   => AI(4),
   AI6   => AI(5),
   AI7   => AI(6),
   AI8   => AI(7),
   AI9   => AI(8),
   AI10  => AI(9),
   AI11  => AI(10),
   AI12  => AI(11),
   AI13  => AI(12),
   AI14  => AI(13),
   AI15  => AI(14),
   AI16  => AI(15),

   AI17  => AI(16),
   AI18  => AI(17),
   AI19  => AI(18),
   AI20  => AI(19),
   AI21  => AI(20),
   AI22  => AI(21),
   AI23  => AI(22),
   AI24  => AI(23),

   BI1   => BI(0),
   BI2   => BI(1),
   BI3   => BI(2),
   BI4   => BI(3),
   BI5   => BI(4),
   BI6   => BI(5),
   BI7   => BI(6),
   BI8   => BI(7),
   BI9   => BI(8),
   BI10  => BI(9),
   BI11  => BI(10),
   BI12  => BI(11),
   BI13  => BI(12),
   BI14  => BI(13),
   BI15  => BI(14),
   BI16  => BI(15),

   BI17  => BI(16),
   BI18  => BI(17),
   BI19  => BI(18),
   BI20  => BI(19),
   BI21  => BI(20),
   BI22  => BI(21),
   BI23  => BI(22),
   BI24  => BI(23),

   ACOR  => ACOR,
   AERR  => AERR,
   BCOR  => BCOR,
   BERR  => BERR,

   AO1   => AO(0),
   AO2   => AO(1),
   AO3   => AO(2),
   AO4   => AO(3),
   AO5   => AO(4),
   AO6   => AO(5),
   AO7   => AO(6),
   AO8   => AO(7),
   AO9   => AO(8),
   AO10  => AO(9),
   AO11  => AO(10),
   AO12  => AO(11),
   AO13  => AO(12),
   AO14  => AO(13),
   AO15  => AO(14),
   AO16  => AO(15),

   AO17  => AO(16),
   AO18  => AO(17),
   AO19  => AO(18),
   AO20  => AO(19),
   AO21  => AO(20),
   AO22  => AO(21),
   AO23  => AO(22),
   AO24  => AO(23),

   BO1   => BO(0),
   BO2   => BO(1),
   BO3   => BO(2),
   BO4   => BO(3),
   BO5   => BO(4),
   BO6   => BO(5),
   BO7   => BO(6),
   BO8   => BO(7),
   BO9   => BO(8),
   BO10  => BO(9),
   BO11  => BO(10),
   BO12  => BO(11),
   BO13  => BO(12),
   BO14  => BO(13),
   BO15  => BO(14),
   BO16  => BO(15),

   BO17  => BO(16),
   BO18  => BO(17),
   BO19  => BO(18),
   BO20  => BO(19),
   BO21  => BO(20),
   BO22  => BO(21),
   BO23  => BO(22),
   BO24  => BO(23),

   AA1   => AA(0),
   AA2   => AA(1),
   AA3   => AA(2),
   AA4   => AA(3),
   AA5   => AA(4),
   AA6   => AA(5),

   AA7   => AA(6),
   AA8   => AA(7),
   AA9   => AA(8),
   AA10  => AA(9),
   AA11  => AA(10),
   AA12  => AA(11),
   AA13  => AA(12),
   AA14  => AA(13),
   AA15  => AA(14),
   AA16  => AA(15),

   ACS   => ACS,
   AWE   => AWE,
   AR    => AR,

   BA1   => BA(0),
   BA2   => BA(1),
   BA3   => BA(2),
   BA4   => BA(3),
   BA5   => BA(4),
   BA6   => BA(5),

   BA7   => BA(6),
   BA8   => BA(7),
   BA9   => BA(8),
   BA10  => BA(9),
   BA11  => BA(10),
   BA12  => BA(11),
   BA13  => BA(12),
   BA14  => BA(13),
   BA15  => BA(14),
   BA16  => BA(15),

   BCS   => BCS,
   BWE   => BWE,
   BR    => BR
   );

end NX_RTL;
`protect begin_protected
`protect version = 1
`protect encrypt_agent = "NanoXplore"
`protect key_keyowner = "Mentor Graphics Corporation", key_keyname = "MGC-VERIF-SIM-RSA-2", key_method = "rsa"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 256)
`protect key_block
Zwmt1iMnxZSmk4v4Ou/Q11P9UV5dMP74omy5d08yNYEXZQ9KXKx86ovwCFEUXQ0K
5gW8HZXShktdRoA6P6Dq0V+xDGWwg/7wu5aWRKJtEHCwaI8eiQy2KnnaWfYbQY3z
fm3fOoZ/0ABCInuN+8vU6+X93IK0N3Z4Gg0Yv9dZLhIvfbkBRMi15kf1/VaQOzxE
KPoGZ/4ZhB3/NRYFH+t5V0UguUh31C20IEbTSLIpUuUEUpeJRapvrDZLq7EwxUS1
St6wt3LH1uvGq17btdFuFi4bwPDWAFi0mKEi8AQdJhWAAlR8a9dkaT3vIejBfYrk
JLy+kEEUw5I9DKCN0ZnLHg==
`protect data_method = "aes256-cbc"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 7808)
`protect data_block
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
`protect end_protected

`protect begin_protected
`protect version = 1
`protect encrypt_agent = "NanoXplore"
`protect key_keyowner = "Mentor Graphics Corporation", key_keyname = "MGC-VERIF-SIM-RSA-2", key_method = "rsa"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 256)
`protect key_block
A4+NIGaqLHVzsA8z0W2kjIECkik4932u2Lj/UxeANrfTLfm17FotREQbkjYVHTNq
s4kuCzwF2Z/g4z7Z20lpP6RGbgBv1667GwYaHFfdBnIkUhtL/5iUXiBxsJ6QQqPg
aSZYhD43vbVqSB1RsfKcJsuy3uDipVk3as3FRNcrv60AEojmkuFfKnwInZT6Ya3V
hK2tBjH1kHm8cklbWT70E5d+YX2aWRN6rhN5dldP7UcFzgfA/bYuW5At7qKpeGl8
AywI6I1+TF2emRcS48wqPMbHur/T+A6u1X1h1/ukiI05MJEDxKI5QszcZIKedkbM
6yHewpN5uOqdlscebkhrSg==
`protect data_method = "aes256-cbc"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 13664)
`protect data_block
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
`protect end_protected

`protect begin_protected
`protect version = 1
`protect encrypt_agent = "NanoXplore"
`protect key_keyowner = "Mentor Graphics Corporation", key_keyname = "MGC-VERIF-SIM-RSA-2", key_method = "rsa"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 256)
`protect key_block
LQU36JfgbbvM3dDNpfy9XUYgc3CUVXEzTsPWEqUWkLk6wJ0/dRO+C8bsPzw/I8aZ
w91yGSmOmKZdsPbI5XdKTDbvDiW9dKG7tikPSA8udMeRgNpanqc0i5ql7yD3DNUr
dNSHN+M9VKKs9bykSxWeB5rjRGZOGQxkuZ6Cw5jrv1KsDZyXmVLOCp24Re+pQyW8
S9trpNDWgHnHgATQ1jRcPXE2qRwA9jh3DqGprQ2auwyvoJ4t7ZUnpFJwhOOtN0DB
o1OrsO/+oPK5rHjlIkTYpM1HX8Eb9g4bApwnlv/9dIoeqSngPjlWXmyGGBtfwNB/
F/WbQe71yxRYMrWQV55moA==
`protect data_method = "aes256-cbc"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 10352)
`protect data_block
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
`protect end_protected

`protect begin_protected
`protect version = 1
`protect encrypt_agent = "NanoXplore"
`protect key_keyowner = "Mentor Graphics Corporation", key_keyname = "MGC-VERIF-SIM-RSA-2", key_method = "rsa"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 256)
`protect key_block
DE+ITyzvbxh7JiHdh+3eZc6+cznAsOnQulDTDOffOVNpnW0gp6Qze439mrvJ/eA2
gyZjnY7OLlZPZQaXzwqT+rs6ygie8NsLgDjXaSpAplhk4Uux67ZRaZkCJ/fV3aR1
vUfXOkEOMey7BX63acdOMb3f9mfSsnvhDThPZ5g7V6AYhsnLQM/9sDCrC2b25dio
ffzJpLLcFO6XmoYsRkXvMsNXb+AJJ6iqfUt4HUqZP1mG3W8xO7YcgJrGwsJI0Z0X
tpnw0sxfz0/KbqJlCU05mqMj2ONDJpFD+r6UOZGV4QAD54zrSNt+fXti3DCKGEac
VG+SaAdnuM919XO24GZWTg==
`protect data_method = "aes256-cbc"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 1888)
`protect data_block
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
FcJJPPk9xdtVj57WJGrxgw==
`protect end_protected

`protect begin_protected
`protect version = 1
`protect encrypt_agent = "NanoXplore"
`protect key_keyowner = "Mentor Graphics Corporation", key_keyname = "MGC-VERIF-SIM-RSA-2", key_method = "rsa"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 256)
`protect key_block
UsH211VaNIF4vyLD0HrX/D4k2doWPwwn+uiqGWh5MoPwr2lxFzoxLAVtIDYhijMD
c2In68UpKTmkCRPyZqv39PeZgujxvUjeG3RBuWrbesGIw8WxHuWCYqsknjHSJj9i
JZ9mkso1/s2TMBgLXWFl5A6jZ1Ig4C47bnA5HM8tIbrmTPp60ZazY+idEFZj96jQ
uzrQNWBKwL4SkssdKibkF3L9ZZ0KkjiGhno62AYus+K28uHSm0SUSTdPvwlKO3dA
rp4qL/SQYN4VpwuJnuK6+SK2aSTo6JbUruAAjRLjSPANVV7fN1ypZy/t4NlgMdnb
ZXpdjX2PuZhzO+FXB+DFKA==
`protect data_method = "aes256-cbc"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 1680)
`protect data_block
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
`protect end_protected

`protect begin_protected
`protect version = 1
`protect encrypt_agent = "NanoXplore"
`protect key_keyowner = "Mentor Graphics Corporation", key_keyname = "MGC-VERIF-SIM-RSA-2", key_method = "rsa"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 256)
`protect key_block
b5KwgNCVe1fjqD/Mns3XIyFxFWPLVI24Q/JEUnsN2NXJOfIDtxK08q+zPihq+Uq4
M2lQd3EATschVKADClnbRODRI4gfy3j3UpLaHBijhOMsSjzRXjAAOgzxeXqXocw9
+SA2jPwqLLRJD3iXBa5woCPz9jYLGMyjkTtA4fVq79oGePaKu/xYrt01IOF0zSSG
/l6DhdKPZJzevuV444BwH1gcK2eWD62ia+AcN5BWoY1pDzadznlCPBlOBR90SebC
O4TumLtzNOktC3bJFOCWEl3M5Pz6D//YAFirir3OpcyzR0f6LoX3RQZdvHNpbZjf
NWWcLOxUjwlOKNYVf6VTwA==
`protect data_method = "aes256-cbc"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 12624)
`protect data_block
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
eMrDMOugb+o4G9QQMyd5k1usFZHjQG/TJt7yst6IQmgm8X1xbb3AXsqrxoI2k6Io
1jv2PgUKRjt+fG7pClwW73ogGiub+rP42ZxwCbUjYoqujaUbJBdCErw1qU5hLABz
cLzOBw/1TVSFZqSqWjosuAVHgSqxLDnrIxsUFH0TG+EQGA5U8oilbT+aHIj07BW+
4Anq+r4xu60hLcnVatU/T4TJau//xJk4XHNI2BK4+Aq18oz/Z5QXpUqM0OI5F08W
Ksr3+mC6gpLbrLApk+Dy0dLK0E6yTAhuUBafD9wUEuQ3t9pntDWLil9MJtn51FGS
XhpGa8fZ/yh+Sjl7mJu/UEwR9HA4Dpg2W6wzzmperjZcPKVRxTZexUUvDvhzI0wk
MkF8uxRXjdJX6Uvt4AeFV6ICfsLS7zfRbKZI4YPdds8eotwAMCxp7GKp40KOqnuw
mfIuHdozJwuOf8RJwhd6REUF8Kk1PG9g5G4UCF+qovC/o+YMD6NmrMixIU26szny
RXnF6OROa5Nj/zi8vQ4Tqxa2p9Ph01sULx+z5Dwh57Xsv5cfqIJo+n2Kbk+akW/H
6qHqvlR3VYmoQDhEJAaX+s1ni4q6kCMqjWmfO1CDLFlEAR5F8kAZEL4Q3ZzppudB
mVW1fXd7KjHrH8uONPUryAXrQ5wE120xck8MMPWMUQlXncrrsLv9vpr/q339LeG6
1p/GJ0J35b2dbQYbgw0JzOMzkr00jaAoRx7S4kD2v7f7GLSdUlRd5levS3WnE5Zq
KlOAvytTcy89/+vSkrO8SadheEcMyirfBFlS+st6JBugRLXDjoD1GTiT4TiG9zNp
X1AmSQ5KowjVz1xBZKiN4RSV8s5TlbQThoW1/CFCNAPX2uMWZwPnUQMHInC8+NPZ
m534Mk+mNprFcjkSOB2afi1sJFYEJhpyNcADttZFfnW2KZuPYXbTNAHysVMDDSU1
NklDeeScxTZYacVTen61da7ngVbhIAFTIFCflhEg+N7cwTPFxEml0Y+jnrOHzaNH
m96dhZO93wMpkViY4TD5Alt/N7XTXku83caue45P95Ii89EHFbypEIyPwYN4paTu
+fz8TSHR3XOQK9BcOVQAUdPT4FJzpKl03uWNBklorYGN8xhvuIcRGaZDuDOqLZjL
Z028lGPET84m7OmCwucDXiFLN/XYoEbqSuHBxpnX0xtrLPkbhN4azfaFeGvlhqeR
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
`protect end_protected

-- =================================================================================================
--   NX_ECC definition                                                                  2020/05/12
-- =================================================================================================

library ieee;
use ieee.std_logic_1164.all;

entity NX_ECC is
    port(
	CKD : in std_logic;
	CHK : in std_logic;
	COR : out std_logic;
	ERR : out std_logic
    );
end NX_ECC;

architecture NX_RTL of NX_ECC is
    attribute NX_TYPE :string;
    attribute NX_TYPE of NX_RTL: architecture is "PHY";

    attribute NX_USE :string;
    attribute NX_USE of NX_RTL: architecture is "NX_ECC";
begin
end NX_RTL;

----------------------------------------------------------------------------------------------------
`protect begin_protected
`protect version = 1
`protect encrypt_agent = "NanoXplore"
`protect key_keyowner = "Mentor Graphics Corporation", key_keyname = "MGC-VERIF-SIM-RSA-2", key_method = "rsa"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 256)
`protect key_block
gOyguJZE61nW6ouELP264xicP+Rh57AjVRPGFQjIjW3JNOpR7aNNpz+3gXYkiAX/
3qmmn79Bsu3m7DVjifgg2mcG96hLuEiseUv4FVdr2kbsR/WEnyGbyKeQzVGA5Im/
/nnzlm9o+CKwtXu+OaoRi3t97twBdLFi3JIepvRLTw/74d47WUuDC2itqHAAMjgs
sC3acIKwyRghV6BNFu2e+gUpMlmX5ccL848MUz1ibYGXDfZKyNHh0s3HNSANEtCZ
WFiFtJU8Wk4D0Ry4taIuKp5U5ju9if8/vrQHDAuxdy0BQPW9I+aVxA3Z9gb5/890
fffQJ/RRxJ7u45GCWOoWFg==
`protect data_method = "aes256-cbc"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 2544)
`protect data_block
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
`protect end_protected

`protect begin_protected
`protect version = 1
`protect encrypt_agent = "NanoXplore"
`protect key_keyowner = "Mentor Graphics Corporation", key_keyname = "MGC-VERIF-SIM-RSA-2", key_method = "rsa"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 256)
`protect key_block
ZGYVzTSHZdq1PcaFAgLYN1WIG9Sp0N/i+zybAUNz57AykmaX+VQMUT/tXGSitpYS
Z6z/2MJvH1L/f3TZZOeRvw5t0JFyB1bA0VNzhnrrVo5gEpr4XoUhVQiIogebn2yD
1h2RGLx/3pkVFS6DtYTd0cG8m8LMqlvq6hunYb30nTnw7yS72MnOs4y0gLKwVI9p
ZyK/4CZt4tp2PUf31bGesdjKei4xvG6h5sfENVgZ4kQbErUZMZj39UHxr5jqyFJl
yn4rFzGngrrsi7hmcI59OBPwlBeup2MJii9+QhL+IADe0c0tugyKU3uhiH/cL5Lg
FlQB4DzfqgTbLU3nV1xS4Q==
`protect data_method = "aes256-cbc"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 15840)
`protect data_block
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
`protect end_protected

-- =================================================================================================
--   NX_PLL_L definition                                                                2018/11/30
-- =================================================================================================

library IEEE;
use IEEE.STD_LOGIC_1164.all;
use IEEE.STD_LOGIC_arith.ALL;
use IEEE.STD_LOGIC_unsigned.ALL;

entity NX_PLL_L is
generic (
    location	      : string := "";
                      
    ref_intdiv        : integer   range 0 to 31 := 0;  -- 0 to 31  (%1 to %32)
    ref_osc_on        : bit := '0';                    -- 0: disabled - 1: enabled
                      
    cfg_use_pll       : std_logic:='1';                -- use or bypass PLL
                      
    ext_fbk_on        : bit := '0';                    -- 0: disabled - 1: enabled
                      
    fbk_intdiv        : integer   range 0 to 31 := 2;  -- 0 to 31  (%4 to %66 by step 2)
                      
    fbk_delay_on      : bit := '0';                    -- 0: no delay - 1: delay
    fbk_delay         : integer   range 0 to 63 := 0;  -- 0 to 63

    clk_outdivp1      : integer   range 0 to 7 := 0;   -- 0 to 7  P1 (2^n    : %1 to %128)
    clk_outdivp2      : integer   range 0 to 7 := 0;   -- 0 to 7  P2 (2^(n+1): %2 to %256)
    clk_outdivo1      : integer   range 0 to 7 := 0;   -- 0 to 7  O1 ((2n)+3 : %3 to  %17)
    clk_outdivp3o2    : integer   range 0 to 7 := 0    -- 0 to 7  P3 (2^(n+2): %4 to %512)
                                                       --         O2 ((2n)+5 : %5 to  %19)
);
port (
    REF               : in  std_logic;
    FBK               : in  std_logic;

    R                 : in  std_logic := '0';

    VCO               : out std_logic; -- CLK_PLL
    LDFO              : out std_logic; -- LDF_DIV
    REFO              : out std_logic; -- REF_DIV

    DIVO1             : out std_logic; -- (2n)+3
    DIVO2             : out std_logic; -- (2n)+5

    DIVP1             : out std_logic; -- 2^n
    DIVP2             : out std_logic; -- 2^(n+1)
    DIVP3             : out std_logic; -- 2^(n+2)
    OSC               : out std_logic; -- 100MHz

    PLL_LOCKED        : out std_logic;
    CAL_LOCKED        : out std_logic
);
end NX_PLL_L;

architecture NX_RTL of NX_PLL_L is
    attribute NX_TYPE :string;
    attribute NX_TYPE of NX_RTL: architecture is "PHY";

    attribute NX_USE :string;
    attribute NX_USE of NX_RTL: architecture is "NX_PLL_L";
begin
end NX_RTL;

`protect begin_protected
`protect version = 1
`protect encrypt_agent = "NanoXplore"
`protect key_keyowner = "Mentor Graphics Corporation", key_keyname = "MGC-VERIF-SIM-RSA-2", key_method = "rsa"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 256)
`protect key_block
VEFX/bnsY0srG8ouVtfTF0bEO3LZX6WXlqTE3tNkNE4fs2c5Zi3loU1z39wZY3wk
GIRvL8UYVIxLdLQufcLzgWLOIO53esdMu0MQxXj/p7hJfIJPukFNaRLvMhqamqiq
s7JF4fKbatuBJDv+fVygue034eIKdIMvf4Ec/MHkITvIxMxWDt+LCiokkweBR8Tg
+tku6+buFn5JNF2cicbm8PgYF2P7wN3d0mGiudmBMt+3GcV+YZrWxgbpWsDWeyGc
zRwBdImaxgVx9lxwJRi+iVq/gg58ogDRDPOWEEO+3AdAJDf1bsWOAwrjyF0egO4u
xf08f0rEv1IclIM9I86neA==
`protect data_method = "aes256-cbc"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 6416)
`protect data_block
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
`protect end_protected

-- =================================================================================================
--   NX_WFG_L definition                                                                2018/11/30
-- =================================================================================================

library IEEE;
use IEEE.STD_LOGIC_1164.all;
use IEEE.STD_LOGIC_arith.ALL;
use IEEE.STD_LOGIC_unsigned.ALL;

entity NX_WFG_L is
generic (
    location    : string := "";
    wfg_edge    : bit := '0';                              -- 0: no invert / Rising
                                                           -- 1:    invert / Falling

    mode        : bit := '0';                              -- 0: no pattern - 1: pattern
    pattern_end : integer   range 0 to 15 := 1;            -- 0: to 15 (1 step to 16 steps)
    pattern     : bit_vector(0 to 15) := (others => '0');  -- pattern p0 ... p15

    delay_on    : bit := '0';                              -- 0: no delay - 1: delay
    delay       : integer   range 0 to 63 := 0             -- 0 to 63 (1 unit to 64 unit)
);
port (
    R   : in  std_logic := '0';
    SI  : in  std_logic;
    ZI  : in  std_logic;
    RDY : in  std_logic := '1';
    SO  : out std_logic;
    ZO  : out std_logic
);
end NX_WFG_L;

architecture NX_RTL of NX_WFG_L is
    attribute NX_TYPE :string;
    attribute NX_TYPE of NX_RTL: architecture is "PHY";

    attribute NX_USE :string;
    attribute NX_USE of NX_RTL: architecture is "NX_WFG_L";
begin
end NX_RTL;

`protect begin_protected
`protect version = 1
`protect encrypt_agent = "NanoXplore"
`protect key_keyowner = "Mentor Graphics Corporation", key_keyname = "MGC-VERIF-SIM-RSA-2", key_method = "rsa"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 256)
`protect key_block
jIQOcbMvwayXF5eHwXhH8DASwPgepMi405hZ3KwUwpONLtsWMjlBhlgUPpMysvNn
tkiY1lqUvFd2Avf3a6dZnV0YokigWQuYG9PgSL8oANZaMgBA4dG285/+InWApPe2
oWGwSrwW81jJIGk/hZZgLvAa391ARRxdL0SBHuc0IY1jTfnxtgTODGorm2eHFWZ1
lKbPAM1xXID2kRaGGPzCGV95z81Malf53LC9MS/8xnURLXy36JtrYTcmcs8eDe61
iGX86zahiQSkGddmgcSERbXYqXKfN1LO+LhkpK42slH2KOe62liAv/pboRdGoR+u
yqLb2cmqbQJ1pMVkWQytig==
`protect data_method = "aes256-cbc"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 2112)
`protect data_block
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
`protect end_protected



